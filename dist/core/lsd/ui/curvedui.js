"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var s=t[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,i,s){return i&&e(t.prototype,i),s&&e(t,s),t}}(),CurveUI=function(){function e(t,i,s){var n=arguments.length<=3||void 0===arguments[3]?null:arguments[3],a=arguments.length<=4||void 0===arguments[4]?null:arguments[4];_classCallCheck(this,e),this.scene=t,this._image=i,this._name=s,this._mat=a,this.mesh=null,this.hSize=3,this.hitSphere=null,this._hitCallback=n,this.init(),this.alphamodes=[BABYLON.Engine.ALPHA_COMBINE,BABYLON.Engine.ALPHA_ADD,BABYLON.Engine.ALPHA_SUBTRACT,BABYLON.Engine.ALPHA_MULTIPLY,BABYLON.Engine.ALPHA_MAXIMIZED]}return _createClass(e,[{key:"setMeshVals",value:function(e){this.mesh=e,this.mesh.setGaze=this.setGaze,this.mesh.endGaze=this.endGaze,this.mesh.hitTime=null,this.mesh.setTimerInterval=this.setTimerInterval,this.mesh.intervalID=null,this.mesh.hitCallback=this._hitCallback,this.mesh.isPickable=!0}},{key:"init",value:function(){var e=new BABYLON.StandardMaterial(this._name+"mat",this.scene);e.specularPower=64,e.diffuseColor=new BABYLON.Color3(1,1,1),e.emissiveColor=new BABYLON.Color3(.99,.94,.94);var t=BABYLON.Mesh.DOUBLESIDE;null==this._mat?(e.diffuseTexture=new BABYLON.Texture(this._image,this.scene),e.diffuseTexture.hasAlpha=!0,e.useLogarithmicDepth=!0,e.disableDepthWrite=!1,e.alpha=1,e.hasAlpha=!0,e.backFaceCulling=!1):(this._mat.video.pause(),this._mat.video.isPlaying=!1,this._mat.video.addEventListener("playing",function(){this._mat.video.isPlaying=!0}.bind(this)),this._mat.video.addEventListener("pause",function(){this._mat.video.isPlaying=!1}.bind(this)),e.diffuseTexture=this._mat);for(var i=[],s=0;s<this.hSize;s++){for(var n=[],a=-2;2>=a;a++){var h=a,r=a*a/5,l=s;n.push(new BABYLON.Vector3(h,r,l))}i.push(n)}var u=BABYLON.Mesh.CreateRibbon(this._name,i,!1,!1,0,this.scene,!0,t);u.scaling.x=.5,u.scaling.y=.5,u.scaling.z=.5,u.material=e,window._mat=this._mat,"vid"==this._name&&(u.actionManager=new BABYLON.ActionManager(this.scene),u.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger,function(){this._mat.video.play()}))),this.setMeshVals(u),this.generateHitSphere()}},{key:"setTimerInterval",value:function(){this.intervalID=null,this.intervalID=setInterval(this.hitCallback,2e3)}},{key:"setGaze",value:function(){this.hitTime=(new Date).getTime(),this.setTimerInterval.apply(this)}},{key:"endGaze",value:function(){var e=(new Date).getTime(),t=e-this.hitTime;return this.hitTime=null,clearInterval(this.intervalID),t}},{key:"generateHitSphere",value:function(){this.hitSphere=BABYLON.Mesh.CreateSphere(this._name+"hitSphere",16,.1,this.scene),this.hitSphere.parent=this.mesh,this.hitSphere.position.z=1,this.hitSphere.position.y=1,this.hitSphere.scaling.y=4,this.hitSphere.scaling.x=4,this.hitSphere.scaling.z=4,this.hitSphere.isVisible=!1}}]),e}();module.exports=CurveUI;
//# sourceMappingURL=data:application/json;base64,