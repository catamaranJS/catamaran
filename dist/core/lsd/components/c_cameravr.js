"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,i,s){return i&&t(e.prototype,i),s&&t(e,s),e}}(),CES=require("CES"),BABYLON=require("../lib/babylon"),utils=require("../utils/utils"),defaults=utils.defaultArgs();defaults._name="camera";var c_cameravr=function(){function t(){var e=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];_classCallCheck(this,t),this.modal=document.createElement("div"),this.modal.classList.add("a-orientation-modal"),this.modal.style.display="none",this.cursor=e._cursor,this.cursorVR1=e._cursorVR1,this.cursorVR2=e._cursorVR2,document.body.appendChild(this.modal),this.canvasList=null,this.name=e._name,this.opts=e,this.obj,this.objVR=null,this.objOrthoVR=null,this.objOrtho=null,this.scene=e._scene,this.canvas=e._canvas,this.oneAxis=!0,this.mode="normal",this.hud=null,this.glitchEnabled=!1;var i=document.querySelectorAll("canvas");this.canvasList=Array.from(i),90!==Math.abs(window.orientation)&&CATAMARAN.isMobile()?(this.toggleCanvas(),this.modal.style.display="block"):(this.toggleCanvas("block"),this.initVR()),this.setListners(),this.options={name:this.name,init:this.constructor,obj:this.obj,objOrtho:this.objOrtho,objOrthoVR:this.objOrthoVR,objVR:this.objVR},CES.Component.extend(this.options)}return _createClass(t,[{key:"initVR",value:function(){this.objOrtho=new BABYLON.FreeCamera("FreeCamera",BABYLON.Vector3.Zero(),this.opts._scene),this.objOrtho.setTarget(BABYLON.Vector3.Zero()),this.objOrtho.layerMask=this.opts._activeDialogLayer,this.obj=new BABYLON.VirtualJoysticksCamera("VJCamera",this.opts._position,this.scene),this.obj.attachControl(this.canvas,!1);try{CATAMARAN.isMobile(),this.inertiaSpeed="Android"==CATAMARAN._mobileOS?.6:.7,this.rotationSpeed="Android"==CATAMARAN._mobileOS?4:2,this.obj.inputs.attached.virtualJoystick._rightjoystick.reverseUpDown=!0,this.obj.inputs.attached.virtualJoystick._rightjoystick._rotateOnAxisRelativeToMesh=!0,this.obj.inputs.attached.virtualJoystick.camera.inertia=this.inertiaSpeed,this.obj.inputs.attached.virtualJoystick._rightjoystick._inverseRotationSpeed=this.rotationSpeed,this.obj.inputs.attached.virtualJoystick._rightjoystick._rotationSpeed=this.rotationSpeed,this.oneAxis&&(this.obj.inputs.attached.virtualJoystick._rightjoystick._axisTargetedByUpAndDown=3,this.obj.inputs.attached.virtualJoystick._rightjoystick._axisTargetedByLeftAndRight=1,this.obj.inputs.attached.virtualJoystick._leftjoystick._axisTargetedByUpAndDown=2,this.obj.inputs.attached.virtualJoystick._leftjoystick._axisTargetedByLeftAndRight=0),this.objVR=new BABYLON.VRDeviceOrientationFreeCamera("VRCamera",this.opts._position,this.scene,!1),this.objVR.checkCollisions=!1,this.objVR.applyGravity=!1,this.objVR.attachControl(this.canvas,!0),this.objOrthoVR=new BABYLON.WebVRFreeCamera("VRCamera2",new BABYLON.Vector3.Zero,this.scene,!1),this.objOrthoVR.setTarget(BABYLON.Vector3.Zero()),this.objOrthoVR.layerMask=this.opts._activeDialogLayer,this.objOrthoVR._rigCameras[0].layerMask=this.opts._activeDialogLayer,this.objOrthoVR._rigCameras[1].layerMask=this.opts._activeDialogLayer,this.objVR.position=this.obj.position;var t=document.querySelectorAll("canvas");this.canvasList=Array.from(t),this.setCanvasTouch()}catch(e){console.log(e),console.log("requires -> https://code.jquery.com/pep/0.4.1/pep.js")}this.scene.activeCameras.push(this.obj),this.scene.activeCameras.push(this.objOrtho),this.scene.activeCamera=this.obj,this.pickResult=null,CATAMARAN.debug&&this.debug()}},{key:"debug",value:function(){window.objVR=this.objVR,window.obj=this.obj,window.objOrtho=this.objOrtho,window.objOrthoVR=this.objOrthoVR}},{key:"toggle",value:function(){"normal"==this.mode?(this.mode="vr",null!=this.scene&&(this.scene.activeCameras[0]=this.objVR,this.scene.activeCameras[1]=this.objOrthoVR,this.cursor.position.z=30,this.glitchEnabled)):(this.mode="normal",null!=this.scene&&(this.scene.activeCameras[0]=this.obj,this.scene.activeCameras[1]=this.objOrtho,this.cursor.position.z=100))}},{key:"readDeviceOrientation",value:function(){90===Math.abs(window.orientation)?(this.toggleCanvas("block"),null==this.objVR&&this.initVR(),this.landscapeMode=!0,this.modal.style.display="none"):(this.toggleCanvas(),this.modal.style.display="block",this.landscapeMode=!1),this.setCanvasTouch(),this.scene.getEngine().resize()}},{key:"toggleCanvas",value:function(){var t=arguments.length<=0||void 0===arguments[0]?"none":arguments[0];document.querySelector(".vr-button").style.display=t}},{key:"rayPick",value:function(){this.pickResult=this.scene.pick(this.scene.pointerX,this.scene.pointerY)}},{key:"setCanvasTouch",value:function(){for(var t=0;t<this.canvasList.length;t++)this.canvasList[t].setAttribute("touch-action","none"),this.canvasList[t].style.width="",this.canvasList[t].style.height="",this.canvasList[t].height=document.documentElement.clientHeight,this.canvasList[t].width=document.documentElement.clientWidth}},{key:"setListners",value:function(){this.setCanvasTouch(),document.querySelector(".vr-button").addEventListener("click",this.toggle.bind(this)),window.addEventListener("orientationchange",this.readDeviceOrientation.bind(this),!1),window.addEventListener("resize",function(){this.setCanvasTouch(),this.scene.getEngine().resize()}.bind(this))}}]),t}();module.exports=c_cameravr;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2NvbXBvbmVudHMvY19jYW1lcmF2ci5qcyJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIkNFUyIsInJlcXVpcmUiLCJCQUJZTE9OIiwidXRpbHMiLCJkZWZhdWx0cyIsImRlZmF1bHRBcmdzIiwiX25hbWUiLCJjX2NhbWVyYXZyIiwiX29wdHMiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJ0aGlzIiwibW9kYWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzdHlsZSIsImRpc3BsYXkiLCJjdXJzb3IiLCJfY3Vyc29yIiwiY3Vyc29yVlIxIiwiX2N1cnNvclZSMSIsImN1cnNvclZSMiIsIl9jdXJzb3JWUjIiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjYW52YXNMaXN0IiwibmFtZSIsIm9wdHMiLCJvYmoiLCJvYmpWUiIsIm9iak9ydGhvVlIiLCJvYmpPcnRobyIsInNjZW5lIiwiX3NjZW5lIiwiY2FudmFzIiwiX2NhbnZhcyIsIm9uZUF4aXMiLCJtb2RlIiwiaHVkIiwiZ2xpdGNoRW5hYmxlZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJNYXRoIiwiYWJzIiwid2luZG93Iiwib3JpZW50YXRpb24iLCJDQVRBTUFSQU4iLCJpc01vYmlsZSIsInRvZ2dsZUNhbnZhcyIsImluaXRWUiIsInNldExpc3RuZXJzIiwib3B0aW9ucyIsImluaXQiLCJjb25zdHJ1Y3RvciIsIkNvbXBvbmVudCIsImV4dGVuZCIsInZhbHVlIiwiRnJlZUNhbWVyYSIsIlZlY3RvcjMiLCJaZXJvIiwic2V0VGFyZ2V0IiwibGF5ZXJNYXNrIiwiX2FjdGl2ZURpYWxvZ0xheWVyIiwiVmlydHVhbEpveXN0aWNrc0NhbWVyYSIsIl9wb3NpdGlvbiIsImF0dGFjaENvbnRyb2wiLCJpbmVydGlhU3BlZWQiLCJfbW9iaWxlT1MiLCJyb3RhdGlvblNwZWVkIiwiaW5wdXRzIiwiYXR0YWNoZWQiLCJ2aXJ0dWFsSm95c3RpY2siLCJfcmlnaHRqb3lzdGljayIsInJldmVyc2VVcERvd24iLCJfcm90YXRlT25BeGlzUmVsYXRpdmVUb01lc2giLCJjYW1lcmEiLCJpbmVydGlhIiwiX2ludmVyc2VSb3RhdGlvblNwZWVkIiwiX3JvdGF0aW9uU3BlZWQiLCJfYXhpc1RhcmdldGVkQnlVcEFuZERvd24iLCJfYXhpc1RhcmdldGVkQnlMZWZ0QW5kUmlnaHQiLCJfbGVmdGpveXN0aWNrIiwiVlJEZXZpY2VPcmllbnRhdGlvbkZyZWVDYW1lcmEiLCJjaGVja0NvbGxpc2lvbnMiLCJhcHBseUdyYXZpdHkiLCJXZWJWUkZyZWVDYW1lcmEiLCJfcmlnQ2FtZXJhcyIsInBvc2l0aW9uIiwic2V0Q2FudmFzVG91Y2giLCJlIiwiY29uc29sZSIsImxvZyIsImFjdGl2ZUNhbWVyYXMiLCJwdXNoIiwiYWN0aXZlQ2FtZXJhIiwicGlja1Jlc3VsdCIsImRlYnVnIiwieiIsImxhbmRzY2FwZU1vZGUiLCJnZXRFbmdpbmUiLCJyZXNpemUiLCJfbW9kZSIsInF1ZXJ5U2VsZWN0b3IiLCJwaWNrIiwicG9pbnRlclgiLCJwb2ludGVyWSIsInNldEF0dHJpYnV0ZSIsIndpZHRoIiwiaGVpZ2h0IiwiZG9jdW1lbnRFbGVtZW50IiwiY2xpZW50SGVpZ2h0IiwiY2xpZW50V2lkdGgiLCJhZGRFdmVudExpc3RlbmVyIiwidG9nZ2xlIiwiYmluZCIsInJlYWREZXZpY2VPcmllbnRhdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFB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Z0IsV0FBV3ZDLEdBQUcwSCxNQUFRakcsU0FBU21HLGdCQUFnQkUsZUF3QnREdEgsSUFBSyxjQUNMK0QsTUFyQlcsV0FDVmhELEtBQUtnRixpQkFDTDlFLFNBQVM0RixjQUFjLGNBQWNVLGlCQUFpQixRQUFTeEcsS0FBS3lHLE9BQU9DLEtBQUsxRyxPQUVoRm9DLE9BQU9vRSxpQkFBaUIsb0JBQXFCeEcsS0FBSzJHLHNCQUFzQkQsS0FBSzFHLE9BQU8sR0FDcEZvQyxPQUFPb0UsaUJBQWlCLFNBQVUsV0FDNUJ4RyxLQUFLZ0YsaUJBQ0xoRixLQUFLdUIsTUFBTW9FLFlBQVlDLFVBQ3hCYyxLQUFLMUcsV0FyS1RKLElBMktOZ0gsUUFBT0MsUUFBVWpIIiwiZmlsZSI6ImNvcmUvbHNkL2NvbXBvbmVudHMvY19jYW1lcmF2ci5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBDRVMgPSByZXF1aXJlKCdDRVMnKTtcbnZhciBCQUJZTE9OID0gcmVxdWlyZSgnLi4vbGliL2JhYnlsb24nKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzL3V0aWxzJyk7XG52YXIgZGVmYXVsdHMgPSB1dGlscy5kZWZhdWx0QXJncygpO1xuZGVmYXVsdHMuX25hbWUgPSAnY2FtZXJhJztcbi8qKlxuICogLi4uXG4gKiBAYXV0aG9yIEJyZW5kb24gU21pdGhcbiAqIGh0dHA6Ly9zZWFjbG91ZDkub3JnXG4gKiBMaWdodFdlaWdodCAzRCBTeXN0ZW0gRGVzaWduIGVuZ2luZVxuICovXG5jbGFzcyBjX2NhbWVyYXZyIHtcblx0Y29uc3RydWN0b3IoX29wdHMgPSBkZWZhdWx0cyl7XG5cdFx0dGhpcy5tb2RhbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdHRoaXMubW9kYWwuY2xhc3NMaXN0LmFkZCgnYS1vcmllbnRhdGlvbi1tb2RhbCcpO1xuXHRcdHRoaXMubW9kYWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHR0aGlzLmN1cnNvciA9IF9vcHRzLl9jdXJzb3I7XG5cdFx0dGhpcy5jdXJzb3JWUjEgPSBfb3B0cy5fY3Vyc29yVlIxO1xuXHRcdHRoaXMuY3Vyc29yVlIyID0gX29wdHMuX2N1cnNvclZSMjtcblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMubW9kYWwpO1xuXHRcdHRoaXMuY2FudmFzTGlzdCA9IG51bGw7XG5cdFx0dGhpcy5uYW1lID0gX29wdHMuX25hbWU7XG5cdFx0dGhpcy5vcHRzID0gX29wdHM7XG5cdFx0dGhpcy5vYmo7XG5cdFx0dGhpcy5vYmpWUiA9IG51bGw7XG5cdFx0dGhpcy5vYmpPcnRob1ZSID0gbnVsbDtcblx0XHR0aGlzLm9iak9ydGhvID0gbnVsbDtcblx0XHR0aGlzLnNjZW5lID0gIF9vcHRzLl9zY2VuZTtcblx0XHR0aGlzLmNhbnZhcyA9IF9vcHRzLl9jYW52YXM7XG5cdFx0dGhpcy5vbmVBeGlzID0gdHJ1ZTtcblx0XHR0aGlzLm1vZGUgPSAnbm9ybWFsJztcblx0XHR0aGlzLmh1ZCAgPSBudWxsO1xuXHRcdHRoaXMuZ2xpdGNoRW5hYmxlZCA9IGZhbHNlO1xuICAgXHRcdHZhciBjYW52YXNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnY2FudmFzJyk7XG4gICAgXHR0aGlzLmNhbnZhc0xpc3QgPSBBcnJheS5mcm9tKGNhbnZhc0xpc3QpO1xuICAgIFx0aWYoTWF0aC5hYnMod2luZG93Lm9yaWVudGF0aW9uKSA9PT0gOTAgfHwgIUNBVEFNQVJBTi5pc01vYmlsZSgpKXtcblx0XHRcdHRoaXMudG9nZ2xlQ2FudmFzKCdibG9jaycpO1xuXHRcdFx0dGhpcy5pbml0VlIoKTtcblx0XHR9ZWxzZXtcblx0XHRcdHRoaXMudG9nZ2xlQ2FudmFzKCk7XG5cdFx0XHR0aGlzLm1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdH1cblx0XHR0aGlzLnNldExpc3RuZXJzKCk7XG5cdFx0dGhpcy5vcHRpb25zID0ge1xuXHRcdFx0bmFtZTp0aGlzLm5hbWUsXG5cdFx0XHRpbml0OiB0aGlzLmNvbnN0cnVjdG9yLFxuXHRcdFx0b2JqOnRoaXMub2JqLFxuXHRcdFx0b2JqT3J0aG86dGhpcy5vYmpPcnRobyxcblx0XHRcdG9iak9ydGhvVlI6IHRoaXMub2JqT3J0aG9WUixcblx0XHRcdG9ialZSOnRoaXMub2JqVlJcblx0XHR9XG5cdFx0Q0VTLkNvbXBvbmVudC5leHRlbmQodGhpcy5vcHRpb25zKTtcblx0fVxuXG5cdGluaXRWUigpe1xuXHRcdHRoaXMub2JqT3J0aG8gID0gbmV3IEJBQllMT04uRnJlZUNhbWVyYShcIkZyZWVDYW1lcmFcIiwgQkFCWUxPTi5WZWN0b3IzLlplcm8oKSwgdGhpcy5vcHRzLl9zY2VuZSApO1xuXHRcdC8vdGhpcy5vYmpPcnRoby5tb2RlID0gQkFCWUxPTi5DYW1lcmEuT1JUSE9HUkFQSElDX0NBTUVSQTtcblx0XHQvL3RoaXMub2JqT3J0aG8uYXR0YWNoQ29udHJvbCh0aGlzLmNhbnZhcywgZmFsc2UpO1xuXHRcdHRoaXMub2JqT3J0aG8uc2V0VGFyZ2V0KEJBQllMT04uVmVjdG9yMy5aZXJvKCkpO1xuXHRcdHRoaXMub2JqT3J0aG8ubGF5ZXJNYXNrID0gdGhpcy5vcHRzLl9hY3RpdmVEaWFsb2dMYXllcjtcblx0XHR0aGlzLm9iaiA9IG5ldyBCQUJZTE9OLlZpcnR1YWxKb3lzdGlja3NDYW1lcmEoXCJWSkNhbWVyYVwiLCB0aGlzLm9wdHMuX3Bvc2l0aW9uLCB0aGlzLnNjZW5lKTtcbiAgICAgICAgdGhpcy5vYmouYXR0YWNoQ29udHJvbCh0aGlzLmNhbnZhcywgZmFsc2UpO1xuICAgICAgICB0cnl7XG4gICAgICAgIENBVEFNQVJBTi5pc01vYmlsZSgpO1xuICAgICAgICB0aGlzLmluZXJ0aWFTcGVlZCAgPSBDQVRBTUFSQU4uX21vYmlsZU9TID09ICdBbmRyb2lkJyA/IDAuNiA6IDAuNztcbiAgICAgICAgdGhpcy5yb3RhdGlvblNwZWVkICA9IENBVEFNQVJBTi5fbW9iaWxlT1MgPT0gJ0FuZHJvaWQnPyA0IDogMjtcbiAgICAgICAgdGhpcy5vYmouaW5wdXRzLmF0dGFjaGVkLnZpcnR1YWxKb3lzdGljay5fcmlnaHRqb3lzdGljay5yZXZlcnNlVXBEb3duID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vYmouaW5wdXRzLmF0dGFjaGVkLnZpcnR1YWxKb3lzdGljay5fcmlnaHRqb3lzdGljay5fcm90YXRlT25BeGlzUmVsYXRpdmVUb01lc2ggPSB0cnVlO1xuICAgICAgICB0aGlzLm9iai5pbnB1dHMuYXR0YWNoZWQudmlydHVhbEpveXN0aWNrLmNhbWVyYS5pbmVydGlhID0gdGhpcy5pbmVydGlhU3BlZWQ7XG4gICAgICAgIHRoaXMub2JqLmlucHV0cy5hdHRhY2hlZC52aXJ0dWFsSm95c3RpY2suX3JpZ2h0am95c3RpY2suX2ludmVyc2VSb3RhdGlvblNwZWVkID0gdGhpcy5yb3RhdGlvblNwZWVkO1xuICAgICAgICB0aGlzLm9iai5pbnB1dHMuYXR0YWNoZWQudmlydHVhbEpveXN0aWNrLl9yaWdodGpveXN0aWNrLl9yb3RhdGlvblNwZWVkID0gdGhpcy5yb3RhdGlvblNwZWVkO1xuICAgICAgICBpZih0aGlzLm9uZUF4aXMpe1xuICAgICAgICBcdHRoaXMub2JqLmlucHV0cy5hdHRhY2hlZC52aXJ0dWFsSm95c3RpY2suX3JpZ2h0am95c3RpY2suX2F4aXNUYXJnZXRlZEJ5VXBBbmREb3duID0gMztcbiAgICAgICAgXHR0aGlzLm9iai5pbnB1dHMuYXR0YWNoZWQudmlydHVhbEpveXN0aWNrLl9yaWdodGpveXN0aWNrLl9heGlzVGFyZ2V0ZWRCeUxlZnRBbmRSaWdodCA9IDE7XG4gICAgICAgIFx0dGhpcy5vYmouaW5wdXRzLmF0dGFjaGVkLnZpcnR1YWxKb3lzdGljay5fbGVmdGpveXN0aWNrLl9heGlzVGFyZ2V0ZWRCeVVwQW5kRG93biA9IDI7XG4gICAgICAgIFx0dGhpcy5vYmouaW5wdXRzLmF0dGFjaGVkLnZpcnR1YWxKb3lzdGljay5fbGVmdGpveXN0aWNrLl9heGlzVGFyZ2V0ZWRCeUxlZnRBbmRSaWdodCA9IDA7XG4gICAgICAgIH1cblx0XHR0aGlzLm9ialZSICA9IG5ldyBCQUJZTE9OLlZSRGV2aWNlT3JpZW50YXRpb25GcmVlQ2FtZXJhKFwiVlJDYW1lcmFcIiwgIHRoaXMub3B0cy5fcG9zaXRpb24sIHRoaXMuc2NlbmUsIGZhbHNlKTtcblx0XHR0aGlzLm9ialZSLmNoZWNrQ29sbGlzaW9ucyA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9ialZSLmFwcGx5R3Jhdml0eSA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9ialZSLmF0dGFjaENvbnRyb2wodGhpcy5jYW52YXMgLCB0cnVlKTtcbiAgICAgICAgdGhpcy5vYmpPcnRob1ZSICA9IG5ldyBCQUJZTE9OLldlYlZSRnJlZUNhbWVyYShcIlZSQ2FtZXJhMlwiLCBuZXcgQkFCWUxPTi5WZWN0b3IzLlplcm8oKSwgIHRoaXMuc2NlbmUsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5vYmpPcnRob1ZSLnNldFRhcmdldChCQUJZTE9OLlZlY3RvcjMuWmVybygpKTtcblx0XHR0aGlzLm9iak9ydGhvVlIubGF5ZXJNYXNrID0gdGhpcy5vcHRzLl9hY3RpdmVEaWFsb2dMYXllcjtcblx0XHR0aGlzLm9iak9ydGhvVlIuX3JpZ0NhbWVyYXNbMF0ubGF5ZXJNYXNrID0gIHRoaXMub3B0cy5fYWN0aXZlRGlhbG9nTGF5ZXI7XG5cdFx0dGhpcy5vYmpPcnRob1ZSLl9yaWdDYW1lcmFzWzFdLmxheWVyTWFzayA9ICB0aGlzLm9wdHMuX2FjdGl2ZURpYWxvZ0xheWVyO1xuICAgICAgICB0aGlzLm9ialZSLnBvc2l0aW9uID0gdGhpcy5vYmoucG9zaXRpb247XG4gICAgICAgIHZhciBjYW52YXNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnY2FudmFzJyk7XG4gICAgXHR0aGlzLmNhbnZhc0xpc3QgPSBBcnJheS5mcm9tKGNhbnZhc0xpc3QpO1xuICAgIFx0dGhpcy5zZXRDYW52YXNUb3VjaCgpO1xuICAgIFx0IH1jYXRjaChlKXtcbiAgICAgICAgXHRjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgXHRjb25zb2xlLmxvZygncmVxdWlyZXMgLT4gaHR0cHM6Ly9jb2RlLmpxdWVyeS5jb20vcGVwLzAuNC4xL3BlcC5qcycpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2NlbmUuYWN0aXZlQ2FtZXJhcy5wdXNoKHRoaXMub2JqKTtcbiAgICAgICAgdGhpcy5zY2VuZS5hY3RpdmVDYW1lcmFzLnB1c2godGhpcy5vYmpPcnRobyk7XG5cdFx0dGhpcy5zY2VuZS5hY3RpdmVDYW1lcmEgPSB0aGlzLm9iajtcblx0XHR0aGlzLnBpY2tSZXN1bHQgPSBudWxsO1xuICAgICAgICBpZihDQVRBTUFSQU4uZGVidWcpe1xuICAgICAgICBcdHRoaXMuZGVidWcoKTtcbiAgICAgICAgfVxuXHR9XG5cblx0ZGVidWcoKXtcblx0XHR3aW5kb3cub2JqVlIgPSB0aGlzLm9ialZSO1xuICAgICAgICB3aW5kb3cub2JqID0gdGhpcy5vYmo7XG4gICAgICAgIHdpbmRvdy5vYmpPcnRobyA9IHRoaXMub2JqT3J0aG87XG4gICAgICAgIHdpbmRvdy5vYmpPcnRob1ZSID0gdGhpcy5vYmpPcnRob1ZSO1xuXHR9XG5cblx0dG9nZ2xlKCkge1xuICAgICAgICBpZiAodGhpcy5tb2RlID09ICdub3JtYWwnKSB7XG4gICAgICAgICAgICB0aGlzLm1vZGUgPSAndnInO1xuICAgICAgICAgICAgaWYgKHRoaXMuc2NlbmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgIHRoaXMuc2NlbmUuYWN0aXZlQ2FtZXJhc1swXSA9IHRoaXMub2JqVlI7XG4gICAgICAgICAgICAgICAgICAgdGhpcy5zY2VuZS5hY3RpdmVDYW1lcmFzWzFdID0gdGhpcy5vYmpPcnRob1ZSO1xuICAgICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnBvc2l0aW9uLnogPSAzMDtcbiAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5nbGl0Y2hFbmFibGVkKXtcbiAgICAgICAgICAgICAgICAgICAgXHQvL2Z4XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vZGUgPSAnbm9ybWFsJztcbiAgICAgICAgICAgIGlmICh0aGlzLnNjZW5lICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgdGhpcy5zY2VuZS5hY3RpdmVDYW1lcmFzWzBdID0gdGhpcy5vYmo7XG4gICAgICAgICAgICAgICAgIHRoaXMuc2NlbmUuYWN0aXZlQ2FtZXJhc1sxXSA9IHRoaXMub2JqT3J0aG87XG4gICAgICAgICAgICAgICAgIHRoaXMuY3Vyc29yLnBvc2l0aW9uLnogPSAxMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZWFkRGV2aWNlT3JpZW50YXRpb24oKSB7XG4gICAgICBpZiAoTWF0aC5hYnMod2luZG93Lm9yaWVudGF0aW9uKSA9PT0gOTApIHtcbiAgICAgIFx0dGhpcy50b2dnbGVDYW52YXMoJ2Jsb2NrJyk7XG4gICAgICBcdGlmKHRoaXMub2JqVlIgPT0gbnVsbCl7XG4gICAgICBcdFx0dGhpcy5pbml0VlIoKTtcbiAgICAgIFx0fVxuICAgICAgICB0aGlzLmxhbmRzY2FwZU1vZGUgPSB0cnVlO1xuICAgICAgICB0aGlzLm1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgXHR0aGlzLnRvZ2dsZUNhbnZhcygpO1xuICAgICAgXHR0aGlzLm1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgXHR0aGlzLmxhbmRzY2FwZU1vZGUgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2V0Q2FudmFzVG91Y2goKTtcbiAgICAgIHRoaXMuc2NlbmUuZ2V0RW5naW5lKCkucmVzaXplKCk7XG4gICAgICBcbiAgICB9XG5cbiAgICB0b2dnbGVDYW52YXMoX21vZGUgPSAnbm9uZScpe1xuICAgIFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZyLWJ1dHRvbicpLnN0eWxlLmRpc3BsYXkgPSBfbW9kZTtcbiAgICB9XG5cbiAgICByYXlQaWNrKCl7XG4gICAgXHR0aGlzLnBpY2tSZXN1bHQgPSB0aGlzLnNjZW5lLnBpY2sodGhpcy5zY2VuZS5wb2ludGVyWCwgdGhpcy5zY2VuZS5wb2ludGVyWSk7XG4gIFx0IFx0Ly9jb25zb2xlLmxvZyh0aGlzLnBpY2tSZXN1bHQpO1xuICAgIH1cblxuICAgIHNldENhbnZhc1RvdWNoKCl7XG4gICAgXHRmb3IobGV0IGk9MDsgaSA8IHRoaXMuY2FudmFzTGlzdC5sZW5ndGg7IGkrKyl7XG4gICAgXHRcdHRoaXMuY2FudmFzTGlzdFtpXS5zZXRBdHRyaWJ1dGUoXCJ0b3VjaC1hY3Rpb25cIiwgJ25vbmUnKTtcbiAgICBcdFx0dGhpcy5jYW52YXNMaXN0W2ldLnN0eWxlLndpZHRoID0gJyc7XG4gICAgXHRcdHRoaXMuY2FudmFzTGlzdFtpXS5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICBcdFx0dGhpcy5jYW52YXNMaXN0W2ldLmhlaWdodCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gICAgXHRcdHRoaXMuY2FudmFzTGlzdFtpXS53aWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcbiAgICBcdH1cbiAgICB9XG5cbiAgICBzZXRMaXN0bmVycygpe1xuICAgIFx0dGhpcy5zZXRDYW52YXNUb3VjaCgpO1xuICAgIFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZyLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy50b2dnbGUuYmluZCh0aGlzKSk7XG4gICAgXHQvL3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMucmF5UGljay5iaW5kKHRoaXMpKTtcbiAgICBcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvcmllbnRhdGlvbmNoYW5nZScsIHRoaXMucmVhZERldmljZU9yaWVudGF0aW9uLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICBcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgdGhpcy5zZXRDYW52YXNUb3VjaCgpO1xuICAgICAgICAgICB0aGlzLnNjZW5lLmdldEVuZ2luZSgpLnJlc2l6ZSgpO1xuICAgICAgICB9LmJpbmQodGhpcykpO1xuXG4gICAgfVxuICAgIFxuXG59XG5tb2R1bGUuZXhwb3J0cyA9IGNfY2FtZXJhdnI7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9