"use strict";function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,i){for(var s=0;s<i.length;s++){var e=i[s];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(i,s,e){return s&&t(i.prototype,s),e&&t(i,e),i}}(),CES=require("CES"),BABYLON=require("../lib/babylon"),utils=require("../utils/utils"),defaults=utils.defaultArgs();defaults._name="camera";var c_cameravr=function(){function t(){var i=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];_classCallCheck(this,t),this.modal=document.createElement("div"),this.cursorEnt=null,this.modal.classList.add("a-orientation-modal"),this.modal.style.display="none",this.cursor=i._cursor,this.cursorVR1=i._cursorVR1,this.cursorVR2=i._cursorVR2,document.body.appendChild(this.modal),this.canvasList=null,this.name=i._name,this.opts=i,this.obj,this.objVR=null,this.objOrthoVR=null,this.objOrtho=null,this.scene=i._scene,this.canvas=i._canvas,this.oneAxis=!0,this.mode="normal",this.fpsUIWindow=null,this.fpsUI=i._fpsUI,this.hud=null,this.glitchEnabled=!1;var s=document.querySelectorAll("canvas");this.canvasList=Array.from(s),90!==Math.abs(window.orientation)&&CATAMARAN.isMobile()?(this.toggleCanvas(),this.modal.style.display="block"):(this.toggleCanvas("block"),this.initVR()),this.setListners(),this.options={name:this.name,init:this.constructor,obj:this.obj,objOrtho:this.objOrtho,objOrthoVR:this.objOrthoVR,objVR:this.objVR},CES.Component.extend(this.options)}return _createClass(t,[{key:"initVR",value:function(){this.objOrtho=new BABYLON.FreeCamera("FreeCamera",BABYLON.Vector3.Zero(),this.opts._scene),this.objOrtho.setTarget(BABYLON.Vector3.Zero()),this.objOrtho.layerMask=this.opts._activeDialogLayer,this.obj=new BABYLON.VirtualJoysticksCamera("VJCamera",this.opts._position,this.scene),this.obj.attachControl(this.canvas,!1);try{CATAMARAN.isMobile(),this.inertiaSpeed="Android"==CATAMARAN._mobileOS?.6:.7,this.rotationSpeed="Android"==CATAMARAN._mobileOS?4:2,this.obj.inputs.attached.virtualJoystick._rightjoystick.reverseUpDown=!0,this.obj.inputs.attached.virtualJoystick._rightjoystick._rotateOnAxisRelativeToMesh=!0,this.obj.inputs.attached.virtualJoystick.camera.inertia=this.inertiaSpeed,this.obj.inputs.attached.virtualJoystick._rightjoystick._inverseRotationSpeed=this.rotationSpeed,this.obj.inputs.attached.virtualJoystick._rightjoystick._rotationSpeed=this.rotationSpeed,this.oneAxis&&(this.obj.inputs.attached.virtualJoystick._rightjoystick._axisTargetedByUpAndDown=3,this.obj.inputs.attached.virtualJoystick._rightjoystick._axisTargetedByLeftAndRight=1,this.obj.inputs.attached.virtualJoystick._leftjoystick._axisTargetedByUpAndDown=2,this.obj.inputs.attached.virtualJoystick._leftjoystick._axisTargetedByLeftAndRight=0),this.objVR=new BABYLON.VRDeviceOrientationFreeCamera("VRCamera",this.opts._position,this.scene,!1),this.objVR.checkCollisions=!1,this.objVR.applyGravity=!1,this.objVR.attachControl(this.canvas,!0),this.objOrthoVR=new BABYLON.WebVRFreeCamera("VRCamera2",new BABYLON.Vector3.Zero,this.scene,!1),this.objOrthoVR.setTarget(BABYLON.Vector3.Zero()),this.objOrthoVR.layerMask=this.opts._activeDialogLayer,this.objOrthoVR._rigCameras[0].layerMask=this.opts._activeDialogLayer,this.objOrthoVR._rigCameras[1].layerMask=this.opts._activeDialogLayer,this.objVR.position=this.obj.position;var t=document.querySelectorAll("canvas");this.canvasList=Array.from(t),this.setCanvasTouch()}catch(i){console.log(i),console.log("requires -> https://code.jquery.com/pep/0.4.1/pep.js")}this.scene.activeCameras.push(this.obj),this.scene.activeCameras.push(this.objOrtho),this.scene.activeCamera=this.obj,this.pickResult=null,this.fpsUI&&(this.bodyEL=new CATAMARAN.core.DOM("body"),this.fpsUIWindow=document.createElement("fpswindow"),this.fpsUIWindow.open=!0,this.fpsUIWindow.classList.add("fpsUIWindow"),this.bodyEL.append(this.fpsUIWindow),this.fpsUIWindow=new CATAMARAN.core.DOM(".fpsUIWindow")),CATAMARAN.debug&&this.debug()}},{key:"debug",value:function(){window.objVR=this.objVR,window.obj=this.obj,window.objOrtho=this.objOrtho,window.objOrthoVR=this.objOrthoVR}},{key:"toggle",value:function(){"normal"==this.mode?(this.mode="vr",null!=this.scene&&(this.scene.activeCameras[0]=this.objVR,this.scene.activeCameras[1]=this.objOrthoVR,this.cursor.position.z=30,this.glitchEnabled)):(this.mode="normal",null!=this.scene&&(this.scene.activeCameras[0]=this.obj,this.scene.activeCameras[1]=this.objOrtho,this.cursor.position.z=100))}},{key:"readDeviceOrientation",value:function(){90===Math.abs(window.orientation)?(this.toggleCanvas("block"),null==this.objVR&&this.initVR(),this.landscapeMode=!0,this.modal.style.display="none"):(this.toggleCanvas(),this.modal.style.display="block",this.landscapeMode=!1),this.setCanvasTouch(),this.scene.getEngine().resize()}},{key:"toggleCanvas",value:function(){var t=arguments.length<=0||void 0===arguments[0]?"none":arguments[0];document.querySelector(".vr-button").style.display=t}},{key:"rayPick",value:function(){this.pickResult=this.scene.pick(this.scene.pointerX,this.scene.pointerY)}},{key:"setCanvasTouch",value:function(){for(var t=0;t<this.canvasList.length;t++)this.canvasList[t].setAttribute("touch-action","none"),this.canvasList[t].style.width="",this.canvasList[t].style.height="",this.canvasList[t].height=document.documentElement.clientHeight,this.canvasList[t].width=document.documentElement.clientWidth}},{key:"setListners",value:function(){this.setCanvasTouch(),document.querySelector(".vr-button").addEventListener("click",this.toggle.bind(this)),window.addEventListener("orientationchange",this.readDeviceOrientation.bind(this),!1),window.addEventListener("resize",function(){this.setCanvasTouch(),this.scene.getEngine().resize()}.bind(this))}}]),t}();module.exports=c_cameravr;
//# sourceMappingURL=data:application/json;base64,