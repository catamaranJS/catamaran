"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),BABYLON=require("../lib/babylon"),utils=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"defaultArgs",value:function(){var e={_name:null,_cursor:null,_cursorVR1:null,_cursorVR2:null,_layerMask:268435455,_activeDialogLayer:268435456,_type:"FreeCamera",_position:new BABYLON.Vector3(0,0,0),_rotation:new BABYLON.Vector3(0,0,0),_diameterTop:3,_diameterBottom:3,_diameter:10,_size:10,_subdivisions:6,_tesselation:6,_thickness:3,_segements:10,_canvas:null,_material:{_texture:null,_uScale:1,_vScale:1,_backFaceCulling:!0,_vOffset:0,_uOffset:0,_hasAlpha:!1,_diffuseColor:null},_scene:{}};return e}},{key:"returnDefaultMaterial",value:function(){return{name:"default",_texture:null,_alpha:1,_uScale:1,_vScale:1,_backFaceCulling:!0,_vOffset:0,_uOffset:0,_hasAlpha:!1,_diffuseColor:null}}},{key:"guid",value:function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}},{key:"merge_objects",value:function(e,t){var n={};for(var r in e)n[r]=e[r];for(var r in t)n[r]=t[r];return n}},{key:"degToRad",value:function(e){return e*(Math.PI/180)}},{key:"color",value:function(){var e=arguments.length<=0||void 0===arguments[0]?125:arguments[0],t=arguments.length<=1||void 0===arguments[1]?0:arguments[1],n=arguments.length<=2||void 0===arguments[2]?127:arguments[2],r=arguments.length<=3||void 0===arguments[3]?null:arguments[3];return null==r?new BABYLON.Color3(e/255,t/255,n/255):new BABYLON.Color4(e/255,t/255,n/255,r)}},{key:"getMaterials",value:function(e,t){e.push(this.returnDefaultMaterial());for(var n=0;n<e.length;n++)if(e[n].name==t)return void 0!=typeof e[n]._diffuseColor&&null!=e[n]._diffuseColor&&(e[n]._diffuseColor=this.getColor(e[n]._diffuseColor)),e[n]}},{key:"getColor",value:function(e){return e=e.split(","),4!=e.length?this.color(parseInt(e[0]),parseInt(e[1]),parseInt(e[2])):this.color(parseInt(e[0]),parseInt(e[1]),parseInt(e[2]),parseFloat(e[3]))}},{key:"getVector",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?"position":arguments[1];return e=e.split(","),"position"==t?new BABYLON.Vector3(parseInt(e[0]),parseInt(e[1]),parseInt(e[2])):new BABYLON.Vector3(this.degToRad(parseInt(e[0])),this.degToRad(parseInt(e[1])),this.degToRad(parseInt(e[2])))}},{key:"assetsLoad",value:function(){var e=new BABYLON.AssetsManager(this._crurrentScene);this.jsonAssets.forEach(function(t){function n(){var n=e.addTextureTask(t.name,t.src);n.onSuccess=function(e){this._assets[e.name]=e.texture}.bind(this),n.onError=function(e){console.log(e.name+" - failed to load")}.bind(this)}switch(t.type){case"img":n();break;case"audio":break;case"video":break;case"hdr":break;default:n.apply(this)}e.load()}.bind(this)),e.onFinish=this.assetLoadingFinished.bind(this)}}]),e}();module.exports=utils;
//# sourceMappingURL=data:application/json;base64,