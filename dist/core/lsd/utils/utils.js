"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),BABYLON=require("../lib/babylon"),utils=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"defaultArgs",value:function(){var e={_name:null,_cursor:null,_cursorVR1:null,_cursorVR2:null,_layerMask:268435455,_activeDialogLayer:268435456,_type:"FreeCamera",_position:new BABYLON.Vector3(0,0,0),_rotation:new BABYLON.Vector3(0,0,0),_diameterTop:3,_diameterBottom:3,_diameter:10,_size:10,_subdivisions:6,_tesselation:6,_thickness:3,_segements:10,_canvas:null,_texture:null,_uScale:1,_vScale:1,_backFaceCulling:!0,_vOffset:0,_uOffset:0,_hasAlpha:!1,_diffuseColor:null,_hasSystem:!1,_scene:{}};return e}},{key:"guid",value:function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}},{key:"degToRad",value:function(e){return e*(Math.PI/180)}},{key:"color",value:function(){var e=arguments.length<=0||void 0===arguments[0]?125:arguments[0],n=arguments.length<=1||void 0===arguments[1]?0:arguments[1],t=arguments.length<=2||void 0===arguments[2]?127:arguments[2],a=arguments.length<=3||void 0===arguments[3]?null:arguments[3];return null==a?new BABYLON.Color3(e,n,t):new BABYLON.Color4(e,n,t,a)}},{key:"assetsLoad",value:function(){var e=new BABYLON.AssetsManager(this._crurrentScene);this.jsonAssets.forEach(function(n){function t(){var t=e.addTextureTask(n.name,n.src);t.onSuccess=function(e){this._assets[e.name]=e.texture}.bind(this),t.onError=function(e){console.log(e.name+" - failed to load")}.bind(this)}switch(n.type){case"img":t();break;case"audio":break;case"video":break;case"hdr":break;default:t.apply(this)}e.load()}.bind(this)),e.onFinish=this.assetLoadingFinished.bind(this)}}]),e}();module.exports=utils;
//# sourceMappingURL=data:application/json;base64,