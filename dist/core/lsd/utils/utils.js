"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),BABYLON=require("../lib/babylon"),utils=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"defaultArgs",value:function(){var e={_name:null,_cursor:null,_cursorVR1:null,_cursorVR2:null,_layerMask:268435455,_activeDialogLayer:268435456,_type:"FreeCamera",_position:new BABYLON.Vector3(0,0,0),_rotation:new BABYLON.Vector3(0,0,0),_diameterTop:3,_diameterBottom:3,_diameter:10,_size:10,_subdivisions:6,_tesselation:6,_thickness:3,_segements:10,_canvas:null,_material:{_texture:null,_uScale:1,_vScale:1,_backFaceCulling:!0,_vOffset:0,_uOffset:0,_hasAlpha:!1,_diffuseColor:null},_hasSystem:!1,_scene:{}};return e}},{key:"guid",value:function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}},{key:"degToRad",value:function(e){return e*(Math.PI/180)}},{key:"color",value:function(){var e=arguments.length<=0||void 0===arguments[0]?125:arguments[0],t=arguments.length<=1||void 0===arguments[1]?0:arguments[1],n=arguments.length<=2||void 0===arguments[2]?127:arguments[2],r=arguments.length<=3||void 0===arguments[3]?null:arguments[3];return null==r?new BABYLON.Color3(e,t,n):new BABYLON.Color4(e,t,n,r)}},{key:"getMaterials",value:function(e,t){for(var n=0;n<e.length;n++)if(e[n].name==t)return void 0!=typeof e[n]._diffuseColor&&(e[n]._diffuseColor=this.getColor(e[n]._diffuseColor)),e[n]}},{key:"getColor",value:function(e){return e=e.split(","),4!=e.length?this.color(parseInt(e[0]),parseInt(e[1]),parseInt(e[2])):this.color(parseInt(dataString[0]),parseInt(e[1]),parseInt(e[2]),parseInt(e[3]))}},{key:"getVector",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?"position":arguments[1];return e=e.split(","),"position"==t?new BABYLON.Vector3(parseInt(e[0]),parseInt(e[1]),parseInt(e[2])):new BABYLON.Vector3(this.degToRad(parseInt(e[0])),this.degToRad(parseInt(e[1])),this.degToRad(parseInt(e[2])))}},{key:"assetsLoad",value:function(){var e=new BABYLON.AssetsManager(this._crurrentScene);this.jsonAssets.forEach(function(t){function n(){var n=e.addTextureTask(t.name,t.src);n.onSuccess=function(e){this._assets[e.name]=e.texture}.bind(this),n.onError=function(e){console.log(e.name+" - failed to load")}.bind(this)}switch(t.type){case"img":n();break;case"audio":break;case"video":break;case"hdr":break;default:n.apply(this)}e.load()}.bind(this)),e.onFinish=this.assetLoadingFinished.bind(this)}}]),e}();module.exports=utils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL3V0aWxzL3V0aWxzLmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiQkFCWUxPTiIsInJlcXVpcmUiLCJ1dGlscyIsInRoaXMiLCJ2YWx1ZSIsIl9kZWZhdWx0cyIsIl9uYW1lIiwiX2N1cnNvciIsIl9jdXJzb3JWUjEiLCJfY3Vyc29yVlIyIiwiX2xheWVyTWFzayIsIl9hY3RpdmVEaWFsb2dMYXllciIsIl90eXBlIiwiX3Bvc2l0aW9uIiwiVmVjdG9yMyIsIl9yb3RhdGlvbiIsIl9kaWFtZXRlclRvcCIsIl9kaWFtZXRlckJvdHRvbSIsIl9kaWFtZXRlciIsIl9zaXplIiwiX3N1YmRpdmlzaW9ucyIsIl90ZXNzZWxhdGlvbiIsIl90aGlja25lc3MiLCJfc2VnZW1lbnRzIiwiX2NhbnZhcyIsIl9tYXRlcmlhbCIsIl90ZXh0dXJlIiwiX3VTY2FsZSIsIl92U2NhbGUiLCJfYmFja0ZhY2VDdWxsaW5nIiwiX3ZPZmZzZXQiLCJfdU9mZnNldCIsIl9oYXNBbHBoYSIsIl9kaWZmdXNlQ29sb3IiLCJfaGFzU3lzdGVtIiwiX3NjZW5lIiwiczQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsImRlZ3JlZXMiLCJQSSIsInIiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJnIiwiYiIsImEiLCJDb2xvcjMiLCJDb2xvcjQiLCJfdGV4dHVyZXMiLCJuYW1lIiwiZ2V0Q29sb3IiLCJfZGF0YVN0cmluZyIsInNwbGl0IiwiY29sb3IiLCJwYXJzZUludCIsImRhdGFTdHJpbmciLCJ0eXBlIiwiZGVnVG9SYWQiLCJsb2FkZXIiLCJBc3NldHNNYW5hZ2VyIiwiX2NydXJyZW50U2NlbmUiLCJqc29uQXNzZXRzIiwiZm9yRWFjaCIsIm9iaiIsImltZ0Fzc2V0IiwiaW1nIiwiYWRkVGV4dHVyZVRhc2siLCJzcmMiLCJvblN1Y2Nlc3MiLCJ0IiwiX2Fzc2V0cyIsInRleHR1cmUiLCJiaW5kIiwib25FcnJvciIsImNvbnNvbGUiLCJsb2ciLCJhcHBseSIsImxvYWQiLCJvbkZpbmlzaCIsImFzc2V0TG9hZGluZ0ZpbmlzaGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFJQSxTQUFTQSxpQkFBZ0JDLEVBQVVDLEdBQWUsS0FBTUQsWUFBb0JDLElBQWdCLEtBQU0sSUFBSUMsV0FBVSxxQ0FGaEgsR0FBSUMsY0FBZSxXQUFlLFFBQVNDLEdBQWlCQyxFQUFRQyxHQUFTLElBQUssR0FBSUMsR0FBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQUUsR0FBSUUsR0FBYUgsRUFBTUMsRUFBSUUsR0FBV0MsV0FBYUQsRUFBV0MsYUFBYyxFQUFPRCxFQUFXRSxjQUFlLEVBQVUsU0FBV0YsS0FBWUEsRUFBV0csVUFBVyxHQUFNQyxPQUFPQyxlQUFlVCxFQUFRSSxFQUFXTSxJQUFLTixJQUFpQixNQUFPLFVBQVVSLEVBQWFlLEVBQVlDLEdBQWlKLE1BQTlIRCxJQUFZWixFQUFpQkgsRUFBWWlCLFVBQVdGLEdBQWlCQyxHQUFhYixFQUFpQkgsRUFBYWdCLEdBQXFCaEIsTUFGN2hCa0IsUUFBVUMsUUFBUSxrQkFDaEJDLE1BQUssV0FRVixRQVJLQSxLQVNKdEIsZ0JBQWdCdUIsS0FUWkQsR0F3S0wsTUE1SkFsQixjQVpLa0IsRUFBSyxPQWFUTixJQUFLLGNBUUxRLE1BZGlCLFdBQ2pCLEdBQUlDLElBRUZDLE1BQU0sS0FDTkMsUUFBUyxLQUNUQyxXQUFZLEtBQ1pDLFdBQVksS0FDWkMsV0FBWSxV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USxTQUFTQyxHQUVoQyxRQUFTQyxLQUNkLEdBQUlDLEdBQU1QLEVBQU9RLGVBQWVILEVBQUlkLEtBQU1jLEVBQUlJLElBQzNDRixHQUFJRyxVQUFZLFNBQVNDLEdBQ2pCdEUsS0FBS3VFLFFBQVFELEVBQUVwQixNQUFRb0IsRUFBRUUsU0FDL0JDLEtBQUt6RSxNQUVQa0UsRUFBSVEsUUFBVSxTQUFTSixHQUNsQkssUUFBUUMsSUFBSU4sRUFBRXBCLEtBQU8sc0JBQ3hCdUIsS0FBS3pFLE1BR0wsT0FBT2dFLEVBQUlQLE1BQ2IsSUFBSyxNQUNKUSxHQUNHLE1BQ0osS0FBSyxRQUdELEtBQ0osS0FBSyxRQUVELEtBQ0osS0FBSyxNQUVELEtBQ0osU0FDSUEsRUFBU1ksTUFBTTdFLE1BRXRCMkQsRUFBT21CLFFBRURMLEtBQUt6RSxPQUVQMkQsRUFBT29CLFNBQVcvRSxLQUFLZ0YscUJBQXFCUCxLQUFLekUsVUEvSW5ERCxJQXNKTmtGLFFBQU9DLFFBQVVuRiIsImZpbGUiOiJjb3JlL2xzZC91dGlscy91dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBCQUJZTE9OID0gcmVxdWlyZSgnLi4vbGliL2JhYnlsb24nKTtcbmNsYXNzIHV0aWxze1xuLyoqXG4gKiAuLi5cbiAqIEBhdXRob3IgQnJlbmRvbiBTbWl0aFxuICogaHR0cDovL3NlYWNsb3VkOS5vcmdcbiAqIExpZ2h0V2VpZ2h0IDNEIFN5c3RlbSBEZXNpZ24gZW5naW5lXG4gKi9cblx0c3RhdGljIGRlZmF1bHRBcmdzKCl7XG5cdFx0dmFyIF9kZWZhdWx0cyA9IFxuXHRcdCAgeyBcblx0XHRcdFx0X25hbWU6bnVsbCwgXG5cdFx0XHRcdF9jdXJzb3I6IG51bGwsXG5cdFx0XHRcdF9jdXJzb3JWUjE6IG51bGwsXG5cdFx0XHRcdF9jdXJzb3JWUjI6IG51bGwsXG5cdFx0XHRcdF9sYXllck1hc2s6IDB4MEZGRkZGRkYsXG5cdFx0XHRcdF9hY3RpdmVEaWFsb2dMYXllcjogMHgxMDAwMDAwMCxcblx0XHRcdFx0X3R5cGU6J0ZyZWVDYW1lcmEnLCBcblx0XHRcdFx0X3Bvc2l0aW9uOm5ldyBCQUJZTE9OLlZlY3RvcjMoMCwgMCwgMCksIFxuXHRcdFx0XHRfcm90YXRpb246bmV3IEJBQllMT04uVmVjdG9yMygwLCAwLCAwKSwgXG5cdFx0XHRcdF9kaWFtZXRlclRvcDozLFxuXHRcdFx0XHRfZGlhbWV0ZXJCb3R0b206Myxcblx0XHRcdFx0X2RpYW1ldGVyOjEwLjAsXG5cdFx0XHRcdF9zaXplOjEwLjAsXG5cdFx0XHRcdF9zdWJkaXZpc2lvbnM6Nixcblx0XHRcdFx0X3Rlc3NlbGF0aW9uOjYsXG5cdFx0XHRcdF90aGlja25lc3M6Myxcblx0XHRcdFx0X3NlZ2VtZW50czoxMC4wLFxuXHRcdFx0XHRfY2FudmFzOm51bGwsXG5cdFx0XHRcdF9tYXRlcmlhbDp7XG5cdFx0XHRcdFx0X3RleHR1cmU6bnVsbCxcblx0XHRcdFx0XHRfdVNjYWxlOiAxLjAsXG5cdFx0XHRcdFx0X3ZTY2FsZTogMS4wLFxuXHRcdFx0XHRcdF9iYWNrRmFjZUN1bGxpbmc6IHRydWUsXG5cdFx0XHRcdFx0X3ZPZmZzZXQ6IDAuMCxcblx0XHRcdFx0XHRfdU9mZnNldDogMC4wLFxuXHRcdFx0XHRcdF9oYXNBbHBoYTpmYWxzZSxcblx0XHRcdFx0XHRfZGlmZnVzZUNvbG9yOiBudWxsLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHRfaGFzU3lzdGVtOmZhbHNlLFxuXHRcdFx0XHRfc2NlbmU6e31cblx0XHRcdH1cblx0XHRyZXR1cm4gX2RlZmF1bHRzO1xuXHR9XG5cblx0c3RhdGljIGd1aWQoKSB7XG4gIFx0IGZ1bmN0aW9uIHM0KCkge1xuXHQgICAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApXG5cdCAgICAgIC50b1N0cmluZygxNilcblx0ICAgICAgLnN1YnN0cmluZygxKTtcblx0ICB9XG5cdCAgcmV0dXJuIHM0KCkgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArIHM0KCkgKyAnLScgK1xuXHQgICAgczQoKSArICctJyArIHM0KCkgKyBzNCgpICsgczQoKTtcblx0fVxuXG5cdHN0YXRpYyBkZWdUb1JhZChkZWdyZWVzKXtcblx0XHRyZXR1cm4gZGVncmVlcyAqIChNYXRoLlBJIC8gMTgwKTtcblx0fVxuXG5cdHN0YXRpYyBjb2xvcihyID0gMTI1LGcgPSAwLGIgPSAxMjcsYSA9IG51bGwpe1xuXHRcdGlmKGEgPT0gbnVsbCl7XG5cdFx0XHRyZXR1cm4gbmV3IEJBQllMT04uQ29sb3IzKHIsIGcsIGIpO1xuXHRcdH1lbHNle1xuXHRcdFx0cmV0dXJuIG5ldyBCQUJZTE9OLkNvbG9yNChyLCBnLCBiLCBhKTtcblx0XHR9XG5cdH1cblxuXHRzdGF0aWMgZ2V0TWF0ZXJpYWxzKF90ZXh0dXJlcywgX25hbWUpe1xuXHRcdGZvcihsZXQgaSA9IDA7IGkgPCBfdGV4dHVyZXMubGVuZ3RoOyBpKyspe1xuXHRcdFx0aWYoX3RleHR1cmVzW2ldLm5hbWUgPT0gX25hbWUpe1xuXHRcdFx0XHRpZih0eXBlb2YgX3RleHR1cmVzW2ldLl9kaWZmdXNlQ29sb3IgIT0gdW5kZWZpbmVkKXtcblx0XHRcdFx0XHRfdGV4dHVyZXNbaV0uX2RpZmZ1c2VDb2xvciA9IHRoaXMuZ2V0Q29sb3IoX3RleHR1cmVzW2ldLl9kaWZmdXNlQ29sb3IpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBfdGV4dHVyZXNbaV07XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0c3RhdGljIGdldENvbG9yKF9kYXRhU3RyaW5nKXtcblx0XHRfZGF0YVN0cmluZyA9IF9kYXRhU3RyaW5nLnNwbGl0KFwiLFwiKTtcblx0XHRpZihfZGF0YVN0cmluZy5sZW5ndGggIT0gNCl7XG5cdFx0XHRyZXR1cm4gdGhpcy5jb2xvcihwYXJzZUludChfZGF0YVN0cmluZ1swXSksIHBhcnNlSW50KF9kYXRhU3RyaW5nWzFdKSwgcGFyc2VJbnQoX2RhdGFTdHJpbmdbMl0pKTtcblx0XHR9ZWxzZXtcblx0XHRcdHJldHVybiB0aGlzLmNvbG9yKHBhcnNlSW50KGRhdGFTdHJpbmdbMF0pLCBwYXJzZUludChfZGF0YVN0cmluZ1sxXSksIHBhcnNlSW50KF9kYXRhU3RyaW5nWzJdKSwgcGFyc2VJbnQoX2RhdGFTdHJpbmdbM10pKTtcblx0XHR9XG5cdH1cblxuXHRzdGF0aWMgZ2V0VmVjdG9yKF9kYXRhU3RyaW5nLCB0eXBlID0gXCJwb3NpdGlvblwiKXtcblx0XHRfZGF0YVN0cmluZyA9IF9kYXRhU3RyaW5nLnNwbGl0KFwiLFwiKTtcblx0XHRpZih0eXBlID09IFwicG9zaXRpb25cIil7XG5cdFx0XHRyZXR1cm4gbmV3IEJBQllMT04uVmVjdG9yMyhwYXJzZUludChfZGF0YVN0cmluZ1swXSksIHBhcnNlSW50KF9kYXRhU3RyaW5nWzFdKSwgcGFyc2VJbnQoX2RhdGFTdHJpbmdbMl0pKTtcblx0XHR9ZWxzZXtcblx0XHRcdHJldHVybiBuZXcgQkFCWUxPTi5WZWN0b3IzKHRoaXMuZGVnVG9SYWQocGFyc2VJbnQoX2RhdGFTdHJpbmdbMF0pKSwgdGhpcy5kZWdUb1JhZChwYXJzZUludChfZGF0YVN0cmluZ1sxXSkpLCB0aGlzLmRlZ1RvUmFkKHBhcnNlSW50KF9kYXRhU3RyaW5nWzJdKSkpO1xuXHRcdH1cblx0XHRcblx0fVxuXG5cblx0c3RhdGljIGFzc2V0c0xvYWQoKXtcblx0XHR2YXIgbG9hZGVyID0gbmV3IEJBQllMT04uQXNzZXRzTWFuYWdlcih0aGlzLl9jcnVycmVudFNjZW5lKTtcblx0XHQvKlxuXHRcdHN0YXRpYyBhc3NldHNMb2FkXG5cdFx0YXJndW1lbnRzOiBcblx0XHRqc29uQXNzZXRzID0gW1xuICAgICAgICAgICAge25hbWUgOiBcImxvZ29cIiwgc3JjIDogXCJiYXJ0dnIvaW1nL2JhcnRWUkxvZ29fYi5wbmdcIiwgdHlwZTogJ2ltYWdlJyB9LFxuICAgICAgICAgICAge25hbWUgOiBcInRhcmdldENhbVwiLCBzcmM6IFwiYmFydHZyL2ltZy90YXJnZXRfc20ucG5nXCIsIHR5cGU6ICd2aWRlbyd9XG4gICAgICAgIF07XG4gICAgICAgIGFyZ3VtZW50czogYXNzZXRIb2xkZXIsXG4gICAgICAgIGFyZ3VtZW50czogY2FsbGJhY2sgd2hlbiBmaW5pbnNoZWQsXG4gICAgICAgICovXG4gICAgICAgIHRoaXMuanNvbkFzc2V0cy5mb3JFYWNoKGZ1bmN0aW9uKG9iaikge1xuXG5cdCAgICAgICAgZnVuY3Rpb24gaW1nQXNzZXQoKXtcblx0XHRcdFx0dmFyIGltZyA9IGxvYWRlci5hZGRUZXh0dXJlVGFzayhvYmoubmFtZSwgb2JqLnNyYyk7XG5cdFx0XHQgICAgaW1nLm9uU3VjY2VzcyA9IGZ1bmN0aW9uKHQpIHtcblx0XHRcdCAgICAgICAgICAgIHRoaXMuX2Fzc2V0c1t0Lm5hbWVdID0gdC50ZXh0dXJlO1xuXHRcdFx0ICAgIH0uYmluZCh0aGlzKTtcblxuXHRcdFx0ICAgIGltZy5vbkVycm9yID0gZnVuY3Rpb24odCkge1xuXHRcdFx0ICAgICAgICAgY29uc29sZS5sb2codC5uYW1lICsgJyAtIGZhaWxlZCB0byBsb2FkJyk7XG5cdFx0XHQgICAgfS5iaW5kKHRoaXMpO1xuXHRcdFx0fVxuXG5cdCAgICAgICAgc3dpdGNoKG9iai50eXBlKSB7XG5cdFx0XHQgICAgY2FzZSAnaW1nJzpcblx0XHRcdCAgICBcdGltZ0Fzc2V0KCk7XG5cdFx0XHQgICAgICAgIGJyZWFrO1xuXHRcdFx0ICAgIGNhc2UgJ2F1ZGlvJzpcblx0XHRcdCAgICAgICAgLy90b2RvXG5cdFx0XHRcdFx0XG5cdFx0XHQgICAgICAgIGJyZWFrO1xuXHRcdFx0ICAgIGNhc2UgJ3ZpZGVvJzpcblx0XHRcdCAgICAgICAgLy90b2RvXG5cdFx0XHQgICAgICAgIGJyZWFrO1x0XG5cdFx0XHQgICAgY2FzZSAnaGRyJzpcblx0XHRcdCAgICAgICAgLy90b2RvXG5cdFx0XHQgICAgICAgIGJyZWFrOyAgXHQgICAgXHQgICAgICAgICAgICAgICAgXG5cdFx0XHQgICAgZGVmYXVsdDpcblx0XHRcdCAgICAgICAgaW1nQXNzZXQuYXBwbHkodGhpcyk7XG5cdFx0XHQgfVxuXHRcdFx0IGxvYWRlci5sb2FkKCk7XG5cdFx0XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICBcbiAgICAgICAgbG9hZGVyLm9uRmluaXNoID0gdGhpcy5hc3NldExvYWRpbmdGaW5pc2hlZC5iaW5kKHRoaXMpO1xuXG5cdH1cblx0XHRcbiAgICAgICAgXG5cbn1cdFx0XHRcdFxubW9kdWxlLmV4cG9ydHMgPSB1dGlscztcblxuXG5cdFx0Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9