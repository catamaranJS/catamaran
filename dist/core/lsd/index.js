"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}(),CES=require("ces"),utils=require("./utils/utils"),entities=require("./entities"),systems=require("./systems"),Request=require("../xhr/Request"),BABYLON=require("./lib/babylon"),lsd=function(){function lsd(){var t=arguments.length<=0||void 0===arguments[0]?document.body:arguments[0];_classCallCheck(this,lsd),this._defaults=utils.defaultArgs(),this._defaults._appendEL=t,this._data=null,this._crurrentScene,this._e_scene=new entities.e_scene(this._defaults),this._e_scene_two=new entities.e_scene(this._defaults),this._e_cameravr=null,this.camera=null,this.world=new CES.World,this.world.addEntity(this._e_scene.entity),this.world.addEntity(this._e_scene_two.entity),this.canvas,this._assets=[],Promise.all([document.querySelector("canvas")]).then(this.init.apply(this))}return _createClass(lsd,[{key:"init",value:function(){this.canvas=document.querySelector("canvas"),this.defaults=new Request("/assets/scene/scene.json",this.dataLoaded.bind(this))}},{key:"dataLoaded",value:function(){console.log(this.defaults.data),this._data=this.defaults.data,this.canvas.addEventListener("canvas_init",function(t){this.jsonAssets=this._data.assets,this._crurrentScene=this._defaults._scene=this._e_scene.scene.scene,utils.assetsLoad.apply(this)}.bind(this),!1)}},{key:"initListners",value:function(){window.addEventListener("resize",function(){this.canvas.heigth=window.innerHeight,this.canvas.width=window.innerWidth,this._crurrentScene.getEngine().resize()}.bind(this))}},{key:"loopJsonArr",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?"entities":arguments[1];switch(e){case"entities":for(var s=0;s<this._data.entities.length;s++)t(s);break;case"systems":for(var s=0;s<this._data.systems.length;s++)t(s);break;default:for(var s=0;s<this._data.entities.length;s++)t(s)}}},{key:"setDefaultsAndMaterials",value:function setDefaultsAndMaterials(i){this._data.entities[i].defaults._scene=this._crurrentScene,this._data.entities[i].defaults._canvas=this.canvas;try{this._data.entities[i].defaults=utils.merge_objects(eval("entities."+this._data.entities[i].defaults.e_type+".defaults()"),this._data.entities[i].defaults)}catch(e){console.log(e+" - error loading entity no defaults set")}}},{key:"setVectorsAndOtherDefaults",value:function setVectorsAndOtherDefaults(i){void 0!=typeof this._data.entities[i].defaults._material&&(this._data.entities[i].defaults._material=utils.getMaterials(this._data.materials,this._data.entities[i].defaults._material)),void 0!=typeof this._data.entities[i].defaults._position&&(this._data.entities[i].defaults._position=utils.getVector(this._data.entities[i].defaults._position)),void 0!=typeof this._data.entities[i].defaults._rotation&&(this._data.entities[i].defaults._rotation=utils.getVector(this._data.entities[i].defaults._rotation,"rotation"));try{var ent=eval("new entities."+this._data.entities[i].defaults.e_type+"(this._data.entities[i].defaults)");this.world.addEntity(ent.entity)}catch(e){console.log(e+" - error loading entity")}}},{key:"setSystems",value:function setSystems(i){try{this._data.systems[i].defaults._canvas=this.canvas,this._data.systems[i].defaults._scene=this._crurrentScene,this.world.addSystem(eval("new systems."+this._data.systems[i].defaults.s_type+"(this._data.systems[i].defaults)"))}catch(e){console.log(e+" - error loading system")}}},{key:"assetLoadingFinished",value:function(){this.loopJsonArr(this.setDefaultsAndMaterials.bind(this)),this.loopJsonArr(this.setVectorsAndOtherDefaults.bind(this)),this.loopJsonArr(this.setSystems.bind(this),"systems"),this.initSceneAnimation(),this.initListners()}},{key:"initSceneAnimation",value:function(){this.tick=.01,window.scene=this._crurrentScene,this.world._crurrentScene=this._crurrentScene,this.world._multiuserInit=!1,this._crurrentScene.getEngine().runRenderLoop(function(){this.tick+=.01,window.tick=this.tick,this.world.update(this.tick),this._crurrentScene.activeCamera&&this.world._multiuserInit&&this._crurrentScene.render()}.bind(this))}},{key:"initSound",value:function(){console.log(window._sharedData),null!=window._sharedData.Sound&&(this._BabylonSound=new BABYLON.Sound(window._sharedData.Sound.sID,window._sharedData.trackURL))}}]),lsd}();module.exports=lsd;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2luZGV4LmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiQ0VTIiwicmVxdWlyZSIsInV0aWxzIiwiZW50aXRpZXMiLCJzeXN0ZW1zIiwiUmVxdWVzdCIsIkJBQllMT04iLCJsc2QiLCJfYXBwZW5kRWwiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJkb2N1bWVudCIsImJvZHkiLCJ0aGlzIiwiX2RlZmF1bHRzIiwiZGVmYXVsdEFyZ3MiLCJfYXBwZW5kRUwiLCJfZGF0YSIsIl9jcnVycmVudFNjZW5lIiwiX2Vfc2NlbmUiLCJlX3NjZW5lIiwiX2Vfc2NlbmVfdHdvIiwiX2VfY2FtZXJhdnIiLCJjYW1lcmEiLCJ3b3JsZCIsIldvcmxkIiwiYWRkRW50aXR5IiwiZW50aXR5IiwiY2FudmFzIiwiX2Fzc2V0cyIsIlByb21pc2UiLCJhbGwiLCJxdWVyeVNlbGVjdG9yIiwidGhlbiIsImluaXQiLCJhcHBseSIsInZhbHVlIiwiZGVmYXVsdHMiLCJkYXRhTG9hZGVkIiwiYmluZCIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJqc29uQXNzZXRzIiwiYXNzZXRzIiwiX3NjZW5lIiwic2NlbmUiLCJhc3NldHNMb2FkIiwid2luZG93IiwiaGVpZ3RoIiwiaW5uZXJIZWlnaHQiLCJ3aWR0aCIsImlubmVyV2lkdGgiLCJnZXRFbmdpbmUiLCJyZXNpemUiLCJfZnVuY3Rpb25DYWxsIiwiX3R5cGUiLCJzZXREZWZhdWx0c0FuZE1hdGVyaWFscyIsIl9jYW52YXMiLCJtZXJnZV9vYmplY3RzIiwiZXZhbCIsImVfdHlwZSIsInNldFZlY3RvcnNBbmRPdGhlckRlZmF1bHRzIiwiX21hdGVyaWFsIiwiZ2V0TWF0ZXJpYWxzIiwibWF0ZXJpYWxzIiwiX3Bvc2l0aW9uIiwiZ2V0VmVjdG9yIiwiX3JvdGF0aW9uIiwiZW50Iiwic2V0U3lzdGVtcyIsImFkZFN5c3RlbSIsInNfdHlwZSIsImxvb3BKc29uQXJyIiwiaW5pdFNjZW5lQW5pbWF0aW9uIiwiaW5pdExpc3RuZXJzIiwidGljayIsIl9tdWx0aXVzZXJJbml0IiwicnVuUmVuZGVyTG9vcCIsInVwZGF0ZSIsImFjdGl2ZUNhbWVyYSIsInJlbmRlciIsIl9zaGFyZWREYXRhIiwiU291bmQiLCJfQmFieWxvblNvdW5kIiwic0lEIiwidHJhY2tVUkwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUlBLFNBQVNBLGlCQUFnQkMsRUFBVUMsR0FBZSxLQUFNRCxZQUFvQkMsSUFBZ0IsS0FBTSxJQUFJQyxXQUFVLHFDQUZoSCxHQUFJQyxjQUFlLFdBQWUsUUFBU0MsR0FBaUJDLEVBQVFDLEdBQVMsSUFBSyxHQUFJQyxHQUFJLEVBQUdBLEVBQUlELEVBQU1FLE9BQVFELElBQUssQ0FBRSxHQUFJRSxHQUFhSCxFQUFNQyxFQUFJRSxHQUFXQyxXQUFhRCxFQUFXQyxhQUFjLEVBQU9ELEVBQVdFLGNBQWUsRUFBVSxTQUFXRixLQUFZQSxFQUFXRyxVQUFXLEdBQU1DLE9BQU9DLGVBQWVULEVBQVFJLEVBQVdNLElBQUtOLElBQWlCLE1BQU8sVUFBVVIsRUFBYWUsRUFBWUMsR0FBaUosTUFBOUhELElBQVlaLEVBQWlCSCxFQUFZaUIsVUFBV0YsR0FBaUJDLEdBQWFiLEVBQWlCSCxFQUFhZ0IsR0FBcUJoQixNQUY3aEJrQixJQUFNQyxRQUFRLE9BQ2RDLE1BQVFELFFBQVEsaUJBQ2hCRSxTQUFXRixRQUFRLGNBQ25CRyxRQUFVSCxRQUFRLGFBQ2xCSSxRQUFV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RCxJQUFLLHVCQUNMd0MsTUFuQmdCLFdBQ25CdkIsS0FBSzhELFlBQVk5RCxLQUFLOEMsd0JBQXdCcEIsS0FBSzFCLE9BQ25EQSxLQUFLOEQsWUFBWTlELEtBQUttRCwyQkFBMkJ6QixLQUFLMUIsT0FDdERBLEtBQUs4RCxZQUFZOUQsS0FBSzJELFdBQVdqQyxLQUFLMUIsTUFBTyxXQUM3Q0EsS0FBSytELHFCQUNML0QsS0FBS2dFLGtCQXNCRmpGLElBQUsscUJBQ0x3QyxNQXBCYyxXQUNqQnZCLEtBQUtpRSxLQUFPLElBRVo1QixPQUFPRixNQUFRbkMsS0FBS0ssZUFDcEJMLEtBQUtXLE1BQU1OLGVBQWlCTCxLQUFLSyxlQUNqQ0wsS0FBS1csTUFBTXVELGdCQUFpQixFQUM1QmxFLEtBQUtLLGVBQWVxQyxZQUFZeUIsY0FBYyxXQUM3Q25FLEtBQUtpRSxNQUFRLElBQ2I1QixPQUFPNEIsS0FBT2pFLEtBQUtpRSxLQUNuQmpFLEtBQUtXLE1BQU15RCxPQUFPcEUsS0FBS2lFLE1BQ3BCakUsS0FBS0ssZUFBZWdFLGNBQWdCckUsS0FBS1csTUFBTXVELGdCQUNqRGxFLEtBQUtLLGVBQWVpRSxVQUVwQjVDLEtBQUsxQixVQTBCSmpCLElBQUssWUFDTHdDLE1BdEJLLFdBQ1JJLFFBQVFDLElBQUlTLE9BQU9rQyxhQUNZLE1BQTVCbEMsT0FBT2tDLFlBQVlDLFFBQ3JCeEUsS0FBS3lFLGNBQWdCLEdBQUloRixTQUFRK0UsTUFBTW5DLE9BQU9rQyxZQUFZQyxNQUFNRSxJQUFLckMsT0FBT2tDLFlBQVlJLGVBbklyRmpGLE1BeUlOa0YsUUFBT0MsUUFBVW5GIiwiZmlsZSI6ImNvcmUvbHNkL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENFUyA9IHJlcXVpcmUoJ2NlcycpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscy91dGlscycpO1xudmFyIGVudGl0aWVzID0gcmVxdWlyZSgnLi9lbnRpdGllcycpO1xudmFyIHN5c3RlbXMgPSByZXF1aXJlKCcuL3N5c3RlbXMnKTtcbnZhciBSZXF1ZXN0ID0gcmVxdWlyZSgnLi4veGhyL1JlcXVlc3QnKTtcbnZhciBCQUJZTE9OID0gcmVxdWlyZSgnLi9saWIvYmFieWxvbicpO1xuXG4vKipcbiAqIC4uLlxuICogQGF1dGhvciBCcmVuZG9uIFNtaXRoXG4gKiBodHRwOi8vc2VhY2xvdWQ5Lm9yZ1xuICogTGlnaHRXZWlnaHQgM0QgU3lzdGVtIERlc2lnbiBlbmdpbmVcbiAqL1xuIGNsYXNzIGxzZHtcbiBcdGNvbnN0cnVjdG9yKF9hcHBlbmRFbCA9IGRvY3VtZW50LmJvZHkpe1xuIFx0XHR0aGlzLl9kZWZhdWx0cyA9IHV0aWxzLmRlZmF1bHRBcmdzKCk7XG4gXHRcdHRoaXMuX2RlZmF1bHRzLl9hcHBlbmRFTCA9IF9hcHBlbmRFbDtcbiBcdFx0dGhpcy5fZGF0YSA9IG51bGw7XG4gXHRcdHRoaXMuX2NydXJyZW50U2NlbmU7XG4gXHRcdHRoaXMuX2Vfc2NlbmUgPSBuZXcgZW50aXRpZXMuZV9zY2VuZSh0aGlzLl9kZWZhdWx0cyk7XG4gICAgdGhpcy5fZV9zY2VuZV90d28gPSBuZXcgZW50aXRpZXMuZV9zY2VuZSh0aGlzLl9kZWZhdWx0cyk7XG4gXHRcdHRoaXMuX2VfY2FtZXJhdnIgPSBudWxsO1xuIFx0XHR0aGlzLmNhbWVyYSA9IG51bGw7XG4gXHRcdHRoaXMud29ybGQgPSBuZXcgQ0VTLldvcmxkKCk7XG4gXHRcdHRoaXMud29ybGQuYWRkRW50aXR5KHRoaXMuX2Vfc2NlbmUuZW50aXR5KTtcbiAgICB0aGlzLndvcmxkLmFkZEVudGl0eSh0aGlzLl9lX3NjZW5lX3R3by5lbnRpdHkpO1xuIFx0XHR0aGlzLmNhbnZhcztcbiBcdFx0dGhpcy5fYXNzZXRzID0gW107XG4gXHRcdFByb21pc2UuYWxsKFtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdjYW52YXMnKV0pLnRoZW4odGhpcy5pbml0LmFwcGx5KHRoaXMpKTtcbiBcdH1cblxuIFx0aW5pdCgpe1xuIFx0XHR0aGlzLmNhbnZhcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2NhbnZhcycpO1xuIFx0XHR0aGlzLmRlZmF1bHRzID0gbmV3IFJlcXVlc3QoXCIvYXNzZXRzL3NjZW5lL3NjZW5lLmpzb25cIiwgdGhpcy5kYXRhTG9hZGVkLmJpbmQodGhpcykpO1xuIFx0fVxuXG4gXHRkYXRhTG9hZGVkKCl7XG4gXHRcdGNvbnNvbGUubG9nKHRoaXMuZGVmYXVsdHMuZGF0YSk7XG4gXHRcdHRoaXMuX2RhdGEgID0gdGhpcy5kZWZhdWx0cy5kYXRhO1xuIFx0XHR0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdjYW52YXNfaW5pdCcsIGZ1bmN0aW9uIChlKSB7XG4gXHRcdFx0dGhpcy5qc29uQXNzZXRzID0gdGhpcy5fZGF0YS5hc3NldHM7XG4gXHRcdFx0dGhpcy5fY3J1cnJlbnRTY2VuZSA9IHRoaXMuX2RlZmF1bHRzLl9zY2VuZSA9IHRoaXMuX2Vfc2NlbmUuc2NlbmUuc2NlbmU7XG4gXHRcdFx0dXRpbHMuYXNzZXRzTG9hZC5hcHBseSh0aGlzKTtcbiBcdFx0fS5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiBcdH1cblxuIFx0aW5pdExpc3RuZXJzKCl7XG4gXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcbiBcdFx0XHR0aGlzLmNhbnZhcy5oZWlndGggPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gXHRcdFx0dGhpcy5jYW52YXMud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcdFxuIFx0XHRcdHRoaXMuX2NydXJyZW50U2NlbmUuZ2V0RW5naW5lKCkucmVzaXplKCk7XG4gXHRcdH0uYmluZCh0aGlzKSk7XG4gXHR9XG5cbiBcdGxvb3BKc29uQXJyKF9mdW5jdGlvbkNhbGwsIF90eXBlID0gJ2VudGl0aWVzJyl7XG4gXHRcdHN3aXRjaChfdHlwZSkge1xuXHRcdCAgICBjYXNlICdlbnRpdGllcyc6XG5cdFx0ICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5fZGF0YS5lbnRpdGllcy5sZW5ndGg7IGkrKyl7XG5cdFx0IFx0XHRcdF9mdW5jdGlvbkNhbGwoaSk7XG5cdFx0IFx0XHR9XG5cdFx0ICAgICAgICBicmVhaztcblx0XHQgICAgY2FzZSAnc3lzdGVtcyc6XG5cdFx0ICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRoaXMuX2RhdGEuc3lzdGVtcy5sZW5ndGg7IGkrKyl7XG5cdFx0IFx0XHRcdF9mdW5jdGlvbkNhbGwoaSk7XG5cdFx0IFx0XHR9XG5cdFx0ICAgICAgICBicmVhaztcdCAgICAgICAgXHRcdCAgICAgICAgXG5cdFx0ICAgIGRlZmF1bHQ6XG5cdFx0ICAgICBcdGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLl9kYXRhLmVudGl0aWVzLmxlbmd0aDsgaSsrKXtcblx0XHQgXHRcdFx0X2Z1bmN0aW9uQ2FsbChpKTtcblx0XHQgXHRcdH1cblx0XHRcblx0XHR9XG4gXHRcdFxuIFx0fVxuXG4gXHRzZXREZWZhdWx0c0FuZE1hdGVyaWFscyhpKXtcbiBcdFx0dGhpcy5fZGF0YS5lbnRpdGllc1tpXS5kZWZhdWx0cy5fc2NlbmUgPSB0aGlzLl9jcnVycmVudFNjZW5lO1xuIFx0XHR0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLl9jYW52YXMgPSB0aGlzLmNhbnZhcztcbiBcdFx0dHJ5e1xuIFx0XHRcdHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMgPSB1dGlscy5tZXJnZV9vYmplY3RzKGV2YWwoJ2VudGl0aWVzLicgKyB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLmVfdHlwZStcIi5kZWZhdWx0cygpXCIpLCB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzKTtcbiBcdFx0fWNhdGNoKGUpe1xuIFx0XHRcdGNvbnNvbGUubG9nKGUgKyAnIC0gZXJyb3IgbG9hZGluZyBlbnRpdHkgbm8gZGVmYXVsdHMgc2V0Jyk7XG4gXHRcdH1cbiBcdH1cblxuIFx0c2V0VmVjdG9yc0FuZE90aGVyRGVmYXVsdHMoaSl7XG4gXHRcdGlmKHR5cGVvZiB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLl9tYXRlcmlhbCAhPSB1bmRlZmluZWQpe1xuIFx0XHRcdHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMuX21hdGVyaWFsID0gdXRpbHMuZ2V0TWF0ZXJpYWxzKHRoaXMuX2RhdGEubWF0ZXJpYWxzLCB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLl9tYXRlcmlhbCk7XG4gXHRcdH1cbiBcdFx0aWYodHlwZW9mIHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMuX3Bvc2l0aW9uICE9IHVuZGVmaW5lZCl7XG4gXHRcdFx0dGhpcy5fZGF0YS5lbnRpdGllc1tpXS5kZWZhdWx0cy5fcG9zaXRpb24gPSB1dGlscy5nZXRWZWN0b3IodGhpcy5fZGF0YS5lbnRpdGllc1tpXS5kZWZhdWx0cy5fcG9zaXRpb24pO1xuIFx0XHR9XG4gXHRcdGlmKHR5cGVvZiB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLl9yb3RhdGlvbiAhPSB1bmRlZmluZWQpe1xuIFx0XHRcdHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMuX3JvdGF0aW9uID0gdXRpbHMuZ2V0VmVjdG9yKHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMuX3JvdGF0aW9uLCAncm90YXRpb24nKTtcbiBcdFx0fVxuIFx0XHR0cnl7XG4gXHRcdFx0dmFyIGVudCA9IGV2YWwoXCJuZXcgZW50aXRpZXMuXCIgKyB0aGlzLl9kYXRhLmVudGl0aWVzW2ldLmRlZmF1bHRzLmVfdHlwZSArIFwiKHRoaXMuX2RhdGEuZW50aXRpZXNbaV0uZGVmYXVsdHMpXCIpO1xuIFx0XHRcdHRoaXMud29ybGQuYWRkRW50aXR5KGVudC5lbnRpdHkpO1xuIFx0XHR9Y2F0Y2goZSl7XG4gXHRcdFx0Y29uc29sZS5sb2coZSArICcgLSBlcnJvciBsb2FkaW5nIGVudGl0eScpO1xuIFx0XHR9XG4gXHR9XG5cbiBcdHNldFN5c3RlbXMoaSl7XG4gXHRcdHRyeXtcbiBcdFx0XHR0aGlzLl9kYXRhLnN5c3RlbXNbaV0uZGVmYXVsdHMuX2NhbnZhcyA9IHRoaXMuY2FudmFzO1xuIFx0XHRcdHRoaXMuX2RhdGEuc3lzdGVtc1tpXS5kZWZhdWx0cy5fc2NlbmUgPSB0aGlzLl9jcnVycmVudFNjZW5lO1xuIFx0XHRcdHRoaXMud29ybGQuYWRkU3lzdGVtKCBldmFsKFwibmV3IHN5c3RlbXMuXCIgKyB0aGlzLl9kYXRhLnN5c3RlbXNbaV0uZGVmYXVsdHMuc190eXBlICsgXCIodGhpcy5fZGF0YS5zeXN0ZW1zW2ldLmRlZmF1bHRzKVwiKSk7XG4gXHRcdH1jYXRjaChlKXtcbiBcdFx0XHRjb25zb2xlLmxvZyhlICsgJyAtIGVycm9yIGxvYWRpbmcgc3lzdGVtJyk7XG4gXHRcdH1cbiBcdH1cblxuXG4gXHRhc3NldExvYWRpbmdGaW5pc2hlZCgpe1xuIFx0XHR0aGlzLmxvb3BKc29uQXJyKHRoaXMuc2V0RGVmYXVsdHNBbmRNYXRlcmlhbHMuYmluZCh0aGlzKSk7XG4gXHRcdHRoaXMubG9vcEpzb25BcnIodGhpcy5zZXRWZWN0b3JzQW5kT3RoZXJEZWZhdWx0cy5iaW5kKHRoaXMpKTtcbiBcdFx0dGhpcy5sb29wSnNvbkFycih0aGlzLnNldFN5c3RlbXMuYmluZCh0aGlzKSwgJ3N5c3RlbXMnKTtcbiBcdFx0dGhpcy5pbml0U2NlbmVBbmltYXRpb24oKTtcbiBcdFx0dGhpcy5pbml0TGlzdG5lcnMoKTtcbiBcdH1cblxuIFx0aW5pdFNjZW5lQW5pbWF0aW9uKCl7XG4gXHRcdHRoaXMudGljayA9IDAuMDE7XG4gXHRcdC8vIHRvZG8gcmVtb3ZlIHRoaXMgb25seSBmb3IgZGVidWdnaW5nIHB1cnBvc2VzXG4gXHRcdHdpbmRvdy5zY2VuZSA9IHRoaXMuX2NydXJyZW50U2NlbmU7XG4gXHRcdHRoaXMud29ybGQuX2NydXJyZW50U2NlbmUgPSB0aGlzLl9jcnVycmVudFNjZW5lO1xuIFx0XHR0aGlzLndvcmxkLl9tdWx0aXVzZXJJbml0ID0gZmFsc2U7XG4gXHRcdHRoaXMuX2NydXJyZW50U2NlbmUuZ2V0RW5naW5lKCkucnVuUmVuZGVyTG9vcChmdW5jdGlvbiAoKSB7XG4gXHRcdFx0dGhpcy50aWNrICs9IC4wMTtcbiBcdFx0XHR3aW5kb3cudGljayA9IHRoaXMudGljaztcbiBcdFx0XHR0aGlzLndvcmxkLnVwZGF0ZSh0aGlzLnRpY2spO1xuIFx0XHRcdGlmKHRoaXMuX2NydXJyZW50U2NlbmUuYWN0aXZlQ2FtZXJhICYmIHRoaXMud29ybGQuX211bHRpdXNlckluaXQpe1xuIFx0XHRcdFx0dGhpcy5fY3J1cnJlbnRTY2VuZS5yZW5kZXIoKTtcbiBcdFx0XHR9XG4gXHRcdH0uYmluZCh0aGlzKSk7XG4gXHR9XG5cbiBcdC8vYmVsb3cgdGhpcyBpcyBjb2RlIHRoYXQgc2hvdWxkIGV2ZW50dWFsbHkgYmUgZWxpbWluaWF0ZWQgb25seSBmb3IgaGFja2F0aG9uIHB1cnBvc2VzXG5cbiBcdGluaXRTb3VuZCgpe1xuIFx0XHRjb25zb2xlLmxvZyh3aW5kb3cuX3NoYXJlZERhdGEpO1xuIFx0XHRpZih3aW5kb3cuX3NoYXJlZERhdGEuU291bmQgIT0gbnVsbCl7XG4gXHRcdFx0dGhpcy5fQmFieWxvblNvdW5kID0gbmV3IEJBQllMT04uU291bmQod2luZG93Ll9zaGFyZWREYXRhLlNvdW5kLnNJRCwgd2luZG93Ll9zaGFyZWREYXRhLnRyYWNrVVJMKTtcbiBcdFx0fVxuIFx0fVxuXG5cbiB9XG4gbW9kdWxlLmV4cG9ydHMgPSBsc2Q7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9