"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}(),CES=require("ces"),utils=require("./utils/utils"),entities=require("./entities"),systems=require("./systems"),Request=require("../xhr/Request"),lsd=function(){function lsd(){_classCallCheck(this,lsd),this._defaults=utils.defaultArgs(),this._data=null,this._crurrentScene,this._e_scene=new entities.e_scene,this._e_cameravr=null,this.camera=null,this.world=new CES.World,this.world.addEntity(this._e_scene.entity),this.canvas,this._assets=[],Promise.all([document.querySelector("canvas")]).then(this.init.apply(this))}return _createClass(lsd,[{key:"init",value:function(){this.canvas=document.querySelector("canvas"),this.defaults=new Request("/assets/scene/scene.json",this.dataLoaded.bind(this))}},{key:"dataLoaded",value:function(){console.log(this.defaults.data),this._data=this.defaults.data,this.canvas.addEventListener("canvas_init",function(t){this.jsonAssets=this._data.assets,this._crurrentScene=this._defaults._scene=this._e_scene.scene.scene,utils.assetsLoad.apply(this)}.bind(this),!1)}},{key:"initListners",value:function(){window.addEventListener("resize",function(){this.canvas.heigth=window.innerHeight,this.canvas.width=window.innerWidth,this._crurrentScene.getEngine().resize()}.bind(this))}},{key:"loopJsonArr",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?"entities":arguments[1];switch(e){case"entities":for(var s=0;s<this._data.entities.length;s++)t(s);break;case"systems":for(var s=0;s<this._data.systems.length;s++)t(s);break;default:for(var s=0;s<this._data.entities.length;s++)t(s)}}},{key:"setDefaultsAndMaterials",value:function setDefaultsAndMaterials(i){this._data.entities[i].defaults._scene=this._crurrentScene,this._data.entities[i].defaults._canvas=this.canvas;try{this._data.entities[i].defaults=utils.merge_objects(eval("entities."+this._data.entities[i].defaults.e_type+".defaults()"),this._data.entities[i].defaults)}catch(e){console.log(e+" - error loading entity no defaults set")}}},{key:"setVectorsAndOtherDefaults",value:function setVectorsAndOtherDefaults(i){void 0!=typeof this._data.entities[i].defaults._material&&(this._data.entities[i].defaults._material=utils.getMaterials(this._data.materials,this._data.entities[i].defaults._material)),void 0!=typeof this._data.entities[i].defaults._position&&(this._data.entities[i].defaults._position=utils.getVector(this._data.entities[i].defaults._position)),void 0!=typeof this._data.entities[i].defaults._rotation&&(this._data.entities[i].defaults._rotation=utils.getVector(this._data.entities[i].defaults._rotation,"rotation"));try{var ent=eval("new entities."+this._data.entities[i].defaults.e_type+"(this._data.entities[i].defaults)");this.world.addEntity(ent.entity)}catch(e){console.log(e+" - error loading entity")}}},{key:"setSystems",value:function setSystems(i){try{this._data.systems[i].defaults._canvas=this.canvas,this._data.systems[i].defaults._scene=this._crurrentScene,this.world.addSystem(eval("new systems."+this._data.systems[i].defaults.s_type+"(this._data.systems[i].defaults)"))}catch(e){console.log(e+" - error loading system")}}},{key:"assetLoadingFinished",value:function(){this.loopJsonArr(this.setDefaultsAndMaterials.bind(this)),this.loopJsonArr(this.setVectorsAndOtherDefaults.bind(this)),this.loopJsonArr(this.setSystems.bind(this),"systems"),this.initSceneAnimation(),this.initListners()}},{key:"initSceneAnimation",value:function(){this.tick=.01,window.scene=this._crurrentScene,this.world._crurrentScene=this._crurrentScene,this.world._multiuserInit=!1,this._crurrentScene.getEngine().runRenderLoop(function(){this.tick+=.01,window.tick=this.tick,this.world.update(this.tick),this._crurrentScene.activeCamera&&this.world._multiuserInit&&this._crurrentScene.render()}.bind(this))}}]),lsd}();module.exports=lsd;
//# sourceMappingURL=data:application/json;base64,