"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var s=e[i];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(e,i,s){return i&&t(e.prototype,i),s&&t(e,s),e}}(),CES=require("ces"),utils=require("./utils/utils"),entities=require("./entities"),Request=require("../xhr/Request"),lsd=function(){function lsd(){_classCallCheck(this,lsd),this._defaults=utils.defaultArgs(),this._data=null,this._crurrentScene,this._e_scene=new entities.e_scene,this._e_cameravr=null,this.world=new CES.World,this.world.addEntity(this._e_scene.entity),this.pickInterval=1,this.canvas,this._assets=[],Promise.all([document.querySelector("canvas")]).then(this.init.apply(this))}return _createClass(lsd,[{key:"init",value:function(){this.canvas=document.querySelector("canvas"),this.defaults=new Request("/assets/scene/scene.json",this.dataLoaded.bind(this))}},{key:"dataLoaded",value:function(){console.log(this.defaults.data),this._data=this.defaults.data,this.canvas.addEventListener("canvas_init",function(t){this.jsonAssets=this._data.assets,this._crurrentScene=this._defaults._scene=this._e_scene.scene.scene,utils.assetsLoad.apply(this)}.bind(this),!1)}},{key:"initListners",value:function(){window.addEventListener("resize",function(){this.canvas.heigth=window.innerHeight,this.canvas.width=window.innerWidth,this._crurrentScene.getEngine().resize()}.bind(this))}},{key:"assetLoadingFinished",value:function assetLoadingFinished(){for(var i=0;i<this._data.entities.length;i++){this._data.entities[i].defaults._scene=this._crurrentScene;try{this._data.entities[i].defaults=utils.merge_objects(eval("entities."+this._data.entities[i].defaults.e_type+".defaults()"),this._data.entities[i].defaults)}catch(e){console.log(e+" - error loading entity no defaults set")}void 0!=typeof this._data.entities[i].defaults._material&&(this._data.entities[i].defaults._material=utils.getMaterials(this._data.materials,this._data.entities[i].defaults._material)),void 0!=typeof this._data.entities[i].defaults._position&&(this._data.entities[i].defaults._position=utils.getVector(this._data.entities[i].defaults._position)),void 0!=typeof this._data.entities[i].defaults._rotation&&(this._data.entities[i].defaults._rotation=utils.getVector(this._data.entities[i].defaults._rotation,"rotation"));try{var ent=eval("new entities."+this._data.entities[i].defaults.e_type+"(this._data.entities[i].defaults)");this.world.addEntity(ent.entity)}catch(e){console.log(e+" - error loading entity")}}this._defaults._name="camera",this._defaults._canvas=this.canvas,this._defaults._position=new BABYLON.Vector3(0,0,0),this._e_cameravr=new entities.e_cameravr(this._defaults),this.world.addEntity(this._e_cameravr.entity),this.initSceneAnimation(),this.initListners()}},{key:"initSceneAnimation",value:function(){this.tick=.01,this._crurrentScene.getEngine().runRenderLoop(function(){this.tick+=.01,window.tick=this.tick,this.tick%this.pickInterval<=.9&&this.tick%this.pickInterval>=.89&&this._e_cameravr.cursor.rayPick(),this._crurrentScene.activeCamera&&(this.world.update(this.tick),this._crurrentScene.render())}.bind(this))}}]),lsd}();module.exports=lsd;
//# sourceMappingURL=data:application/json;base64,