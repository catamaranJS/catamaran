"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,a,r){return a&&e(t.prototype,a),r&&e(t,r),t}}(),CES=require("ces"),BABYLON=require("../lib/babylon"),c_cameravr=require("../components/c_cameravr"),c_cursor=require("../components/c_cursor"),c_material=require("../components/c_material"),e_cameravr=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?null:arguments[0];_classCallCheck(this,e),this._defaults=null==t?this.defaults():t,this.entity=new CES.Entity,this.cursor,this.camVR,this.material,this.init()}return _createClass(e,[{key:"init",value:function(){this.cursor=new c_cursor(this._defaults),this._defaults._cursor=this.cursor.obj,this.camVR=new c_cameravr(this._defaults),this.fpsUIWindow=this.camVR.fpsUIWindow,this.material=new c_material(this._defaults),this.cursor.material=this.material,this.entity.addComponent(this.material),this.entity.addComponent(this.cursor),this.entity.addComponent(this.camVR)}}],[{key:"defaults",value:function(){return{_type:"vrCamera",e_type:"e_cameravr",_cursor:null,_fpsUI:!1,_name:"vrCamera",_oneAxisRotation:!0,_position:"0,0,0",_rotation:"0,0,0",_material:{_alpah:1,_texture:null,_uScale:1,_vScale:1,_backFaceCulling:!0,_vOffset:0,_uOffset:0,_hasAlpha:!1,_diffuseColor:"0,0,0"},_scene:{}}}}]),e}();module.exports=e_cameravr;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2VudGl0aWVzL2VfY2FtZXJhdnIuanMiXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJDRVMiLCJyZXF1aXJlIiwiQkFCWUxPTiIsImNfY2FtZXJhdnIiLCJjX2N1cnNvciIsImNfbWF0ZXJpYWwiLCJlX2NhbWVyYXZyIiwiX2RlZmF1bHRzIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwidGhpcyIsImRlZmF1bHRzIiwiZW50aXR5IiwiRW50aXR5IiwiY3Vyc29yIiwiY2FtVlIiLCJtYXRlcmlhbCIsImluaXQiLCJ2YWx1ZSIsIl9jdXJzb3IiLCJvYmoiLCJmcHNVSVdpbmRvdyIsImFkZENvbXBvbmVudCIsIl90eXBlIiwiZV90eXBlIiwiX2Zwc1VJIiwiX25hbWUiLCJfb25lQXhpc1JvdGF0aW9uIiwiX3Bvc2l0aW9uIiwiX3JvdGF0aW9uIiwiX21hdGVyaWFsIiwiX2FscGFoIiwiX3RleHR1cmUiLCJfdVNjYWxlIiwiX3ZTY2FsZSIsIl9iYWNrRmFjZUN1bGxpbmciLCJfdk9mZnNldCIsIl91T2Zmc2V0IiwiX2hhc0FscGhhIiwiX2RpZmZ1c2VDb2xvciIsIl9zY2VuZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFlBSUEsU0FBU0EsaUJBQWdCQyxFQUFVQyxHQUFlLEtBQU1ELFlBQW9CQyxJQUFnQixLQUFNLElBQUlDLFdBQVUscUNBRmhILEdBQUlDLGNBQWUsV0FBZSxRQUFTQyxHQUFpQkMsRUFBUUMsR0FBUyxJQUFLLEdBQUlDLEdBQUksRUFBR0EsRUFBSUQsRUFBTUUsT0FBUUQsSUFBSyxDQUFFLEdBQUlFLEdBQWFILEVBQU1DLEVBQUlFLEdBQVdDLFdBQWFELEVBQVdDLGFBQWMsRUFBT0QsRUFBV0UsY0FBZSxFQUFVLFNBQVdGLEtBQVlBLEVBQVdHLFVBQVcsR0FBTUMsT0FBT0MsZUFBZVQsRUFBUUksRUFBV00sSUFBS04sSUFBaUIsTUFBTyxVQUFVUixFQUFhZSxFQUFZQyxHQUFpSixNQUE5SEQsSUFBWVosRUFBaUJILEVBQVlpQixVQUFXRixHQUFpQkMsR0FBYWIsRUFBaUJILEVBQWFnQixHQUFxQmhCLE1BRjdoQmtCLElBQU1DLFFBQVEsT0FDZEMsUUFBVUQsUUFBUSxrQkFDbEJFLFdBQWFGLFFBQVEsNEJBQ3JCRyxTQUFXSCxRQUFRLDBCQUNuQkksV0FBYUosUUFBUSw0QkFPbkJLLFdBQVUsV0FDSixRQUROQSxLQVNKLEdBUldDLEdBQVNDLFVBQUFuQixRQUFBLEdBQUFvQixTQUFBRCxVQUFBLEdBQUcsS0FBSUEsVUFBQSxFQVUzQjVCLGlCQUFnQjhCLEtBWFpKLEdBRUpJLEtBQUtILFVBQXlCLE1BQWJBLEVBQW9CRyxLQUFLQyxXQUFZSixFQUN0REcsS0FBS0UsT0FBUyxHQUFJWixLQUFJYSxPQUN0QkgsS0FBS0ksT0FDTEosS0FBS0ssTUFDTEwsS0FBS00sU0FDTE4sS0FBS08sT0F1RE4sTUF6Q0FqQyxjQXJCS3NCLElBc0JKVixJQUFLLE9BQ0xzQixNQVlHLFdBQ0hSLEtBQUtJLE9BQVMsR0FBSVYsVUFBU00sS0FBS0gsV0FDaENHLEtBQUtILFVBQVVZLFFBQVVULEtBQUtJLE9BQU9NLElBQ3JDVixLQUFLSyxNQUFRLEdBQUlaLFlBQVdPLEtBQUtILFdBQ2pDRyxLQUFLVyxZQUFjWCxLQUFLSyxNQUFNTSxZQUM5QlgsS0FBS00sU0FBVyxHQUFJWCxZQUFXSyxLQUFLSCxXQUNwQ0csS0FBS0ksT0FBT0UsU0FBV04sS0FBS00sU0FDNUJOLEtBQUtFLE9BQU9VLGFBQWFaLEtBQUtNLFVBQzlCTixLQUFLRSxPQUFPVSxhQUFhWixLQUFLSSxRQUM5QkosS0FBS0UsT0FBT1UsYUFBYVosS0FBS0ssWUFUOUJuQixJQUFLLFdBQ0xzQixNQTFCYyxXQUNkLE9BQ0NLLE1BQU0sV0FDTkMsT0FBTyxhQUNQTCxRQUFRLEtBQ1JNLFFBQU8sRUFDUEMsTUFBTSxXQUNOQyxrQkFBaUIsRUFDakJDLFVBQVUsUUFDVkMsVUFBVSxRQUNWQyxXQUNLQyxPQUFPLEVBQ1ZDLFNBQVMsS0FDVEMsUUFBUyxFQUNUQyxRQUFTLEVBQ1RDLGtCQUFrQixFQUNsQkMsU0FBVSxFQUNWQyxTQUFVLEVBQ1ZDLFdBQVUsRUFDVkMsY0FBZSxTQUVqQkMsZUEvQkdsQyxJQWdETm1DLFFBQU9DLFFBQVVwQyIsImZpbGUiOiJjb3JlL2xzZC9lbnRpdGllcy9lX2NhbWVyYXZyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENFUyA9IHJlcXVpcmUoJ2NlcycpO1xudmFyIEJBQllMT04gPSByZXF1aXJlKCcuLi9saWIvYmFieWxvbicpO1xudmFyIGNfY2FtZXJhdnIgPSByZXF1aXJlKCcuLi9jb21wb25lbnRzL2NfY2FtZXJhdnInKTtcbnZhciBjX2N1cnNvciA9IHJlcXVpcmUoJy4uL2NvbXBvbmVudHMvY19jdXJzb3InKTtcbnZhciBjX21hdGVyaWFsID0gcmVxdWlyZSgnLi4vY29tcG9uZW50cy9jX21hdGVyaWFsJyk7XG4vKipcbiAqIC4uLlxuICogQGF1dGhvciBCcmVuZG9uIFNtaXRoXG4gKiBodHRwOi8vc2VhY2xvdWQ5Lm9yZ1xuICogTGlnaHRXZWlnaHQgM0QgU3lzdGVtIERlc2lnbiBlbmdpbmVcbiAqL1xuY2xhc3MgZV9jYW1lcmF2cntcblx0Y29uc3RydWN0b3IoX2RlZmF1bHRzID0gbnVsbCl7XG5cdFx0dGhpcy5fZGVmYXVsdHMgPSBfZGVmYXVsdHMgPT0gbnVsbCA/IHRoaXMuZGVmYXVsdHMoKTogX2RlZmF1bHRzO1xuXHRcdHRoaXMuZW50aXR5ID0gbmV3IENFUy5FbnRpdHkoKTtcblx0XHR0aGlzLmN1cnNvcjtcblx0XHR0aGlzLmNhbVZSO1xuXHRcdHRoaXMubWF0ZXJpYWw7XG5cdFx0dGhpcy5pbml0KCk7XG5cdH1cblxuXHRzdGF0aWMgZGVmYXVsdHMoKXtcblx0XHRyZXR1cm57XG5cdFx0XHRfdHlwZTondnJDYW1lcmEnLFxuXHRcdFx0ZV90eXBlOidlX2NhbWVyYXZyJyxcblx0XHRcdF9jdXJzb3I6bnVsbCxcblx0XHRcdF9mcHNVSTpmYWxzZSxcblx0XHRcdF9uYW1lOid2ckNhbWVyYScsXG5cdFx0XHRfb25lQXhpc1JvdGF0aW9uOnRydWUsXG5cdFx0XHRfcG9zaXRpb246JzAsMCwwJyxcblx0XHRcdF9yb3RhdGlvbjonMCwwLDAnLFxuXHRcdFx0X21hdGVyaWFsOntcblx0XHRcdFx0ICAgIF9hbHBhaDoxLjAsXG5cdFx0XHRcdFx0X3RleHR1cmU6bnVsbCxcblx0XHRcdFx0XHRfdVNjYWxlOiAxLjAsXG5cdFx0XHRcdFx0X3ZTY2FsZTogMS4wLFxuXHRcdFx0XHRcdF9iYWNrRmFjZUN1bGxpbmc6IHRydWUsXG5cdFx0XHRcdFx0X3ZPZmZzZXQ6IDAuMCxcblx0XHRcdFx0XHRfdU9mZnNldDogMC4wLFxuXHRcdFx0XHRcdF9oYXNBbHBoYTpmYWxzZSxcblx0XHRcdFx0XHRfZGlmZnVzZUNvbG9yOiAnMCwwLDAnLFxuXHRcdFx0XHR9LFxuXHRcdFx0X3NjZW5lOnt9LFxuXHRcdH1cblx0fVxuXG5cdGluaXQoKXtcblx0XHR0aGlzLmN1cnNvciA9IG5ldyBjX2N1cnNvcih0aGlzLl9kZWZhdWx0cyk7XG5cdFx0dGhpcy5fZGVmYXVsdHMuX2N1cnNvciA9IHRoaXMuY3Vyc29yLm9iajtcblx0XHR0aGlzLmNhbVZSID0gbmV3IGNfY2FtZXJhdnIodGhpcy5fZGVmYXVsdHMpO1xuXHRcdHRoaXMuZnBzVUlXaW5kb3cgPSB0aGlzLmNhbVZSLmZwc1VJV2luZG93O1xuXHRcdHRoaXMubWF0ZXJpYWwgPSBuZXcgY19tYXRlcmlhbCh0aGlzLl9kZWZhdWx0cyk7XG5cdFx0dGhpcy5jdXJzb3IubWF0ZXJpYWwgPSB0aGlzLm1hdGVyaWFsO1xuXHRcdHRoaXMuZW50aXR5LmFkZENvbXBvbmVudCh0aGlzLm1hdGVyaWFsKTtcblx0XHR0aGlzLmVudGl0eS5hZGRDb21wb25lbnQodGhpcy5jdXJzb3IpO1xuXHRcdHRoaXMuZW50aXR5LmFkZENvbXBvbmVudCh0aGlzLmNhbVZSKTtcblx0fVxuXG59XG5tb2R1bGUuZXhwb3J0cyA9IGVfY2FtZXJhdnI7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9