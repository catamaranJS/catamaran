"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),DOM=function(){function t(e){_classCallCheck(this,t);var n=document.querySelectorAll(e);this.length=n.length,this.children=[],navigator.userAgent.indexOf("Chrome")>-1?Object.assign(this,Array.prototype.slice.call(n)):Object.assign(this,n)}return _createClass(t,[{key:"each",value:function(t){var e=!0,n=!1,i=void 0;try{for(var s,r=Array.from(this)[Symbol.iterator]();!(e=(s=r.next()).done);e=!0){var a=s.value;t.call(a)}}catch(l){n=!0,i=l}finally{try{!e&&r["return"]&&r["return"]()}finally{if(n)throw i}}return this}},{key:"hide",value:function(){return this.each(function(){this.style.display="none"})}},{key:"show",value:function(){return this.each(function(){this.style.display="block"})}},{key:"onVisible",value:function(t){return this.each(function(){if(CATAMARAN.core.DOM.isVisible(this))t.call(this);else var e=setInterval(function(){CATAMARAN.core.DOM.isVisible(this)&&(t.call(this),clearInterval(e))},50)})}},{key:"addClass",value:function(t){return this.each(function(){this.classList.add(t)})}},{key:"removeClass",value:function(t){return this.each(function(){this.classList.remove(t)})}},{key:"hasClass",value:function(t){return this[0].classList.contains(t)}},{key:"toggle",value:function(t){var e=this;return this.each(function(){this.classList.contains(t)?e.removeClass(t):e.addClass(t)})}},{key:"on",value:function(t,e){return this.each(function(){this.addEventListener(t,e,!1)})}},{key:"off",value:function(t,e){return this.each(function(){this.removeEventListener(t,e,!1)})}},{key:"width",value:function(){var t=void 0===arguments[0]?null:arguments[0],e=t;return null==e?this[0].offsetWidth:this.each(function(){this.style.width=e})}},{key:"height",value:function(){var t=void 0===arguments[0]?null:arguments[0],e=t;return null==e?this[0].offsetHeight:this.each(function(){this.style.height=e})}},{key:"css",value:function(t){var e=t;return this.each(function(){for(var t in e)this.style[t]=e[t]})}}],[{key:"isVisible",value:function(t){return t.offsetWidth>0&&t.offsetHeight>0}}]),t}();module.exports=DOM;
//# sourceMappingURL=data:application/json;base64,