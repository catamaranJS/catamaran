"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),Carousel=function(){function e(n){var t=void 0===arguments[1]?{speed:4,fadeIn:!0,fadeDelay:250}:arguments[1];_classCallCheck(this,e),this._settings=t,this._selectorArr=document.querySelectorAll(n),this._elmArr=new CATAMARAN.Extend(n),this.init()}return _createClass(e,[{key:"init",value:function(){function e(){s=f[0].scrollWidth;var e=new CATAMARAN.Extend(".forward"),n=new CATAMARAN.Extend(".backward");CATAMARAN.isMobile()?(f[0].setAttribute("style","overflow-y:hidden; overflow-x:scroll"),f[0].scrollLeft=0,e.hide(),n.hide()):(f[0].setAttribute("style","overflow:visible"),f[0].scrollLeft=0,e.show(),n.show()),d._update()}for(var n=this,t=0,r=n._selectorArr.length;r>t;t++){var a,o,l,s,i,A=new CATAMARAN.Extend("."+n._elmArr[t].className),d=n._selectorArr[t],c='<span class="forward"></span>',u='<span class="backward"></span>',f=d.querySelectorAll(".reel"),w=d.querySelectorAll("article"),v=0;if(n._settings.fadeIn){for(var t=0,r=w.length;r>t;t++)w[t].classList.add("loading");A.onVisible(function(){var e,t=w.length-Math.ceil(window.innerWidth/l);e=window.setInterval(function(){var n=d.querySelectorAll(".loading"),r=n[0];if(n.length<=t){window.clearInterval(e);for(var a=0,o=w.length;o>a;a++)w[a].classList.remove("loading")}else"undefined"!=typeof r&&r.classList.remove("loading")},n._settings.fadeDelay)},50)}d._update=function(){v=0,o=-1*s+window.innerWidth,a=0,d._updatePos()},d._updatePos=function(){f[0].setAttribute("style","transform:translate("+v+"px, 0)")},d.insertAdjacentHTML("beforeEnd",c);var h=new CATAMARAN.Extend(".forward");h.hide(),CATAMARAN.Events.on(".forward","mouseenter",function(e){CATAMARAN.interval=window.setInterval(function(){v-=n._settings.speed,o>=v&&(window.clearInterval(CATAMARAN.interval),v=o),d._updatePos()},10)}),CATAMARAN.Events.on(".forward","mouseleave",function(e){window.clearInterval(CATAMARAN.interval)}),d.insertAdjacentHTML("beforeEnd",u);var C=new CATAMARAN.Extend(".backward");C.hide(),CATAMARAN.Events.on(".backward","mouseenter",function(e){CATAMARAN.interval=window.setInterval(function(){v+=n._settings.speed,v>=a&&(window.clearInterval(i),v=a),d._updatePos()},10)}),CATAMARAN.Events.on(".backward","mouseleave",function(e){window.clearInterval(CATAMARAN.interval)}),e(),CATAMARAN.Events.on("body","resize",function(n){e()})}}}]),e}();module.exports=Carousel;
//# sourceMappingURL=data:application/json;base64,