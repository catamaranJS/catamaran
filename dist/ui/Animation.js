"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),Animation=function(){function e(){_classCallCheck(this,e),this.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,this.animating=!0,this.interval=1,this.timers=[]}return _createClass(e,[{key:"stop",value:function(){this.animating=!1}},{key:"handleAnimation",value:function(e){function n(){return e.apply(this,arguments)}return n.toString=function(){return e.toString()},n}(function(){animating&&(this.requestAnimationFrame(handleAnimation),this.tick())})},{key:"tick",value:function(){this.interval+=1}},{key:"timer",value:function(e){e()&&this.timers.push(e)&&!this.animating&&(this.animating=!0,handleAnimation())}},{key:"linearEase",value:function(e,n,t,a){return t*e/a+n}},{key:"easeInQuad",value:function(e,n,t,a){return t*(e/=a)*e+n}},{key:"easeOutQuad",value:function(e,n,t,a){return-t*(e/=a)*(e-2)+n}},{key:"easeInOutQuad",value:function(e,n,t,a){return(e/=a/2)<1?t/2*e*e+n:-t/2*(--e*(e-2)-1)+n}},{key:"easeInCubic",value:function(e,n,t,a){return t*Math.pow(e/a,3)+n}},{key:"easeOutCubic",value:function(e,n,t,a){return t*(Math.pow(e/a-1,3)+1)+n}},{key:"easeInOutCubic",value:function(e,n,t,a){return(e/=a/2)<1?t/2*Math.pow(e,3)+n:t/2*(Math.pow(e-2,3)+2)+n}},{key:"easeInQuart",value:function(e,n,t,a){return t*Math.pow(e/a,4)+n}},{key:"easeOutQuart",value:function(e,n,t,a){return-t*(Math.pow(e/a-1,4)-1)+n}},{key:"easeInOutQuart",value:function(e,n,t,a){return(e/=a/2)<1?t/2*Math.pow(e,4)+n:-t/2*(Math.pow(e-2,4)-2)+n}},{key:"easeInQuint",value:function(e,n,t,a){return t*Math.pow(e/a,5)+n}},{key:"easeOutQuint",value:function(e,n,t,a){return t*(Math.pow(e/a-1,5)+1)+n}},{key:"easeInOutQuint",value:function(e,n,t,a){return(e/=a/2)<1?t/2*Math.pow(e,5)+n:t/2*(Math.pow(e-2,5)+2)+n}},{key:"easeInSine",value:function(e,n,t,a){return t*(1-Math.cos(e/a*(Math.PI/2)))+n}},{key:"easeOutSine",value:function(e,n,t,a){return t*Math.sin(e/a*(Math.PI/2))+n}},{key:"easeInOutSine",value:function(e,n,t,a){return t/2*(1-Math.cos(Math.PI*e/a))+n}},{key:"easeInExpo",value:function(e,n,t,a){return t*Math.pow(2,10*(e/a-1))+n}},{key:"easeOutExpo",value:function(e,n,t,a){return t*(-Math.pow(2,-10*e/a)+1)+n}},{key:"easeInOutExpo",value:function(e,n,t,a){return(e/=a/2)<1?t/2*Math.pow(2,10*(e-1))+n:t/2*(-Math.pow(2,-10*--e)+2)+n}},{key:"easeInCirc",value:function(e,n,t,a){return t*(1-Math.sqrt(1-(e/=a)*e))+n}},{key:"easeOutCirc",value:function(e,n,t,a){return t*Math.sqrt(1-(e=e/a-1)*e)+n}},{key:"easeInOutCirc",value:function(e,n,t,a){return(e/=a/2)<1?t/2*(1-Math.sqrt(1-e*e))+n:t/2*(Math.sqrt(1-(e-=2)*e)+1)+n}}]),e}();module.exports=Animation;
//# sourceMappingURL=data:application/json;base64,