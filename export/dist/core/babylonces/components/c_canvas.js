"use strict";function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function n(n,t){for(var e=0;e<t.length;e++){var a=t[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(t,e,a){return e&&n(t.prototype,e),a&&n(t,a),t}}(),CES=require("ces"),BABYLON=require("../lib/babylon"),c_canvas=function(){function n(){var t=arguments.length<=0||void 0===arguments[0]?"canvas":arguments[0];_classCallCheck(this,n),this.name=t,this.canvas=document.createElement("canvas"),document.body.appendChild(this.canvas),this.canvas.style.width=window.innerWidth+"px",this.canvas.style.height=window.innerHeight+"px",this.canvas.style.display="block",this.canvas.style["float"]="left",this.canvas.heigth=window.innerHeight,this.canvas.width=window.innerWidth,this.canvas.event=new Event("canvas_init"),this.canvas.addEventListener("touchmove",function(n){n.preventDefault()}),Promise.all([document.querySelector("canvas")]).then(this.init.apply(this)),this.options={name:this.name,init:this.constructor,obj:null}}return _createClass(n,[{key:"init",value:function(){setTimeout(function(){this.options.obj=this.canvas,CES.Component.extend(this.options),this.canvas.dispatchEvent(this.canvas.event)}.bind(this),200)}}]),n}();module.exports=c_canvas;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvYmFieWxvbmNlcy9jb21wb25lbnRzL2NfY2FudmFzLmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiQ0VTIiwicmVxdWlyZSIsIkJBQllMT04iLCJjX2NhbnZhcyIsIl9uYW1lIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwidGhpcyIsIm5hbWUiLCJjYW52YXMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJzdHlsZSIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImlubmVySGVpZ2h0IiwiZGlzcGxheSIsImhlaWd0aCIsImV2ZW50IiwiRXZlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicHJldmVudERlZmF1bHQiLCJQcm9taXNlIiwiYWxsIiwicXVlcnlTZWxlY3RvciIsInRoZW4iLCJpbml0IiwiYXBwbHkiLCJvcHRpb25zIiwiY29uc3RydWN0b3IiLCJvYmoiLCJ2YWx1ZSIsInNldFRpbWVvdXQiLCJDb21wb25lbnQiLCJleHRlbmQiLCJkaXNwYXRjaEV2ZW50IiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLFlBSUEsU0FBU0EsaUJBQWdCQyxFQUFVQyxHQUFlLEtBQU1ELFlBQW9CQyxJQUFnQixLQUFNLElBQUlDLFdBQVUscUNBRmhILEdBQUlDLGNBQWUsV0FBZSxRQUFTQyxHQUFpQkMsRUFBUUMsR0FBUyxJQUFLLEdBQUlDLEdBQUksRUFBR0EsRUFBSUQsRUFBTUUsT0FBUUQsSUFBSyxDQUFFLEdBQUlFLEdBQWFILEVBQU1DLEVBQUlFLEdBQVdDLFdBQWFELEVBQVdDLGFBQWMsRUFBT0QsRUFBV0UsY0FBZSxFQUFVLFNBQVdGLEtBQVlBLEVBQVdHLFVBQVcsR0FBTUMsT0FBT0MsZUFBZVQsRUFBUUksRUFBV00sSUFBS04sSUFBaUIsTUFBTyxVQUFVUixFQUFhZSxFQUFZQyxHQUFpSixNQUE5SEQsSUFBWVosRUFBaUJILEVBQVlpQixVQUFXRixHQUFpQkMsR0FBYWIsRUFBaUJILEVBQWFnQixHQUFxQmhCLE1BRjdoQmtCLElBQU1DLFFBQVEsT0FDZEMsUUFBVUQsUUFBUSxrQkFFaEJFLFNBQVEsV0FDRixRQUROQSxLQVFKLEdBUFdDLEdBQUtDLFVBQUFoQixRQUFBLEdBQUFpQixTQUFBRCxVQUFBLEdBQUcsU0FBUUEsVUFBQSxFQVMzQnpCLGlCQUFnQjJCLEtBVlpKLEdBRUpJLEtBQUtDLEtBQU9KLEVBQ1pHLEtBQUtFLE9BQVNDLFNBQVNDLGNBQWMsVUFDckNELFNBQVNFLEtBQUtDLFlBQVlOLEtBQUtFLFFBQ3pCRixLQUFLRSxPQUFPSyxNQUFNQyxNQUFRQyxPQUFPQyxXQUFhLEtBQzlDVixLQUFLRSxPQUFPSyxNQUFNSSxPQUFTRixPQUFPRyxZQUFjLEtBQ2hEWixLQUFLRSxPQUFPSyxNQUFNTSxRQUFVLFFBQzVCYixLQUFLRSxPQUFPSyxNQUFaUCxTQUEwQixPQUNoQ0EsS0FBS0UsT0FBT1ksT0FBU0wsT0FBT0csWUFDdEJaLEtBQUtFLE9BQU9NLE1BQVFDLE9BQU9DLFdBRTNCVixLQUFLRSxPQUFPYSxNQUFRLEdBQUlDLE9BQU0sZUFFOUJoQixLQUFLRSxPQUFPZSxpQkFBaUIsWUFBYSxTQUFVRixHQUNyREEsRUFBTUcsbUJBRVhDLFFBQVFDLEtBQUtqQixTQUFTa0IsY0FBYyxZQUFZQyxLQUFLdEIsS0FBS3VCLEtBQUtDLE1BQU14QixPQUNyRUEsS0FBS3lCLFNBQ0p4QixLQUFLRCxLQUFLQyxLQUNWc0IsS0FBTXZCLEtBQUswQixZQUNYQyxJQUFJLE1BeUJOLE1BWEFsRCxjQW5DS21CLElBb0NKUCxJQUFLLE9BQ0x1QyxNQVhHLFdBQ0hDLFdBQVcsV0FDVjdCLEtBQUt5QixRQUFRRSxJQUFNM0IsS0FBS0UsT0FDeEJULElBQUlxQyxVQUFVQyxPQUFPL0IsS0FBS3lCLFNBQzFCekIsS0FBS0UsT0FBTzhCLGNBQWNoQyxLQUFLRSxPQUFPYSxRQUNyQ2tCLEtBQUtqQyxNQUFPLFNBL0JWSixJQW1DTnNDLFFBQU9DLFFBQVV2QyIsImZpbGUiOiJjb3JlL2JhYnlsb25jZXMvY29tcG9uZW50cy9jX2NhbnZhcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBDRVMgPSByZXF1aXJlKCdjZXMnKTtcbnZhciBCQUJZTE9OID0gcmVxdWlyZSgnLi4vbGliL2JhYnlsb24nKTtcblxuY2xhc3MgY19jYW52YXMge1xuXHRjb25zdHJ1Y3RvcihfbmFtZSA9ICdjYW52YXMnKXtcblx0XHR0aGlzLm5hbWUgPSBfbmFtZTtcblx0XHR0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xuXHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpO1xuICAgICAgICB0aGlzLmNhbnZhcy5zdHlsZS53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoICsgJ3B4JztcbiAgICAgICAgdGhpcy5jYW52YXMuc3R5bGUuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgdGhpcy5jYW52YXMuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIHRoaXMuY2FudmFzLnN0eWxlLmZsb2F0ID0gJ2xlZnQnO1xuXHRcdHRoaXMuY2FudmFzLmhlaWd0aCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcdFx0XHRcdFxuXG4gICAgICAgIHRoaXMuY2FudmFzLmV2ZW50ID0gbmV3IEV2ZW50KCdjYW52YXNfaW5pdCcpO1xuICAgICAgICAvL0JBQllMT04uU2NlbmVMb2FkZXIuU2hvd0xvYWRpbmdTY3JlZW4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZnVuY3Rpb24gKGV2ZW50KSB7XG5cdCAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdCAgICB9KTtcblx0XHRQcm9taXNlLmFsbChbZG9jdW1lbnQucXVlcnlTZWxlY3RvcignY2FudmFzJyldKS50aGVuKHRoaXMuaW5pdC5hcHBseSh0aGlzKSk7XG5cdFx0dGhpcy5vcHRpb25zID0ge1xuXHRcdFx0bmFtZTp0aGlzLm5hbWUgLFxuXHRcdFx0aW5pdDogdGhpcy5jb25zdHJ1Y3Rvcixcblx0XHRcdG9iajpudWxsXG5cdFx0fVxuXG5cdH1cblxuXHRpbml0KCl7XG5cdFx0c2V0VGltZW91dChmdW5jdGlvbigpe1xuXHRcdFx0dGhpcy5vcHRpb25zLm9iaiA9IHRoaXMuY2FudmFzO1xuXHRcdFx0Q0VTLkNvbXBvbmVudC5leHRlbmQodGhpcy5vcHRpb25zKTtcblx0XHRcdHRoaXMuY2FudmFzLmRpc3BhdGNoRXZlbnQodGhpcy5jYW52YXMuZXZlbnQpO1xuXHRcdH0uYmluZCh0aGlzKSwgMjAwKVxuXHR9XG5cbn1cbm1vZHVsZS5leHBvcnRzID0gY19jYW52YXM7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9