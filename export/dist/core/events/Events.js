"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),Events=function(){function e(){_classCallCheck(this,e),this.topics={},this.hOP=this.topics.hasOwnProperty}return _createClass(e,[{key:"subscribe",value:function(e,t){var n=this;this.hOP.call(this.topics,e)||(this.topics[e]=[]);var o=this.topics[e].push(t)-1;return{remove:function(){delete n.topics[e][o]}}}},{key:"publish",value:function(e,t){this.hOP.call(this.topics,e)&&this.topics[e].forEach(function(e){e(void 0!=t?t:{})})}}],[{key:"on",value:function(e,t,n){if(void 0===e&&(e=null),"string"==typeof e){e=document.querySelectorAll(e);for(var o=0,r=e.length;r>o;o++)e[o].addEventListener(t.toLowerCase(),n)}else addEventListener(t.toLowerCase(),n)}},{key:"off",value:function(e,t,n){if(void 0===e&&(e=null),"string"==typeof e){e=document.querySelectorAll(e);for(var o=0,r=e.length;r>o;o++)e[o].removeEventListener(t.toLowerCase(),n)}else removeEventListener(t.toLowerCase(),n)}}]),e}();exports.Events=Events;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvZXZlbnRzL0V2ZW50cy5qcyJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsInByb3RvdHlwZSIsIkV2ZW50cyIsInRoaXMiLCJ0b3BpY3MiLCJoT1AiLCJoYXNPd25Qcm9wZXJ0eSIsInRvcGljIiwibGlzdGVuZXIiLCJzZWxmIiwiY2FsbCIsImluZGV4IiwicHVzaCIsInJlbW92ZSIsImluZm8iLCJmb3JFYWNoIiwiaXRlbSIsInVuZGVmaW5lZCIsImVsZW1lbnRBcnIiLCJldmVudCIsImZuIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvTG93ZXJDYXNlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUEsWUFRQSxTQUFTQSxpQkFBZ0JDLEVBQVVDLEdBQWUsS0FBTUQsWUFBb0JDLElBQWdCLEtBQU0sSUFBSUMsV0FBVSxxQ0FOaEhDLE9BQU9DLGVBQWVDLFFBQVMsY0FDM0JDLE9BQU8sR0FHWCxJQUFJQyxjQUFlLFdBQWUsUUFBU0MsR0FBaUJDLEVBQVFDLEdBQVMsSUFBSyxHQUFJQyxHQUFJLEVBQUdBLEVBQUlELEVBQU1FLE9BQVFELElBQUssQ0FBRSxHQUFJRSxHQUFhSCxFQUFNQyxFQUFJRSxHQUFXQyxXQUFhRCxFQUFXQyxhQUFjLEVBQU9ELEVBQVdFLGNBQWUsRUFBVSxTQUFXRixLQUFZQSxFQUFXRyxVQUFXLEdBQU1iLE9BQU9DLGVBQWVLLEVBQVFJLEVBQVdJLElBQUtKLElBQWlCLE1BQU8sVUFBVVosRUFBYWlCLEVBQVlDLEdBQWlKLE1BQTlIRCxJQUFZVixFQUFpQlAsRUFBWW1CLFVBQVdGLEdBQWlCQyxHQUFhWCxFQUFpQlAsRUFBYWtCLEdBQXFCbEIsTUFOcGhCb0IsT0FBTSxXQUVKLFFBRkZBLEtBWUx0QixnQkFBZ0J1QixLQVpYRCxHQUdMQyxLQUFLQyxVQUNMRCxLQUFLRSxJQUFNRixLQUFLQyxPQUFPRSxlQWdFM0IsTUFsREFsQixjQWxCU2MsSUFtQkxKLElBQUssWUFDTFgsTUFVSyxTQUFDb0IsRUFBT0MsR0FDZixHQUFJQyxHQUFPTixJQUNQQSxNQUFLRSxJQUFJSyxLQUFLUCxLQUFLQyxPQUFRRyxLQUFRSixLQUFLQyxPQUFPRyxNQUNuRCxJQUFJSSxHQUFRUixLQUFLQyxPQUFPRyxHQUFPSyxLQUFLSixHQUFXLENBQy9DLFFBQ0VLLE9BQVEsaUJBQ0NKLEdBQUtMLE9BQU9HLEdBQU9JLFFBTDVCYixJQUFLLFVBQ0xYLE1BU0csU0FBQ29CLEVBQU9PLEdBQ1RYLEtBQUtFLElBQUlLLEtBQUtQLEtBQUtDLE9BQVFHLElBQy9CSixLQUFLQyxPQUFPRyxHQUFPUSxRQUFRLFNBQVNDLEdBQzlCQSxFQUFhQyxRQUFSSCxFQUFvQkEsYUFMN0JoQixJQUFLLEtBQ0xYLE1BakNLLFNBQUMrQixFQUFtQkMsRUFBT0MsR0FDaEMsR0FEZ0JILFNBQVZDLElBQUFBLEVBQWEsTUFDTSxnQkFBZEEsR0FBdUIsQ0FDOUJBLEVBQWFHLFNBQVNDLGlCQUFpQkosRUFDdkMsS0FBSyxHQUFJMUIsR0FBSSxFQUFHK0IsRUFBTUwsRUFBV3pCLE9BQVk4QixFQUFKL0IsRUFBU0EsSUFDOUMwQixFQUFXMUIsR0FBR2dDLGlCQUFpQkwsRUFBTU0sY0FBZUwsT0FHekRJLGtCQUFpQkwsRUFBTU0sY0FBZUwsTUF1Q3pDdEIsSUFBSyxNQUNMWCxNQW5DTSxTQUFDK0IsRUFBbUJDLEVBQU9DLEdBQ2pDLEdBRGlCSCxTQUFWQyxJQUFBQSxFQUFhLE1BQ0ssZ0JBQWRBLEdBQXVCLENBQzlCQSxFQUFhRyxTQUFTQyxpQkFBaUJKLEVBQ3ZDLEtBQUssR0FBSTFCLEdBQUksRUFBRytCLEVBQU1MLEVBQVd6QixPQUFZOEIsRUFBSi9CLEVBQVNBLElBQzlDMEIsRUFBVzFCLEdBQUdrQyxvQkFBb0JQLEVBQU1NLGNBQWVMLE9BRzNETSxxQkFBb0JQLEVBQU1NLGNBQWVMLE9BMUJ4Q2xCLElBdUViaEIsU0FBUWdCLE9BQVNBIiwiZmlsZSI6ImNvcmUvZXZlbnRzL0V2ZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFdmVudHMge1xuICAgIFxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnRvcGljcyA9IHt9O1xuICAgICAgICB0aGlzLmhPUCA9IHRoaXMudG9waWNzLmhhc093blByb3BlcnR5O1xuICAgIH1cblxuICAgIHN0YXRpYyBvbihlbGVtZW50QXJyID0gbnVsbCwgZXZlbnQsIGZuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZWxlbWVudEFyciA9PSAnc3RyaW5nJyl7XG4gICAgICAgICAgICBlbGVtZW50QXJyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtZW50QXJyKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBlbGVtZW50QXJyLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudEFycltpXS5hZGRFdmVudExpc3RlbmVyKGV2ZW50LnRvTG93ZXJDYXNlKCksIGZuKVxuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcihldmVudC50b0xvd2VyQ2FzZSgpLCBmbik7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG4gICAgc3RhdGljIG9mZihlbGVtZW50QXJyID0gbnVsbCwgZXZlbnQsIGZuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZWxlbWVudEFyciA9PSAnc3RyaW5nJyl7XG4gICAgICAgICAgICBlbGVtZW50QXJyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbGVtZW50QXJyKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBlbGVtZW50QXJyLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudEFycltpXS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LnRvTG93ZXJDYXNlKCksIGZuKVxuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQudG9Mb3dlckNhc2UoKSwgZm4pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3Vic2NyaWJlKHRvcGljLCBsaXN0ZW5lcikge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgaWYoIXRoaXMuaE9QLmNhbGwodGhpcy50b3BpY3MsIHRvcGljKSkgdGhpcy50b3BpY3NbdG9waWNdID0gW107XG4gICAgICB2YXIgaW5kZXggPSB0aGlzLnRvcGljc1t0b3BpY10ucHVzaChsaXN0ZW5lcikgLTE7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGRlbGV0ZSBzZWxmLnRvcGljc1t0b3BpY11baW5kZXhdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcHVibGlzaCh0b3BpYywgaW5mbykge1xuICAgICAgaWYoIXRoaXMuaE9QLmNhbGwodGhpcy50b3BpY3MsIHRvcGljKSkgcmV0dXJuO1xuICAgICAgdGhpcy50b3BpY3NbdG9waWNdLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgaXRlbShpbmZvICE9IHVuZGVmaW5lZCA/IGluZm8gOiB7fSk7XG4gICAgICB9KTtcbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=