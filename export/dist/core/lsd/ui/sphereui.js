"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var i=e[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,a,i){return a&&t(e.prototype,a),i&&t(e,i),e}}(),SphereUI=function(){function t(e,a,i){var n=arguments.length<=3||void 0===arguments[3]?50:arguments[3];_classCallCheck(this,t),this.scene=e,this.length=n,this.target=a.activeCamera.position,this.container=i,this.babylonMod=a,this.DataArr=this.babylonMod.Data.videoModel.results[0].sectionItems.itemList,this.init()}return _createClass(t,[{key:"init",value:function(){for(var t=new BABYLON.Vector3(this.target.x,this.target.y,this.target.z),e=0,a=this.DataArr.length;a>e;e++){var i=Math.acos(-1+2*e/a),n=Math.sqrt(a*Math.PI)*i,r=new BABYLON.Mesh.CreatePlane("vidPlane"+e,2,this.scene);try{void 0!=typeof this.DataArr[e].thumbnailSet[7]?(console.log(r.material),this.babylonMod.video.createVidTexture(r,this.DataArr[e].thumbnailSet[7].url,this.scene)):this.babylonMod.video.createVidTexture(r,this.DataArr[e].thumbnailSet[3].url,this.scene)}catch(s){console.log(s)}r.position.x=26*Math.cos(n)*Math.sin(i),r.position.y=26*Math.sin(n)*Math.sin(i),r.position.z=26*Math.cos(i),t.scaleToRef(r.position,2),r.lookAt(t),this.container.push(r)}}}]),t}();exports.SphereUI=SphereUI,module.exports=SphereUI;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL3VpL3NwaGVyZXVpLmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwia2V5IiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwiU3BoZXJlVUkiLCJfc2NlbmUiLCJfYmFieWxvbkFwcCIsIl9jb250YWluZXIiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJ0aGlzIiwic2NlbmUiLCJhY3RpdmVDYW1lcmEiLCJwb3NpdGlvbiIsImNvbnRhaW5lciIsImJhYnlsb25Nb2QiLCJEYXRhQXJyIiwiRGF0YSIsInZpZGVvTW9kZWwiLCJyZXN1bHRzIiwic2VjdGlvbkl0ZW1zIiwiaXRlbUxpc3QiLCJpbml0IiwidmVjdG9yIiwiQkFCWUxPTiIsIlZlY3RvcjMiLCJ4IiwieSIsInoiLCJsIiwicGhpIiwiTWF0aCIsImFjb3MiLCJ0aGV0YSIsInNxcnQiLCJQSSIsIm1lc2hPQkoiLCJNZXNoIiwiQ3JlYXRlUGxhbmUiLCJ0aHVtYm5haWxTZXQiLCJjb25zb2xlIiwibG9nIiwibWF0ZXJpYWwiLCJ2aWRlbyIsImNyZWF0ZVZpZFRleHR1cmUiLCJ1cmwiLCJlIiwiY29zIiwic2luIiwic2NhbGVUb1JlZiIsImxvb2tBdCIsInB1c2giLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQUFBLFlBUUEsU0FBU0EsaUJBQWdCQyxFQUFVQyxHQUFlLEtBQU1ELFlBQW9CQyxJQUFnQixLQUFNLElBQUlDLFdBQVUscUNBTmhIQyxPQUFPQyxlQUFlQyxRQUFTLGNBQzlCQyxPQUFPLEdBR1IsSUFBSUMsY0FBZSxXQUFlLFFBQVNDLEdBQWlCQyxFQUFRQyxHQUFTLElBQUssR0FBSUMsR0FBSSxFQUFHQSxFQUFJRCxFQUFNRSxPQUFRRCxJQUFLLENBQUUsR0FBSUUsR0FBYUgsRUFBTUMsRUFBSUUsR0FBV0MsV0FBYUQsRUFBV0MsYUFBYyxFQUFPRCxFQUFXRSxjQUFlLEVBQVUsU0FBV0YsS0FBWUEsRUFBV0csVUFBVyxHQUFNYixPQUFPQyxlQUFlSyxFQUFRSSxFQUFXSSxJQUFLSixJQUFpQixNQUFPLFVBQVVaLEVBQWFpQixFQUFZQyxHQUFpSixNQUE5SEQsSUFBWVYsRUFBaUJQLEVBQVltQixVQUFXRixHQUFpQkMsR0FBYVgsRUFBaUJQLEVBQWFrQixHQUFxQmxCLE1BTnBoQm9CLFNBQVEsV0FFTixRQUZGQSxHQUVHQyxFQUFRQyxFQUFhQyxHQVVuQyxHQVYrQ1osR0FBTWEsVUFBQWIsUUFBQSxHQUFBYyxTQUFBRCxVQUFBLEdBQUcsR0FBRUEsVUFBQSxFQVkxRDFCLGlCQUFnQjRCLEtBZExOLEdBR0xNLEtBQUtDLE1BQVFOLEVBQ2JLLEtBQUtmLE9BQVNBLEVBQ2RlLEtBQUtsQixPQUFTYyxFQUFZTSxhQUFhQyxTQUN2Q0gsS0FBS0ksVUFBWVAsRUFDakJHLEtBQUtLLFdBQWFULEVBQ2xCSSxLQUFLTSxRQUFVTixLQUFLSyxXQUFXRSxLQUFLQyxXQUFXQyxRQUFRLEdBQUdDLGFBQWFDLFNBQ3ZFWCxLQUFLWSxPQTRDWixNQTVCQWhDLGNBekJZYyxJQTBCWEosSUFBSyxPQUNMWCxNQWZNLFdBRU4sSUFBTSxHQURDa0MsR0FBUyxHQUFJQyxTQUFRQyxRQUFRZixLQUFLbEIsT0FBT2tDLEVBQUdoQixLQUFLbEIsT0FBT21DLEVBQUdqQixLQUFLbEIsT0FBT29DLEdBQ3BFbEMsRUFBSSxFQUFHbUMsRUFBSW5CLEtBQUtNLFFBQVFyQixPQUFZa0MsRUFBSm5DLEVBQU9BLElBQU8sQ0FDdkQsR0FBSW9DLEdBQU1DLEtBQUtDLEtBQU0sR0FBSyxFQUFNdEMsRUFBTW1DLEdBQ2xDSSxFQUFRRixLQUFLRyxLQUFNTCxFQUFJRSxLQUFLSSxJQUFPTCxFQUNuQ00sRUFBVSxHQUFJWixTQUFRYSxLQUFLQyxZQUFZLFdBQVc1QyxFQUFHLEVBQUtnQixLQUFLQyxNQUNuRSxLQUM4Q0YsY0FBbkNDLE1BQUtNLFFBQVF0QixHQUFHNkMsYUFBYSxJQUN0Q0MsUUFBUUMsSUFBSUwsRUFBUU0sVUFDcEJoQyxLQUFLSyxXQUFXNEIsTUFBTUMsaUJBQWlCUixFQUFTMUIsS0FBS00sUUFBUXRCLEdBQUc2QyxhQUFhLEdBQUdNLElBQUtuQyxLQUFLQyxRQUUxRkQsS0FBS0ssV0FBVzRCLE1BQU1DLGlCQUFpQlIsRUFBUzFCLEtBQUtNLFFBQVF0QixHQUFHNkMsYUFBYSxHQUFHTSxJQUFLbkMsS0FBS0MsT0FFM0YsTUFBTW1DLEdBQ05OLFFBQVFDLElBQUlLLEdBRWJWLEVBQVF2QixTQUFTYSxFQUFJLEdBQUtLLEtBQUtnQixJQUFLZCxHQUFVRixLQUFLaUIsSUFBS2xCLEdBQ3hETSxFQUFRdkIsU0FBU2MsRUFBSSxHQUFLSSxLQUFLaUIsSUFBS2YsR0FBVUYsS0FBS2lCLElBQUtsQixHQUN4RE0sRUFBUXZCLFNBQVNlLEVBQUksR0FBS0csS0FBS2dCLElBQUtqQixHQUNwQ1AsRUFBTzBCLFdBQVliLEVBQVF2QixTQUFVLEdBQ3JDdUIsRUFBUWMsT0FBUTNCLEdBQ2hCYixLQUFLSSxVQUFVcUMsS0FBTWYsUUFqQ1hoQyxJQXdEYmhCLFNBQVFnQixTQUFXQSxTQWhCbkJnRCxPQUFPaEUsUUFBVWdCIiwiZmlsZSI6ImNvcmUvbHNkL3VpL3NwaGVyZXVpLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFNwaGVyZVVJIHtcblxuICAgIGNvbnN0cnVjdG9yKF9zY2VuZSwgX2JhYnlsb25BcHAsIF9jb250YWluZXIsIGxlbmd0aCA9IDUwKSB7XG4gICAgICAgIHRoaXMuc2NlbmUgPSBfc2NlbmU7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xuICAgICAgICB0aGlzLnRhcmdldCA9IF9iYWJ5bG9uQXBwLmFjdGl2ZUNhbWVyYS5wb3NpdGlvbjtcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBfY29udGFpbmVyO1xuICAgICAgICB0aGlzLmJhYnlsb25Nb2QgPSBfYmFieWxvbkFwcDtcbiAgICAgICAgdGhpcy5EYXRhQXJyID0gdGhpcy5iYWJ5bG9uTW9kLkRhdGEudmlkZW9Nb2RlbC5yZXN1bHRzWzBdLnNlY3Rpb25JdGVtcy5pdGVtTGlzdDtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuXG4gICAgaW5pdCgpe1xuICAgIFx0dmFyIHZlY3RvciA9IG5ldyBCQUJZTE9OLlZlY3RvcjModGhpcy50YXJnZXQueCwgdGhpcy50YXJnZXQueSwgdGhpcy50YXJnZXQueik7XG5cdFx0Zm9yICggdmFyIGkgPSAwLCBsID0gdGhpcy5EYXRhQXJyLmxlbmd0aDsgaSA8IGw7IGkgKysgKSB7XG5cdFx0XHR2YXIgcGhpID0gTWF0aC5hY29zKCAtMSArICggMiAqIGkgKSAvIGwgKTtcblx0XHRcdHZhciB0aGV0YSA9IE1hdGguc3FydCggbCAqIE1hdGguUEkgKSAqIHBoaTtcblx0XHRcdHZhciBtZXNoT0JKID0gbmV3IEJBQllMT04uTWVzaC5DcmVhdGVQbGFuZShcInZpZFBsYW5lXCIraSwgMi4wLCB0aGlzLnNjZW5lKTtcblx0XHRcdHRyeXtcblx0XHRcdFx0aWYodHlwZW9mIHRoaXMuRGF0YUFycltpXS50aHVtYm5haWxTZXRbN10gIT0gdW5kZWZpbmVkKXtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhtZXNoT0JKLm1hdGVyaWFsKTtcblx0XHRcdFx0XHR0aGlzLmJhYnlsb25Nb2QudmlkZW8uY3JlYXRlVmlkVGV4dHVyZShtZXNoT0JKLCB0aGlzLkRhdGFBcnJbaV0udGh1bWJuYWlsU2V0WzddLnVybCwgdGhpcy5zY2VuZSk7XG5cdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdHRoaXMuYmFieWxvbk1vZC52aWRlby5jcmVhdGVWaWRUZXh0dXJlKG1lc2hPQkosIHRoaXMuRGF0YUFycltpXS50aHVtYm5haWxTZXRbM10udXJsLCB0aGlzLnNjZW5lKTtcblx0XHRcdFx0fVxuXHRcdFx0fWNhdGNoKGUpe1xuXHRcdFx0XHRjb25zb2xlLmxvZyhlKTtcblx0XHRcdH1cblx0XHRcdG1lc2hPQkoucG9zaXRpb24ueCA9IDI2ICogTWF0aC5jb3MoIHRoZXRhICkgKiBNYXRoLnNpbiggcGhpICk7XG5cdFx0XHRtZXNoT0JKLnBvc2l0aW9uLnkgPSAyNiAqIE1hdGguc2luKCB0aGV0YSApICogTWF0aC5zaW4oIHBoaSApO1xuXHRcdFx0bWVzaE9CSi5wb3NpdGlvbi56ID0gMjYgKiBNYXRoLmNvcyggcGhpICk7XG5cdFx0XHR2ZWN0b3Iuc2NhbGVUb1JlZiggbWVzaE9CSi5wb3NpdGlvbiwgMiApO1xuXHRcdFx0bWVzaE9CSi5sb29rQXQoIHZlY3RvciApO1xuXHRcdFx0dGhpcy5jb250YWluZXIucHVzaCggbWVzaE9CSiApO1xuXHRcdH1cblxuXHQgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gU3BoZXJlVUk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9