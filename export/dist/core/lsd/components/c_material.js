"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t["default"]=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),_ces=require("ces"),CES=_interopRequireWildcard(_ces),_libBabylon=require("../lib/babylon"),BABYLON=_interopRequireWildcard(_libBabylon),_utilsUtils=require("../utils/utils"),defaults=_utilsUtils.utils.defaultArgs();defaults._name="material";var c_material=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];switch(_classCallCheck(this,e),this.name=t._name+_utilsUtils.utils.guid(),this.obj=null,this._opts=t,t._type){case"Standard":this.StandardMaterial();break;case"Shader":break;case"Dynamic":break;case"Fresenel":break;case"PBR":break;default:this.StandardMaterial()}this.options={name:this.name,init:this.constructor,obj:this.obj},CES.Component.extend(this.options)}return _createClass(e,[{key:"StandardMaterial",value:function(){this.obj=new BABYLON.StandardMaterial("texturePlane",this._opts._scene),this.obj.alpha=parseFloat(this._opts._material._alpha),null!=this._opts._material._texture&&(this.obj.diffuseTexture=this._opts._material._texture,this.obj.diffuseTexture.uScale=this._opts._material._uScale,this.obj.diffuseTexture.vScale=this._opts._material._vScale,this.obj.backFaceCulling=this._opts._material._backFaceCulling,this.obj.diffuseTexture.vOffset=this._opts._material._vOffset,this.obj.diffuseTexture.uOffset=this._opts._material._uOffset,this.obj.diffuseTexture.hasAlpha=this._opts._material._hasAlpha),null!=this._opts._material._diffuseColor&&(this.obj.diffuseColor=this._opts._material._diffuseColor)}}]),e}();exports.c_material=c_material;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2NvbXBvbmVudHMvY19tYXRlcmlhbC5qcyJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJuZXdPYmoiLCJrZXkiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9jZXMiLCJyZXF1aXJlIiwiQ0VTIiwiX2xpYkJhYnlsb24iLCJCQUJZTE9OIiwiX3V0aWxzVXRpbHMiLCJkZWZhdWx0cyIsInV0aWxzIiwiZGVmYXVsdEFyZ3MiLCJfbmFtZSIsImNfbWF0ZXJpYWwiLCJfb3B0cyIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsInRoaXMiLCJuYW1lIiwiZ3VpZCIsIl90eXBlIiwiU3RhbmRhcmRNYXRlcmlhbCIsIm9wdGlvbnMiLCJpbml0IiwiY29uc3RydWN0b3IiLCJDb21wb25lbnQiLCJleHRlbmQiLCJfc2NlbmUiLCJhbHBoYSIsInBhcnNlRmxvYXQiLCJfbWF0ZXJpYWwiLCJfYWxwaGEiLCJfdGV4dHVyZSIsImRpZmZ1c2VUZXh0dXJlIiwidVNjYWxlIiwiX3VTY2FsZSIsInZTY2FsZSIsIl92U2NhbGUiLCJiYWNrRmFjZUN1bGxpbmciLCJfYmFja0ZhY2VDdWxsaW5nIiwidk9mZnNldCIsIl92T2Zmc2V0IiwidU9mZnNldCIsIl91T2Zmc2V0IiwiaGFzQWxwaGEiLCJfaGFzQWxwaGEiLCJfZGlmZnVzZUNvbG9yIiwiZGlmZnVzZUNv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LFVBQVVnQixnQkFDdkI3QixLQUFLekMsSUFBSXVFLGFBQWM5QixLQUFLSCxNQUFNZ0IsVUFBVWdCLG1CQS9DckNqQyxJQStFYnhCLFNBQVF3QixXQUFhQSIsImZpbGUiOiJjb3JlL2xzZC9jb21wb25lbnRzL2NfbWF0ZXJpYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBDRVMgZnJvbSAnY2VzJztcbmltcG9ydCAqIGFzIEJBQllMT04gZnJvbSAnLi4vbGliL2JhYnlsb24nO1xuaW1wb3J0IHsgdXRpbHMgfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbnZhciBkZWZhdWx0cyA9IHV0aWxzLmRlZmF1bHRBcmdzKCk7XG5kZWZhdWx0cy5fbmFtZSA9ICdtYXRlcmlhbCc7XG4vKipcbiAqIC4uLlxuICogQGF1dGhvciBCcmVuZG9uIFNtaXRoXG4gKiBodHRwOi8vc2VhY2xvdWQ5Lm9yZ1xuICogTGlnaHRXZWlnaHQgM0QgU3lzdGVtIERlc2lnbiBlbmdpbmVcbiAqL1xuZXhwb3J0IGNsYXNzIGNfbWF0ZXJpYWwge1xuXHRjb25zdHJ1Y3Rvcihfb3B0cyA9IGRlZmF1bHRzKXtcblx0XHR0aGlzLm5hbWUgPSBfb3B0cy5fbmFtZSArIHV0aWxzLmd1aWQoKTtcblx0XHR0aGlzLm9iaiA9IG51bGw7XG5cdFx0dGhpcy5fb3B0cyA9IF9vcHRzO1xuXHRcdHN3aXRjaChfb3B0cy5fdHlwZSkge1xuXHRcdCAgICBjYXNlICdTdGFuZGFyZCc6XG5cdFx0ICAgIFx0dGhpcy5TdGFuZGFyZE1hdGVyaWFsKCk7XG5cdFx0ICAgICAgICBicmVhaztcblx0XHQgICAgY2FzZSAnU2hhZGVyJzpcblx0XHQgICAgICAgIC8vdG9kb1xuXHRcdCAgICAgICAgYnJlYWs7XG5cdFx0ICAgIGNhc2UgJ0R5bmFtaWMnOlxuXHRcdCAgICAgICAgLy90b2RvXG5cdFx0ICAgICAgICBicmVhaztcdFxuXHRcdCAgICBjYXNlICdGcmVzZW5lbCc6XG5cdFx0ICAgICAgICAvL3RvZG9cblx0XHQgICAgICAgIGJyZWFrO1xuXHRcdCAgICBjYXNlICdQQlInOlxuXHRcdCAgICAgICAgLy90b2RvXG5cdFx0ICAgICAgICBicmVhazsgICAgXHQgICAgXHQgICAgICAgICAgICAgICAgXG5cdFx0ICAgIGRlZmF1bHQ6XG5cdFx0ICAgICAgICB0aGlzLlN0YW5kYXJkTWF0ZXJpYWwoKTtcblx0XHQgfVxuXHRcdHRoaXMub3B0aW9ucyA9IHtcblx0XHRcdG5hbWU6dGhpcy5uYW1lICxcblx0XHRcdGluaXQ6IHRoaXMuY29uc3RydWN0b3IsXG5cdFx0XHRvYmo6dGhpcy5vYmpcblx0XHR9XG5cdFx0Q0VTLkNvbXBvbmVudC5leHRlbmQodGhpcy5vcHRpb25zKTtcblx0fVxuXG5cdFN0YW5kYXJkTWF0ZXJpYWwoKXtcblx0XHR0aGlzLm9iaiA9IG5ldyBCQUJZTE9OLlN0YW5kYXJkTWF0ZXJpYWwoXCJ0ZXh0dXJlUGxhbmVcIiwgdGhpcy5fb3B0cy5fc2NlbmUpO1xuXHRcdHRoaXMub2JqLmFscGhhID0gcGFyc2VGbG9hdCh0aGlzLl9vcHRzLl9tYXRlcmlhbC5fYWxwaGEpO1xuXHRcdGlmKHRoaXMuX29wdHMuX21hdGVyaWFsLl90ZXh0dXJlICE9IG51bGwpe1xuXHRcdFx0dGhpcy5vYmouZGlmZnVzZVRleHR1cmUgPSB0aGlzLl9vcHRzLl9tYXRlcmlhbC5fdGV4dHVyZTtcblx0XHRcdHRoaXMub2JqLmRpZmZ1c2VUZXh0dXJlLnVTY2FsZSA9IHRoaXMuX29wdHMuX21hdGVyaWFsLl91U2NhbGU7Ly9SZXBlYXQgNSB0aW1lcyBvbiB0aGUgVmVydGljYWwgQXhlc1xuXHRcdFx0dGhpcy5vYmouZGlmZnVzZVRleHR1cmUudlNjYWxlID0gdGhpcy5fb3B0cy5fbWF0ZXJpYWwuX3ZTY2FsZTsvL1JlcGVhdCA1IHRpbWVzIG9uIHRoZSBIb3Jpem9udGFsIEF4ZXNcblx0XHRcdHRoaXMub2JqLmJhY2tGYWNlQ3VsbGluZyA9IHRoaXMuX29wdHMuX21hdGVyaWFsLl9iYWNrRmFjZUN1bGxpbmc7Ly9BbHdheXMgc2hvdyB0aGUgZnJvbnQgYW5kIHRoZSBiYWNrIG9mIGFuIGVsZW1lbnRcblx0XHRcdHRoaXMub2JqLmRpZmZ1c2VUZXh0dXJlLnZPZmZzZXQgPSB0aGlzLl9vcHRzLl9tYXRlcmlhbC5fdk9mZnNldDsvL1ZlcnRpY2FsIG9mZnNldCBvZiAxMCVcbiAgICBcdFx0dGhpcy5vYmouZGlmZnVzZVRleHR1cmUudU9mZnNldCA9IHRoaXMuX29wdHMuX21hdGVyaWFsLl91T2Zmc2V0Oy8vSG9yaXpvbnRhbCBvZmZzZXQgb2YgNDAlXG4gICAgXHRcdHRoaXMub2JqLmRpZmZ1c2VUZXh0dXJlLmhhc0FscGhhID0gdGhpcy5fb3B0cy5fbWF0ZXJpYWwuX2hhc0FscGhhO1xuXHRcdH1cblx0XHRcblx0XHRcbiAgICBcdGlmKHRoaXMuX29wdHMuX21hdGVyaWFsLl9kaWZmdXNlQ29sb3IgIT0gbnVsbCl7XG4gICAgXHRcdHRoaXMub2JqLmRpZmZ1c2VDb2xvciA9dGhpcy5fb3B0cy5fbWF0ZXJpYWwuX2RpZmZ1c2VDb2xvcjtcbiAgICBcdH1cblx0fVxuXG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=