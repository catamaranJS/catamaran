"use strict";function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var CES=require("ces"),BABYLON=require("../lib/babylon"),utils=require("../utils/utils"),defaults=utils.defaultArgs();defaults._name="portal";var c_portal=function t(){var i=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];_classCallCheck(this,t),this.name=i._name+utils.guid(),this.scene=i._scene,this.obj=null,this.plane=null,this.hadFired=!1,this.portalImg=i._portalImg,this._href=i._href,this._portalPosition=i._portalPosition,BABYLON.SceneLoader.ImportMesh("","/assets/scene/","portal.babylon",this.scene,function(t){this.obj=t[0],this.obj.scaling.x=this.obj.scaling.y=this.obj.scaling.z=3,this.plane=BABYLON.Mesh.CreatePlane("plane",.5,scene),this.plane.position.y=1,this.plane.parent=t[0],t[1].parent=t[0],t[2].parent=t[0],t[3].parent=t[0];for(var e=0;e<t.length;e++)t[e].checkCollisions=!0;var s=new BABYLON.StandardMaterial("portalImg",this.scene);s.diffuseTexture=new BABYLON.Texture(this.portalImg,this.scene),s.backFaceCulling=!1,this.plane.material=s,this.obj.layerMask=parseInt(i._layerMask),this.obj.isPickable=i._isPickable,this.obj.position=i._position,this.obj.rotation=i._rotation,this.options={name:this.name,init:this.constructor,plane:this.plane,obj:this.obj};for(var e=0;e<this.scene.cameras.length;e++)this.scene.cameras[e].onCollide=function(e){e.uniqueId!=t[2].uniqueId||this.hadFired||null!=this._portalPosition?null!=this._portalPosition&&(this.scene.activeCamera.position=utils.getVector(this._portalPosition)):(this.hadFired=!0,window.location=i._href)};CES.Component.extend(this.options)}.bind(this))};module.exports=c_portal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2NvbXBvbmVudHMvY19wb3J0YWwuanMiXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIkNFUyIsInJlcXVpcmUiLCJCQUJZTE9OIiwidXRpbHMiLCJkZWZhdWx0cyIsImRlZmF1bHRBcmdzIiwiX25hbWUiLCJjX3BvcnRhbCIsIl9vcHRzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwidGhpcyIsIm5hbWUiLCJndWlkIiwic2NlbmUiLCJfc2NlbmUiLCJvYmoiLCJwbGFuZSIsImhhZEZpcmVkIiwicG9ydGFsSW1nIiwiX3BvcnRhbEltZyIsIl9ocmVmIiwiX3BvcnRhbFBvc2l0aW9uIiwiU2NlbmVMb2FkZXIiLCJJbXBvcnRNZXNoIiwibmV3TWVzaGVzIiwic2NhbGluZyIsIngiLCJ5IiwieiIsIk1lc2giLCJDcmVhdGVQbGFuZSIsInBvc2l0aW9uIiwicGFyZW50IiwiaSIsImNoZWNrQ29sbGlzaW9ucyIsIm1hdGVyaWFsUGxhbmUiLCJTdGFuZGFyZE1hdGVyaWFsIiwiZGlmZnVzZVRleHR1cmUiLCJUZXh0dXJlIiwiYmFja0ZhY2VDdWxsaW5nIiwibWF0ZXJpYWwiLCJsYXllck1hc2siLCJwYXJzZUludCIsIl9sYXllck1hc2siLCJpc1BpY2thYmxlIiwiX2lzUGlja2FibGUiLCJfcG9zaXRpb24iLCJyb3RhdGlvbiIsIl9yb3RhdGlvbiIsIm9wdGlvbnMiLCJpbml0IiwiY29uc3RydWN0b3IiLCJjYW1lcmFzIiwib25Db2xsaWRlIiwiY29sTWVzaCIsInVuaXF1ZUlkIiwiYWN0aXZlQ2FtZXJhIiwiZ2V0VmVjdG9yIiwid2luZG93IiwibG9jYXRpb24iLCJDb21wb25lbnQiLCJleHRlbmQiLCJiaW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFFQSxTQUFTQSxpQkFBZ0JDLEVBQVVDLEdBQWUsS0FBTUQsWUFBb0JDLElBQWdCLEtBQU0sSUFBSUMsV0FBVSxxQ0FGaEgsR0FBSUMsS0FBTUMsUUFBUSxPQUNkQyxRQUFVRCxRQUFRLGtCQUNsQkUsTUFBUUYsUUFBUSxrQkFDaEJHLFNBQVdELE1BQU1FLGFBQ3JCRCxVQUFTRSxNQUFRLFFBWWpCLElBTE1DLFVBQ00sUUFETkEsS0FNTCxHQUxZQyxHQUFLQyxVQUFBQyxRQUFBLEdBQUFDLFNBQUFGLFVBQUEsR0FBR0wsU0FBUUssVUFBQSxFQU81QmIsaUJBQWdCZ0IsS0FSWEwsR0FFSkssS0FBS0MsS0FBT0wsRUFBTUYsTUFBUUgsTUFBTVcsT0FDaENGLEtBQUtHLE1BQVNQLEVBQU1RLE9BQ3BCSixLQUFLSyxJQUFNLEtBQ1hMLEtBQUtNLE1BQVEsS0FDYk4sS0FBS08sVUFBVyxFQUNoQlAsS0FBS1EsVUFBWVosRUFBTWEsV0FDdkJULEtBQUtVLE1BQVFkLEVBQU1jLE1BQ25CVixLQUFLVyxnQkFBa0JmLEVBQU1lLGdCQUU3QnJCLFFBQVFzQixZQUFZQyxXQUFXLEdBQUksaUJBQWtCLGlCQUFrQmIsS0FBS0csTUFBUSxTQUFVVyxHQUNoRmQsS0FBS0ssSUFBT1MsRUFBVSxHQUN0QmQsS0FBS0ssSUFBSVUsUUFBUUMsRUFBSWhCLEtBQUtLLElBQUlVLFFBQVFFLEVBQUlqQixLQUFLSyxJQUFJVSxRQUFRRyxFQUFJLEVBQy9EbEIsS0FBS00sTUFBUWhCLFFBQVE2QixLQUFLQyxZQUFZLFFBQVMsR0FBS2pCLE9BQ3ZESCxLQUFLTSxNQUFNZSxTQUFTSixFQUFLLEVBQ3pCakIsS0FBS00sTUFBTWdCLE9BQVNSLEVBQVUsR0FDOUJBLEVBQVUsR0FBR1EsT0FBU1IsRUFBVSxHQUNoQ0EsRUFBVSxHQUFHUSxPQUFTUixFQUFVLEdBQ2hDQSxFQUFVLEdBQUdRLE9BQVNSLEVBQVUsRUFDaEMsS0FBSSxHQUFJUyxHQUFJLEVBQUdBLEVBQUlULEVBQVVoQixPQUFReUIsSUFDcENULEVBQVVTLEdBQUdDLGlCQUFrQixDQUVoQyxJQUFJQyxHQUFnQixHQUFJbkMsU0FBUW9DLGlCQUFpQixZQUFhMUIsS0FBS0csTUFDbkVzQixHQUFjRSxlQUFpQixHQUFJckMsU0FBUXNDLFFBQVE1QixLQUFLUSxVQUFXUixLQUFLRyxPQUN4RXNCLEVBQWNJLGlCQUFrQixFQUNoQzdCLEtBQUtNLE1BQU13QixTQUFXTCxFQUN0QnpCLEtBQUtLLElBQUkwQixVQUFZQyxTQUFTcEMsRUFBTXFDLFlBQzdDakMsS0FBS0ssSUFBSTZCLFdBQWF0QyxFQUFNdUMsWUFDNUJuQyxLQUFLSyxJQUFJZ0IsU0FBV3pCLEVBQU13QyxVQUMxQnBDLEtBQUtLLElBQUlnQyxTQUFXekMsRUFBTTBDLFVBQzFCdEMsS0FBS3VDLFNBQ0p0QyxLQUFLRCxLQUFLQyxLQUNWdUMsS0FBTXhDLEtBQUt5QyxZQUNYbkMsTUFBT04sS0FBS00sTUFDWkQsSUFBSUwsS0FBS0ssSUFFVixLQUFJLEdBQUlrQixHQUFJLEVBQUdBLEVBQUl2QixLQUFLRyxNQUFNdUMsUUFBUTVDLE9BQVF5QixJQUM3Q3ZCLEtBQUtHLE1BQU11QyxRQUFRbkIsR0FBR29CLFVBQVksU0FBVUMsR0FDdkNBLEVBQVFDLFVBQVkvQixFQUFVLEdBQUcrQixVQUFhN0MsS0FBS08sVUFBb0MsTUFBeEJQLEtBQUtXLGdCQUk1QyxNQUF4QlgsS0FBS1csa0JBQ1BYLEtBQUtHLE1BQU0yQyxhQUFhekIsU0FBVzlCLE1BQU13RCxVQUFVL0MsS0FBS1csbUJBSnpEWCxLQUFLTyxVQUFXLEVBQ2hCeUMsT0FBT0MsU0FBV3JELEVBQU1jLE9BUTNCdEIsS0FBSThELFVBQVVDLE9BQU9uRCxLQUFLdUMsVUFDbkJhLEtBQUtwRCxPQUloQnFELFFBQU9DLFFBQVUzRCIsImZpbGUiOiJjb3JlL2xzZC9jb21wb25lbnRzL2NfcG9ydGFsLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENFUyA9IHJlcXVpcmUoJ2NlcycpO1xudmFyIEJBQllMT04gPSByZXF1aXJlKCcuLi9saWIvYmFieWxvbicpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMvdXRpbHMnKTtcbnZhciBkZWZhdWx0cyA9IHV0aWxzLmRlZmF1bHRBcmdzKCk7XG5kZWZhdWx0cy5fbmFtZSA9ICdwb3J0YWwnO1xuLyoqXG4gKiAuLi5cbiAqIEBhdXRob3IgQnJlbmRvbiBTbWl0aFxuICogaHR0cDovL3NlYWNsb3VkOS5vcmdcbiAqIExpZ2h0V2VpZ2h0IDNEIFN5c3RlbSBEZXNpZ24gZW5naW5lXG4gKi9cbmNsYXNzIGNfcG9ydGFsIHtcblx0Y29uc3RydWN0b3IoX29wdHMgPSBkZWZhdWx0cyl7XG5cdFx0dGhpcy5uYW1lID0gX29wdHMuX25hbWUgKyB1dGlscy5ndWlkKCk7XG5cdFx0dGhpcy5zY2VuZSA9ICBfb3B0cy5fc2NlbmU7XG5cdFx0dGhpcy5vYmogPSBudWxsO1xuXHRcdHRoaXMucGxhbmUgPSBudWxsO1xuXHRcdHRoaXMuaGFkRmlyZWQgPSBmYWxzZTtcblx0XHR0aGlzLnBvcnRhbEltZyA9IF9vcHRzLl9wb3J0YWxJbWc7XG5cdFx0dGhpcy5faHJlZiA9IF9vcHRzLl9ocmVmO1xuXHRcdHRoaXMuX3BvcnRhbFBvc2l0aW9uID0gX29wdHMuX3BvcnRhbFBvc2l0aW9uO1xuXG5cdFx0QkFCWUxPTi5TY2VuZUxvYWRlci5JbXBvcnRNZXNoKFwiXCIsIFwiL2Fzc2V0cy9zY2VuZS9cIiwgXCJwb3J0YWwuYmFieWxvblwiLCB0aGlzLnNjZW5lICwgZnVuY3Rpb24gKG5ld01lc2hlcykge1xuICAgICAgICAgICAgICAgIHRoaXMub2JqICA9IG5ld01lc2hlc1swXTtcbiAgICAgICAgICAgICAgICB0aGlzLm9iai5zY2FsaW5nLnggPSB0aGlzLm9iai5zY2FsaW5nLnkgPSB0aGlzLm9iai5zY2FsaW5nLnogPSAzO1xuICAgICAgICAgICAgICAgIHRoaXMucGxhbmUgPSBCQUJZTE9OLk1lc2guQ3JlYXRlUGxhbmUoXCJwbGFuZVwiLCAwLjUsIHNjZW5lKTtcbiAgICAgICAgICAgIFx0dGhpcy5wbGFuZS5wb3NpdGlvbi55ID0gIDE7XG4gICAgICAgICAgICBcdHRoaXMucGxhbmUucGFyZW50ID0gbmV3TWVzaGVzWzBdO1xuICAgICAgICAgICAgXHRuZXdNZXNoZXNbMV0ucGFyZW50ID0gbmV3TWVzaGVzWzBdO1xuICAgICAgICAgICAgXHRuZXdNZXNoZXNbMl0ucGFyZW50ID0gbmV3TWVzaGVzWzBdO1xuICAgICAgICAgICAgXHRuZXdNZXNoZXNbM10ucGFyZW50ID0gbmV3TWVzaGVzWzBdO1xuICAgICAgICAgICAgXHRmb3IobGV0IGkgPSAwOyBpIDwgbmV3TWVzaGVzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIFx0XHRuZXdNZXNoZXNbaV0uY2hlY2tDb2xsaXNpb25zID0gdHJ1ZTtcbiAgICAgICAgICAgIFx0fVxuXHQgICAgICAgICAgICB2YXIgbWF0ZXJpYWxQbGFuZSA9IG5ldyBCQUJZTE9OLlN0YW5kYXJkTWF0ZXJpYWwoXCJwb3J0YWxJbWdcIiwgdGhpcy5zY2VuZSk7XG5cdCAgICAgICAgICAgIG1hdGVyaWFsUGxhbmUuZGlmZnVzZVRleHR1cmUgPSBuZXcgQkFCWUxPTi5UZXh0dXJlKHRoaXMucG9ydGFsSW1nLCB0aGlzLnNjZW5lKTtcblx0ICAgICAgICAgICAgbWF0ZXJpYWxQbGFuZS5iYWNrRmFjZUN1bGxpbmcgPSBmYWxzZTtcblx0ICAgICAgICAgICAgdGhpcy5wbGFuZS5tYXRlcmlhbCA9IG1hdGVyaWFsUGxhbmU7XG5cdCAgICAgICAgICAgIHRoaXMub2JqLmxheWVyTWFzayA9IHBhcnNlSW50KF9vcHRzLl9sYXllck1hc2spO1xuXHRcdFx0XHR0aGlzLm9iai5pc1BpY2thYmxlID0gX29wdHMuX2lzUGlja2FibGU7XG5cdFx0XHRcdHRoaXMub2JqLnBvc2l0aW9uID0gX29wdHMuX3Bvc2l0aW9uO1xuXHRcdFx0XHR0aGlzLm9iai5yb3RhdGlvbiA9IF9vcHRzLl9yb3RhdGlvbjtcblx0XHRcdFx0dGhpcy5vcHRpb25zID0ge1xuXHRcdFx0XHRcdG5hbWU6dGhpcy5uYW1lICxcblx0XHRcdFx0XHRpbml0OiB0aGlzLmNvbnN0cnVjdG9yLFxuXHRcdFx0XHRcdHBsYW5lOiB0aGlzLnBsYW5lLFxuXHRcdFx0XHRcdG9iajp0aGlzLm9ialxuXHRcdFx0XHR9XG5cdFx0XHRcdGZvcihsZXQgaSA9IDA7IGkgPCB0aGlzLnNjZW5lLmNhbWVyYXMubGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdHRoaXMuc2NlbmUuY2FtZXJhc1tpXS5vbkNvbGxpZGUgPSBmdW5jdGlvbiAoY29sTWVzaCkge1xuXHRcdFx0XHRcdFx0aWYgKGNvbE1lc2gudW5pcXVlSWQgPT0gbmV3TWVzaGVzWzJdLnVuaXF1ZUlkICYmICF0aGlzLmhhZEZpcmVkICYmIHRoaXMuX3BvcnRhbFBvc2l0aW9uID09IG51bGwpIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5oYWRGaXJlZCA9IHRydWU7XG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5sb2NhdGlvbiA9IF9vcHRzLl9ocmVmO1xuXHRcdFx0XHRcdFx0fWVsc2V7XG5cdFx0XHRcdFx0XHRcdGlmKHRoaXMuX3BvcnRhbFBvc2l0aW9uICE9IG51bGwpe1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuc2NlbmUuYWN0aXZlQ2FtZXJhLnBvc2l0aW9uID0gdXRpbHMuZ2V0VmVjdG9yKHRoaXMuX3BvcnRhbFBvc2l0aW9uKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cdFxuXHRcdFx0XHR9XG5cdFx0XHRcdENFUy5Db21wb25lbnQuZXh0ZW5kKHRoaXMub3B0aW9ucyk7XG4gICAgICAgICB9LmJpbmQodGhpcykpO1xuXHR9XG5cbn1cbm1vZHVsZS5leHBvcnRzID0gY19wb3J0YWw7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9