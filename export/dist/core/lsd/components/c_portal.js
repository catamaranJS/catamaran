"use strict";function _interopRequireWildcard(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e["default"]=t,e}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _ces=require("ces"),CES=_interopRequireWildcard(_ces),_utilsUtils=require("../utils/utils"),_libBabylon=require("../lib/babylon");Object.defineProperty(exports,"BABYLON",{enumerable:!0,get:function(){return _libBabylon.BABYLON}});var defaults=_utilsUtils.utils.defaultArgs();defaults._name="portal";var c_portal=function t(){var e=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];_classCallCheck(this,t),this.name=e._name+_utilsUtils.utils.guid(),this.scene=e._scene,this.obj=null,this.plane=null,this.hadFired=!1,this.portalImg=e._portalImg,this._href=e._href,this._portalPosition=e._portalPosition,BABYLON.SceneLoader.ImportMesh("","/assets/scene/","portal.babylon",this.scene,function(t){this.obj=t[0],this.obj.scaling.x=this.obj.scaling.y=this.obj.scaling.z=3,this.plane=BABYLON.Mesh.CreatePlane("plane",.5,scene),this.plane.position.y=1,this.plane.parent=t[0],t[1].parent=t[0],t[2].parent=t[0],t[3].parent=t[0];for(var i=0;i<t.length;i++)t[i].checkCollisions=!0;var s=new BABYLON.StandardMaterial("portalImg",this.scene);s.diffuseTexture=new BABYLON.Texture(this.portalImg,this.scene),s.backFaceCulling=!1,this.plane.material=s,this.obj.layerMask=parseInt(e._layerMask),this.obj.isPickable=e._isPickable,this.obj.position=e._position,this.obj.rotation=e._rotation,this.options={name:this.name,init:this.constructor,plane:this.plane,obj:this.obj};for(var i=0;i<this.scene.cameras.length;i++)this.scene.cameras[i].onCollide=function(i){i.uniqueId!=t[2].uniqueId||this.hadFired||null!=this._portalPosition?null!=this._portalPosition&&(this.scene.activeCamera.position=_utilsUtils.utils.getVector(this._portalPosition)):(this.hadFired=!0,window.location=e._href)};CES.Component.extend(this.options)}.bind(this))};exports.c_portal=c_portal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2NvbXBvbmVudHMvY19wb3J0YWwuanMiXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJvYmoiLCJfX2VzTW9kdWxlIiwibmV3T2JqIiwia2V5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2NlcyIsInJlcXVpcmUiLCJDRVMiLCJfdXRpbHNVdGlscyIsIl9saWJCYWJ5bG9uIiwiZW51bWVyYWJsZSIsImdldCIsIkJBQllMT04iLCJkZWZhdWx0cyIsInV0aWxzIiwiZGVmYXVsdEFyZ3MiLCJfbmFtZSIsImNfcG9ydGFsIiwiX29wdHMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJ0aGlzIiwibmFtZSIsImd1aWQiLCJzY2VuZSIsIl9zY2VuZSIsInBsYW5lIiwiaGFkRmlyZWQiLCJwb3J0YWxJbWciLCJfcG9ydGFsSW1nIiwiX2hyZWYiLCJfcG9ydGFsUG9zaXRpb24iLCJTY2VuZUxvYWRlciIsIkltcG9ydE1lc2giLCJuZXdNZXNoZXMiLCJzY2FsaW5nIiwieCIsInkiLCJ6IiwiTWVzaCIsIkNyZWF0ZVBsYW5lIiwicG9zaXRpb24iLCJwYXJlbnQiLCJpIiwiY2hlY2tDb2xsaXNpb25zIiwibWF0ZXJpYWxQbGFuZSIsIlN0YW5kYXJkTWF0ZXJpYWwiLCJkaWZmdXNlVGV4dHVyZSIsIlRleHR1cmUiLCJiYWNrRmFjZUN1bGxpbmciLCJtYXRlcmlhbCIsImxheWVyTWFzayIsInBhcnNlSW50IiwiX2xheWVyTWFzayIsImlzUGlja2FibGUiLCJfaXNQaWNrYWJsZSIsIl9wb3NpdGlvbiIsInJvdGF0aW9uIiwiX3JvdGF0aW9uIiwib3B0aW9ucyIsImluaXQiLCJjb25zdHJ1Y3RvciIsImNhbWVyYXMiLCJvbkNvbGxpZGUiLCJjb2xNZXNoIiwidW5pcXVlSWQiLCJhY3RpdmVDYW1lcmEiLCJnZXRWZWN0b3IiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIkNvbXBvbmVudCIsImV4dGVuZCIsImJpbmQiXSwibWFwcGluZ3MiOiJBQUFBLFlBTUEsU0FBU0EseUJBQXdCQyxHQUFPLEdBQUlBLEdBQU9BLEVBQUlDLFdBQWMsTUFBT0QsRUFBYyxJQUFJRSxLQUFhLElBQVcsTUFBUEYsRUFBZSxJQUFLLEdBQUlHLEtBQU9ILEdBQVdJLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtQLEVBQUtHLEtBQU1ELEVBQU9DLEdBQU9ILEVBQUlHLEdBQW1DLE9BQXpCRCxHQUFPLFdBQWFGLEVBQVlFLEVBRXJRLFFBQVNNLGlCQUFnQkMsRUFBVUMsR0FBZSxLQUFNRCxZQUFvQkMsSUFBZ0IsS0FBTSxJQUFJQyxXQUFVLHFDQU5oSFAsT0FBT1EsZUFBZUMsUUFBUyxjQUM5QkMsT0FBTyxHQU9SLElBQUlDLE1BQU9DLFFBVlUsT0FBVEMsSUFBR2xCLHdCQUFBZ0IsTUFjWEcsWUFBY0YsUUFaSSxrQkFjbEJHLFlBQWNILFFBZk0saUJBaUJ4QlosUUFBT1EsZUFBZUMsUUFBUyxXQUM5Qk8sWUFBWSxFQUNaQyxJQUFLLFdBQ0osTUFBT0YsYUFwQkFHLFVBRVQsSUFBSUMsVUFBV0wsWUFBQU0sTUFBTUMsYUFDckJGLFVBQVNHLE1BQVEsUUE4QmpCLElBdkJhQyxVQUNELFFBRENBLEtBd0JaLEdBdkJZQyxHQUFLQyxVQUFBQyxRQUFBLEdBQUFDLFNBQUFGLFVBQUEsR0FBR04sU0FBUU0sVUFBQSxFQXlCNUJyQixpQkFBZ0J3QixLQTFCSkwsR0FFWEssS0FBS0MsS0FBT0wsRUFBTUYsTUFBUVIsWUFBQU0sTUFBTVUsT0FDaENGLEtBQUtHLE1BQVNQLEVBQU1RLE9BQ3BCSixLQUFLaEMsSUFBTSxLQUNYZ0MsS0FBS0ssTUFBUSxLQUNiTCxLQUFLTSxVQUFXLEVBQ2hCTixLQUFLTyxVQUFZWCxFQUFNWSxXQUN2QlIsS0FBS1MsTUFBUWIsRUFBTWEsTUFDbkJULEtBQUtVLGdCQUFrQmQsRUFBTWMsZ0JBRTdCcEIsUUFBUXFCLFlBQVlDLFdBQVcsR0FBSSxpQkFBa0IsaUJBQWtCWixLQUFLRyxNQUFRLFNBQVVVLEdBQ2hGYixLQUFLaEMsSUFBTzZDLEVBQVUsR0FDdEJiLEtBQUtoQyxJQUFJOEMsUUFBUUMsRUFBSWYsS0FBS2hDLElBQUk4QyxRQUFRRSxFQUFJaEIsS0FBS2hDLElBQUk4QyxRQUFRRyxFQUFJLEVBQy9EakIsS0FBS0ssTUFBUWYsUUFBUTRCLEtBQUtDLFlBQVksUUFBUyxHQUFLaEIsT0FDdkRILEtBQUtLLE1BQU1lLFNBQVNKLEVBQUssRUFDekJoQixLQUFLSyxNQUFNZ0IsT0FBU1IsRUFBVSxHQUM5QkEsRUFBVSxHQUFHUSxPQUFTUixFQUFVLEdBQ2hDQSxFQUFVLEdBQUdRLE9BQVNSLEVBQVUsR0FDaENBLEVBQVUsR0FBR1EsT0FBU1IsRUFBVSxFQUNoQyxLQUFJLEdBQUlTLEdBQUksRUFBR0EsRUFBSVQsRUFBVWYsT0FBUXdCLElBQ3BDVCxFQUFVUyxHQUFHQyxpQkFBa0IsQ0FFaEMsSUFBSUMsR0FBZ0IsR0FBSWxDLFNBQVFtQyxpQkFBaUIsWUFBYXpCLEtBQUtHLE1BQ25FcUIsR0FBY0UsZUFBaUIsR0FBSXBDLFNBQVFxQyxRQUFRM0IsS0FBS08sVUFBV1AsS0FBS0csT0FDeEVxQixFQUFjSSxpQkFBa0IsRUFDaEM1QixLQUFLSyxNQUFNd0IsU0FBV0wsRUFDdEJ4QixLQUFLaEMsSUFBSThELFVBQVlDLFNBQVNuQyxFQUFNb0MsWUFDN0NoQyxLQUFLaEMsSUFBSWlFLFdBQWFyQyxFQUFNc0MsWUFDNUJsQyxLQUFLaEMsSUFBSW9ELFNBQVd4QixFQUFNdUMsVUFDMUJuQyxLQUFLaEMsSUFBSW9FLFNBQVd4QyxFQUFNeUMsVUFDMUJyQyxLQUFLc0MsU0FDSnJDLEtBQUtELEtBQUtDLEtBQ1ZzQyxLQUFNdkMsS0FBS3dDLFlBQ1huQyxNQUFPTCxLQUFLSyxNQUNackMsSUFBSWdDLEtBQUtoQyxJQUVWLEtBQUksR0FBSXNELEdBQUksRUFBR0EsRUFBSXRCLEtBQUtHLE1BQU1zQyxRQUFRM0MsT0FBUXdCLElBQzdDdEIsS0FBS0csTUFBTXNDLFFBQVFuQixHQUFHb0IsVUFBWSxTQUFVQyxHQUN2Q0EsRUFBUUMsVUFBWS9CLEVBQVUsR0FBRytCLFVBQWE1QyxLQUFLTSxVQUFvQyxNQUF4Qk4sS0FBS1UsZ0JBSTVDLE1BQXhCVixLQUFLVSxrQkFDUFYsS0FBS0csTUFBTTBDLGFBQWF6QixTQUFXbEMsWUFBQU0sTUFBTXNELFVBQVU5QyxLQUFLVSxtQkFKekRWLEtBQUtNLFVBQVcsRUFDaEJ5QyxPQUFPQyxTQUFXcEQsRUFBTWEsT0FRM0J4QixLQUFJZ0UsVUFBVUMsT0FBT2xELEtBQUtzQyxVQUNuQmEsS0FBS25ELE9BNkJoQm5CLFNBQVFjLFNBQVdBIiwiZmlsZSI6ImNvcmUvbHNkL2NvbXBvbmVudHMvY19wb3J0YWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBDRVMgZnJvbSAnY2VzJztcbmV4cG9ydCB7IEJBQllMT04gfSBmcm9tICcuLi9saWIvYmFieWxvbic7XG5pbXBvcnQgeyB1dGlscyB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcbnZhciBkZWZhdWx0cyA9IHV0aWxzLmRlZmF1bHRBcmdzKCk7XG5kZWZhdWx0cy5fbmFtZSA9ICdwb3J0YWwnO1xuLyoqXG4gKiAuLi5cbiAqIEBhdXRob3IgQnJlbmRvbiBTbWl0aFxuICogaHR0cDovL3NlYWNsb3VkOS5vcmdcbiAqIExpZ2h0V2VpZ2h0IDNEIFN5c3RlbSBEZXNpZ24gZW5naW5lXG4gKi9cbmV4cG9ydCBjbGFzcyBjX3BvcnRhbCB7XG5cdGNvbnN0cnVjdG9yKF9vcHRzID0gZGVmYXVsdHMpe1xuXHRcdHRoaXMubmFtZSA9IF9vcHRzLl9uYW1lICsgdXRpbHMuZ3VpZCgpO1xuXHRcdHRoaXMuc2NlbmUgPSAgX29wdHMuX3NjZW5lO1xuXHRcdHRoaXMub2JqID0gbnVsbDtcblx0XHR0aGlzLnBsYW5lID0gbnVsbDtcblx0XHR0aGlzLmhhZEZpcmVkID0gZmFsc2U7XG5cdFx0dGhpcy5wb3J0YWxJbWcgPSBfb3B0cy5fcG9ydGFsSW1nO1xuXHRcdHRoaXMuX2hyZWYgPSBfb3B0cy5faHJlZjtcblx0XHR0aGlzLl9wb3J0YWxQb3NpdGlvbiA9IF9vcHRzLl9wb3J0YWxQb3NpdGlvbjtcblxuXHRcdEJBQllMT04uU2NlbmVMb2FkZXIuSW1wb3J0TWVzaChcIlwiLCBcIi9hc3NldHMvc2NlbmUvXCIsIFwicG9ydGFsLmJhYnlsb25cIiwgdGhpcy5zY2VuZSAsIGZ1bmN0aW9uIChuZXdNZXNoZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm9iaiAgPSBuZXdNZXNoZXNbMF07XG4gICAgICAgICAgICAgICAgdGhpcy5vYmouc2NhbGluZy54ID0gdGhpcy5vYmouc2NhbGluZy55ID0gdGhpcy5vYmouc2NhbGluZy56ID0gMztcbiAgICAgICAgICAgICAgICB0aGlzLnBsYW5lID0gQkFCWUxPTi5NZXNoLkNyZWF0ZVBsYW5lKFwicGxhbmVcIiwgMC41LCBzY2VuZSk7XG4gICAgICAgICAgICBcdHRoaXMucGxhbmUucG9zaXRpb24ueSA9ICAxO1xuICAgICAgICAgICAgXHR0aGlzLnBsYW5lLnBhcmVudCA9IG5ld01lc2hlc1swXTtcbiAgICAgICAgICAgIFx0bmV3TWVzaGVzWzFdLnBhcmVudCA9IG5ld01lc2hlc1swXTtcbiAgICAgICAgICAgIFx0bmV3TWVzaGVzWzJdLnBhcmVudCA9IG5ld01lc2hlc1swXTtcbiAgICAgICAgICAgIFx0bmV3TWVzaGVzWzNdLnBhcmVudCA9IG5ld01lc2hlc1swXTtcbiAgICAgICAgICAgIFx0Zm9yKGxldCBpID0gMDsgaSA8IG5ld01lc2hlcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBcdFx0bmV3TWVzaGVzW2ldLmNoZWNrQ29sbGlzaW9ucyA9IHRydWU7XG4gICAgICAgICAgICBcdH1cblx0ICAgICAgICAgICAgdmFyIG1hdGVyaWFsUGxhbmUgPSBuZXcgQkFCWUxPTi5TdGFuZGFyZE1hdGVyaWFsKFwicG9ydGFsSW1nXCIsIHRoaXMuc2NlbmUpO1xuXHQgICAgICAgICAgICBtYXRlcmlhbFBsYW5lLmRpZmZ1c2VUZXh0dXJlID0gbmV3IEJBQllMT04uVGV4dHVyZSh0aGlzLnBvcnRhbEltZywgdGhpcy5zY2VuZSk7XG5cdCAgICAgICAgICAgIG1hdGVyaWFsUGxhbmUuYmFja0ZhY2VDdWxsaW5nID0gZmFsc2U7XG5cdCAgICAgICAgICAgIHRoaXMucGxhbmUubWF0ZXJpYWwgPSBtYXRlcmlhbFBsYW5lO1xuXHQgICAgICAgICAgICB0aGlzLm9iai5sYXllck1hc2sgPSBwYXJzZUludChfb3B0cy5fbGF5ZXJNYXNrKTtcblx0XHRcdFx0dGhpcy5vYmouaXNQaWNrYWJsZSA9IF9vcHRzLl9pc1BpY2thYmxlO1xuXHRcdFx0XHR0aGlzLm9iai5wb3NpdGlvbiA9IF9vcHRzLl9wb3NpdGlvbjtcblx0XHRcdFx0dGhpcy5vYmoucm90YXRpb24gPSBfb3B0cy5fcm90YXRpb247XG5cdFx0XHRcdHRoaXMub3B0aW9ucyA9IHtcblx0XHRcdFx0XHRuYW1lOnRoaXMubmFtZSAsXG5cdFx0XHRcdFx0aW5pdDogdGhpcy5jb25zdHJ1Y3Rvcixcblx0XHRcdFx0XHRwbGFuZTogdGhpcy5wbGFuZSxcblx0XHRcdFx0XHRvYmo6dGhpcy5vYmpcblx0XHRcdFx0fVxuXHRcdFx0XHRmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5zY2VuZS5jYW1lcmFzLmxlbmd0aDsgaSsrKXtcblx0XHRcdFx0XHR0aGlzLnNjZW5lLmNhbWVyYXNbaV0ub25Db2xsaWRlID0gZnVuY3Rpb24gKGNvbE1lc2gpIHtcblx0XHRcdFx0XHRcdGlmIChjb2xNZXNoLnVuaXF1ZUlkID09IG5ld01lc2hlc1syXS51bmlxdWVJZCAmJiAhdGhpcy5oYWRGaXJlZCAmJiB0aGlzLl9wb3J0YWxQb3NpdGlvbiA9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuaGFkRmlyZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHR3aW5kb3cubG9jYXRpb24gPSBfb3B0cy5faHJlZjtcblx0XHRcdFx0XHRcdH1lbHNle1xuXHRcdFx0XHRcdFx0XHRpZih0aGlzLl9wb3J0YWxQb3NpdGlvbiAhPSBudWxsKXtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLnNjZW5lLmFjdGl2ZUNhbWVyYS5wb3NpdGlvbiA9IHV0aWxzLmdldFZlY3Rvcih0aGlzLl9wb3J0YWxQb3NpdGlvbik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XHRcblx0XHRcdFx0fVxuXHRcdFx0XHRDRVMuQ29tcG9uZW50LmV4dGVuZCh0aGlzLm9wdGlvbnMpO1xuICAgICAgICAgfS5iaW5kKHRoaXMpKTtcblx0fVxuXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9