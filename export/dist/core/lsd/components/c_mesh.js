"use strict";function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}var CES=require("ces"),BABYLON=require("../lib/babylon"),utils=require("../utils/utils"),defaults=utils.defaultArgs();defaults._name="mesh";var c_mesh=function e(){var s=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];switch(_classCallCheck(this,e),this.name=s._name+utils.guid(),this.obj=null,s._type){case"Box":this.obj=BABYLON.Mesh.CreateBox(this.name,s._size,s._scene);break;case"Sphere":this.obj=BABYLON.Mesh.CreateSphere(this.name,s._segments,s._diameter,s._scene);break;case"Plane":this.obj=BABYLON.Mesh.CreatePlane(this.name,s._size,s._scene);break;case"Cylinder":this.obj=BABYLON.Mesh.CreateCylinder(this.name,s._height,s._diameterTop,s._diameterBottom,s._tesselation,s._subdivisions,s._scene,!1);break;case"Torus":this.obj=BABYLON.Mesh.CreateTorus(this.name,s._diameter,s._thickness,s._tesselation,s._scene,!1);break;case"Ribbon":this.obj=BABYLON.Mesh.CreateRibbon(this.name,s._path,s._closeArray=!1,s._closePath=!1,s._offset=0,s._scene,s._updateable=!0,s._sideOreientation=BABYLON.Mesh.DOUBLESIDE,s._instance=void 0);break;default:this.obj=BABYLON.Mesh.CreateBox(this.name,s._size,s._scene)}this.obj.layerMask=parseInt(s._layerMask),this.obj.isPickable=s._isPickable,this.obj.position=s._position,this.obj.rotation=s._rotation,this.options={name:this.name,init:this.constructor,obj:this.obj},CES.Component.extend(this.options)};module.exports=c_mesh;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvbHNkL2NvbXBvbmVudHMvY19tZXNoLmpzIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJDRVMiLCJyZXF1aXJlIiwiQkFCWUxPTiIsInV0aWxzIiwiZGVmYXVsdHMiLCJkZWZhdWx0QXJncyIsIl9uYW1lIiwiY19tZXNoIiwiX29wdHMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJ0aGlzIiwibmFtZSIsImd1aWQiLCJvYmoiLCJfdHlwZSIsIk1lc2giLCJDcmVhdGVCb3giLCJfc2l6ZSIsIl9zY2VuZSIsIkNyZWF0ZVNwaGVyZSIsIl9zZWdtZW50cyIsIl9kaWFtZXRlciIsIkNyZWF0ZVBsYW5lIiwiQ3JlYXRlQ3lsaW5kZXIiLCJfaGVpZ2h0IiwiX2RpYW1ldGVyVG9wIiwiX2RpYW1ldGVyQm90dG9tIiwiX3Rlc3NlbGF0aW9uIiwiX3N1YmRpdmlzaW9ucyIsIkNyZWF0ZVRvcnVzIiwiX3RoaWNrbmVzcyIsIkNyZWF0ZVJpYmJvbiIsIl9wYXRoIiwiX2Nsb3NlQXJyYXkiLCJfY2xvc2VQYXRoIiwiX29mZnNldCIsIl91cGRhdGVhYmxlIiwiX3NpZGVPcmVpZW50YXRpb24iLCJET1VCTEVTSURFIiwiX2luc3RhbmNlIiwibGF5ZXJNYXNrIiwicGFyc2VJbnQiLCJfbGF5ZXJNYXNrIiwiaXNQaWNrYWJsZSIsIl9pc1BpY2thYmxlIiwicG9zaXRpb24iLCJfcG9zaXRpb24iLCJyb3RhdGlvbiIsIl9yb3RhdGlvbiIsIm9wdGlvbnMiLCJpbml0IiwiY29uc3RydWN0b3IiLCJDb21wb25lbnQiLCJleHRlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUVBLFNBQVNBLGlCQUFnQkMsRUFBVUMsR0FBZSxLQUFNRCxZQUFvQkMsSUFBZ0IsS0FBTSxJQUFJQyxXQUFVLHFDQUZoSCxHQUFJQyxLQUFNQyxRQUFRLE9BQ2RDLFFBQVVELFFBQVEsa0JBQ2xCRSxNQUFRRixRQUFRLGtCQUNoQkcsU0FBV0QsTUFBTUUsYUFDckJELFVBQVNFLE1BQVEsTUFZakIsSUFMTUMsUUFDTSxRQUROQSxLQU1MLEdBTFlDLEdBQUtDLFVBQUFDLFFBQUEsR0FBQUMsU0FBQUYsVUFBQSxHQUFHTCxTQUFRSyxVQUFBLEVBRzNCLFFBSURiLGdCQUFnQmdCLEtBUlhMLEdBRUpLLEtBQUtDLEtBQU9MLEVBQU1GLE1BQVFILE1BQU1XLE9BQ2hDRixLQUFLRyxJQUFNLEtBQ0pQLEVBQU1RLE9BQ1QsSUFBSyxNQUNESixLQUFLRyxJQUFLYixRQUFRZSxLQUFLQyxVQUFVTixLQUFLQyxLQUFPTCxFQUFNVyxNQUFPWCxFQUFNWSxPQUNoRSxNQUNKLEtBQUssU0FFUFIsS0FBS0csSUFBTWIsUUFBUWUsS0FBS0ksYUFBYVQsS0FBS0MsS0FBT0wsRUFBTWMsVUFBV2QsRUFBTWUsVUFBV2YsRUFBTVksT0FDbkYsTUFDSixLQUFLLFFBQ0FSLEtBQUtHLElBQU1iLFFBQVFlLEtBQUtPLFlBQVlaLEtBQUtDLEtBQU9MLEVBQU1XLE1BQU9YLEVBQU1ZLE9BQ3BFLE1BQ0osS0FBSyxXQUVQUixLQUFLRyxJQUFNYixRQUFRZSxLQUFLUSxlQUFlYixLQUFLQyxLQUFPTCxFQUFNa0IsUUFBU2xCLEVBQU1tQixhQUFlbkIsRUFBTW9CLGdCQUFpQnBCLEVBQU1xQixhQUFjckIsRUFBTXNCLGNBQWV0QixFQUFNWSxRQUFRLEVBQy9KLE1BQ0osS0FBSyxRQUVQUixLQUFLRyxJQUFNYixRQUFRZSxLQUFLYyxZQUFZbkIsS0FBS0MsS0FBT0wsRUFBTWUsVUFBV2YsRUFBTXdCLFdBQVl4QixFQUFNcUIsYUFBY3JCLEVBQU1ZLFFBQVEsRUFDL0csTUFDSCxLQUFLLFNBRVJSLEtBQUtHLElBQU1iLFFBQVFlLEtBQUtnQixhQUFhckIsS0FBS0MsS0FBTUwsRUFBTTBCLE1BQU8xQixFQUFNMkIsYUFBYyxFQUFPM0IsRUFBTTRCLFlBQWEsRUFBUTVCLEVBQU02QixRQUFVLEVBQUc3QixFQUFNWSxPQUFTWixFQUFNOEIsYUFBYyxFQUFNOUIsRUFBTStCLGtCQUFvQnJDLFFBQVFlLEtBQUt1QixXQUFZaEMsRUFBTWlDLFVBQVk5QixPQUM5TyxNQUNKLFNBQ0lDLEtBQUtHLElBQUtiLFFBQVFlLEtBQUtDLFVBQVVOLEtBQUtDLEtBQU1MLEVBQU1XLE1BQU9YLEVBQU1ZLFFBRXZFUixLQUFLRyxJQUFJMkIsVUFBWUMsU0FBU25DLEVBQU1vQyxZQUNwQ2hDLEtBQUtHLElBQUk4QixXQUFhckMsRUFBTXNDLFlBQzVCbEMsS0FBS0csSUFBSWdDLFNBQVd2QyxFQUFNd0MsVUFDMUJwQyxLQUFLRyxJQUFJa0MsU0FBV3pDLEVBQU0wQyxVQUMxQnRDLEtBQUt1QyxTQUNKdEMsS0FBS0QsS0FBS0MsS0FDVnVDLEtBQU14QyxLQUFLeUMsWUFDWHRDLElBQUlILEtBQUtHLEtBRVZmLElBQUlzRCxVQUFVQyxPQUFPM0MsS0FBS3VDLFNBSTVCSyxRQUFPQyxRQUFVbEQiLCJmaWxlIjoiY29yZS9sc2QvY29tcG9uZW50cy9jX21lc2guanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQ0VTID0gcmVxdWlyZSgnY2VzJyk7XG52YXIgQkFCWUxPTiA9IHJlcXVpcmUoJy4uL2xpYi9iYWJ5bG9uJyk7XG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscy91dGlscycpO1xudmFyIGRlZmF1bHRzID0gdXRpbHMuZGVmYXVsdEFyZ3MoKTtcbmRlZmF1bHRzLl9uYW1lID0gJ21lc2gnO1xuLyoqXG4gKiAuLi5cbiAqIEBhdXRob3IgQnJlbmRvbiBTbWl0aFxuICogaHR0cDovL3NlYWNsb3VkOS5vcmdcbiAqIExpZ2h0V2VpZ2h0IDNEIFN5c3RlbSBEZXNpZ24gZW5naW5lXG4gKi9cbmNsYXNzIGNfbWVzaCB7XG5cdGNvbnN0cnVjdG9yKF9vcHRzID0gZGVmYXVsdHMpe1xuXHRcdHRoaXMubmFtZSA9IF9vcHRzLl9uYW1lICsgdXRpbHMuZ3VpZCgpO1xuXHRcdHRoaXMub2JqID0gbnVsbDtcblx0XHRzd2l0Y2goX29wdHMuX3R5cGUpIHtcblx0XHQgICAgY2FzZSAnQm94Jzpcblx0XHQgICAgICAgIHRoaXMub2JqPSBCQUJZTE9OLk1lc2guQ3JlYXRlQm94KHRoaXMubmFtZSAsIF9vcHRzLl9zaXplLCBfb3B0cy5fc2NlbmUpO1xuXHRcdCAgICAgICAgYnJlYWs7XG5cdFx0ICAgIGNhc2UgJ1NwaGVyZSc6XG5cdFx0ICAgICAgICAvLyhuYW1lIG9mIHRoZSBzcGhlcmUsIHNlZ21lbnRzLCBkaWFtZXRlciwgc2NlbmUpIFxuXHRcdFx0XHR0aGlzLm9iaiA9IEJBQllMT04uTWVzaC5DcmVhdGVTcGhlcmUodGhpcy5uYW1lICwgX29wdHMuX3NlZ21lbnRzLCBfb3B0cy5fZGlhbWV0ZXIsIF9vcHRzLl9zY2VuZSk7XG5cdFx0ICAgICAgICBicmVhaztcblx0XHQgICAgY2FzZSAnUGxhbmUnOlxuXHRcdCAgICAgICAgIHRoaXMub2JqID0gQkFCWUxPTi5NZXNoLkNyZWF0ZVBsYW5lKHRoaXMubmFtZSAsIF9vcHRzLl9zaXplLCBfb3B0cy5fc2NlbmUpO1xuXHRcdCAgICAgICAgYnJlYWs7XHRcdCAgICAgICAgXG5cdFx0ICAgIGNhc2UgJ0N5bGluZGVyJzpcblx0XHQgICAgICAgXHQvLyhuYW1lLCBoZWlnaHQsIGRpYW1ldGVyLCB0ZXNzZWxsYXRpb24sIHNjZW5lLCB1cGRhdGFibGUpXG5cdFx0XHRcdHRoaXMub2JqID0gQkFCWUxPTi5NZXNoLkNyZWF0ZUN5bGluZGVyKHRoaXMubmFtZSAsIF9vcHRzLl9oZWlnaHQsIF9vcHRzLl9kaWFtZXRlclRvcCwgIF9vcHRzLl9kaWFtZXRlckJvdHRvbSwgX29wdHMuX3Rlc3NlbGF0aW9uLCBfb3B0cy5fc3ViZGl2aXNpb25zLCBfb3B0cy5fc2NlbmUsIGZhbHNlKTtcblx0XHQgICAgICAgIGJyZWFrO1xuXHRcdCAgICBjYXNlICdUb3J1cyc6XG5cdFx0ICAgICAgICAvLyAobmFtZSwgZGlhbWV0ZXIsIHRoaWNrbmVzcywgdGVzc2VsbGF0aW9uLCBzY2VuZSwgdXBkYXRhYmxlKVxuXHRcdFx0XHR0aGlzLm9iaiA9IEJBQllMT04uTWVzaC5DcmVhdGVUb3J1cyh0aGlzLm5hbWUgLCBfb3B0cy5fZGlhbWV0ZXIsIF9vcHRzLl90aGlja25lc3MsIF9vcHRzLl90ZXNzZWxhdGlvbiwgX29wdHMuX3NjZW5lLCBmYWxzZSk7XG5cdFx0ICAgICAgICBicmVhaztcdFxuXHRcdCAgICAgY2FzZSAnUmliYm9uJzpcblx0XHQgICAgICAgIC8vIChuYW1lOiBzdHJpbmcsIHBhdGhBcnJheTogVmVjdG9yM1tdW10sIGNsb3NlQXJyYXk6IGJvb2xlYW4sIGNsb3NlUGF0aDogYm9vbGVhbiwgb2Zmc2V0OiBudW1iZXIsIHNjZW5lOiBTY2VuZSwgdXBkYXRhYmxlPzogYm9vbGVhbiwgc2lkZU9yaWVudGF0aW9uPzogbnVtYmVyLCBpbnN0YW5jZT86IE1lc2gpXG5cdFx0XHRcdHRoaXMub2JqID0gQkFCWUxPTi5NZXNoLkNyZWF0ZVJpYmJvbih0aGlzLm5hbWUsIF9vcHRzLl9wYXRoLCBfb3B0cy5fY2xvc2VBcnJheSA9IGZhbHNlLCBfb3B0cy5fY2xvc2VQYXRoID0gZmFsc2UsICBfb3B0cy5fb2Zmc2V0ID0gMCwgX29wdHMuX3NjZW5lLCAgX29wdHMuX3VwZGF0ZWFibGUgPSB0cnVlLCBfb3B0cy5fc2lkZU9yZWllbnRhdGlvbiA9IEJBQllMT04uTWVzaC5ET1VCTEVTSURFLCBfb3B0cy5faW5zdGFuY2UgPSB1bmRlZmluZWQpO1xuXHRcdCAgICAgICAgYnJlYWs7XHQgICAgICAgICAgICBcdFx0ICAgICAgICBcblx0XHQgICAgZGVmYXVsdDpcblx0XHQgICAgICAgIHRoaXMub2JqPSBCQUJZTE9OLk1lc2guQ3JlYXRlQm94KHRoaXMubmFtZSwgX29wdHMuX3NpemUsIF9vcHRzLl9zY2VuZSk7XG5cdFx0IH1cblx0XHR0aGlzLm9iai5sYXllck1hc2sgPSBwYXJzZUludChfb3B0cy5fbGF5ZXJNYXNrKTtcblx0XHR0aGlzLm9iai5pc1BpY2thYmxlID0gX29wdHMuX2lzUGlja2FibGU7XG5cdFx0dGhpcy5vYmoucG9zaXRpb24gPSBfb3B0cy5fcG9zaXRpb247XG5cdFx0dGhpcy5vYmoucm90YXRpb24gPSBfb3B0cy5fcm90YXRpb247XG5cdFx0dGhpcy5vcHRpb25zID0ge1xuXHRcdFx0bmFtZTp0aGlzLm5hbWUgLFxuXHRcdFx0aW5pdDogdGhpcy5jb25zdHJ1Y3Rvcixcblx0XHRcdG9iajp0aGlzLm9ialxuXHRcdH1cblx0XHRDRVMuQ29tcG9uZW50LmV4dGVuZCh0aGlzLm9wdGlvbnMpO1xuXHR9XG5cbn1cbm1vZHVsZS5leHBvcnRzID0gY19tZXNoOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==