"use strict";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t["default"]=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var s=0;s<t.length;s++){var i=t[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,s,i){return s&&e(t.prototype,s),i&&e(t,i),t}}(),_get=function(e,t,s){for(var i=!0;i;){var r=e,n=t,a=s;i=!1,null===r&&(r=Function.prototype);var o=Object.getOwnPropertyDescriptor(r,n);if(void 0!==o){if("value"in o)return o.value;var u=o.get;return void 0===u?void 0:u.call(a)}var l=Object.getPrototypeOf(r);if(null===l)return void 0;e=l,t=n,s=a,i=!0,o=l=void 0}},_ces=require("ces"),CES=_interopRequireWildcard(_ces),_libBabylon=require("../lib/babylon"),BABYLON=_interopRequireWildcard(_libBabylon),_utilsUtils=require("../utils/utils"),defaults=_utilsUtils.utils.defaultArgs();defaults._name="multiuser";var c_multiuser=function(e){function t(){var e=arguments.length<=0||void 0===arguments[0]?defaults:arguments[0];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this),this.name=e._name,this.firebaseRef=e._fbURL,this.scene=e._scene,this.sysInit=!1,this.userInit=!1,_utilsUtils.utils.loadScript("https://cdn.firebase.com/js/client/2.3.0/firebase.js",this.setMultiUserData.bind(this))}return _inherits(t,e),_createClass(t,[{key:"setMultiUserData",value:function(){this.multiuser=new Firebase(this.firebaseRef),this.users=new Firebase(this.firebaseRef+"users"),this.user={name:null,position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0},sprite:null},this.currentUsers=[],this.fakeUser=["Tom","Richard","Jane","John","Dan","Josh","Brendon","Emma","Peter"],this.spriteImg="assets/sprites/users.png",this.sprites=[],this.Alerts=new Firebase(this.firebaseRef+"alerts"),this.currentAlerts=[],this.currentUserKey=null,this.executeUserRemoval=null,this.userToUpdate=this.firebaseRef+"users/",this.spriteAnimations=[20,40,60,80],this.zombieMode=!1,this.isCurrentlyUsing=!1,this.spManager=null,this.playerSprite=null,this.spriteID=20,this.initSys()}},{key:"initSys",value:function(){this.setUser(null,new BABYLON.Vector3(0,0,0)),this.spManager=new BABYLON.SpriteManager("userManager",this.spriteImg,1e3,128,this.scene),this.spManager.layerMask=3,this.playerSprite=new BABYLON.Sprite("player",this.spManager),this.playerSprite.isPickable=!0,this.zombieMode?this.playerSprite.playAnimation(80,100,!0,100):this.playerSprite.playAnimation(Math.abs(20-this.user.spriteID),parseInt(this.user.spriteID),!0,100),this.playerSprite.position=new BABYLON.Vector3(this.user.position.x,this.user.position.y,this.user.position.z),this.sprites.push({sprite:this.playerSprite,key:this.currentUserKey}),window.requestAnimationFrame(function(){this.Alerts.on("child_added",function(e){this.currentAlerts.push(e.val())}.bind(this)),this.Alerts.once("value",function(e){e.forEach(function(e){this.currentAlerts.push(e.val())}.bind(this))}.bind(this)),this.users.on("child_changed",function(e){for(var t=0;t<this.currentUsers.length;t++)e.key()==this.currentUsers[t].key&&(this.currentUsers[t].data=e.val())}.bind(this)),this.users.once("value",function(e){this.checkUsers(e)}.bind(this)),this.sysInit=!0,setTimeout(function(){this.addUsers()}.bind(this),500)}.bind(this))}},{key:"addUsers",value:function(){for(var e=0;e<this.currentUsers.length;e++)this.currentUsers[e].key!=this.currentUserKey&&this.generateUserSprites(this.currentUsers[e],e);this.userInit=!0}},{key:"checkUsers",value:function(e){var t=!1;e.forEach(function(s){null!=window.localStorage.getItem("vr_user_key")&&s.key()==window.localStorage.getItem("vr_user_key")&&(this.user=s.val(),this.currentUserKey=s.key(),this.userToUpdate+=s.key(),this.userToUpdate=new Firebase(this.userToUpdate),this.isCurrentlyUsing=!0),void 0!=s.val().name&&void 0!=s.val().position&&void 0!=s.val().rotation&&void 0!=s.val().sprite&&void 0!=s.val().spriteID&&(t||(t=!0,e.forEach(function(e){this.currentUsers.push({data:e.val(),key:e.key()})}.bind(this))))}.bind(this))}},{key:"generateUserSprites",value:function(e,t){var s=new BABYLON.SpriteManager(e.key,e.data.sprite,1,128,this.scene);s.layerMask=3,s.texture=this.spManager.texture.clone();var i=new BABYLON.Sprite(e.key,s);i.isPickable=!0,i.position=void 0!=typeof e.data.position?e.data.position:new BABYLON.Vector3(this.user.position.x,this.user.position.y,this.user.position.z),i.size=14,e.data.zombieMode?i.playAnimation(80,100,!0,100):i.playAnimation(Math.abs(20-parseInt(e.data.spriteID)),parseInt(e.data.spriteID),!0,100),this.sprites.push({sprite:i,key:e.key})}},{key:"deleteUser",value:function(e){var t=new Firebase(this.firebaseRef+"users/"+e);t.once("value",function(s){var i=BABYLON.Mesh.CreateBox("foutain",1,this.babylonMod.scene);i.isVisible=!1,i.position=new BABYLON.Vector3(s.val().position.x,s.val().position.y,s.val().position.z);var r=new BABYLON.ParticleSystem("particles",1e3,this.babylonMod.scene);r.particleTexture=new BABYLON.Texture("bartvr/img/textures/flare.png",this.babylonMod.scene),r.emitter=i,r.minEmitBox=new BABYLON.Vector3(-1,0,0),r.maxEmitBox=new BABYLON.Vector3(1,0,0),r.color1=new BABYLON.Color4(.7,.8,1,1),r.color2=new BABYLON.Color4(.2,.5,1,1),r.colorDead=new BABYLON.Color4(0,0,.2,0),r.minSize=.1,r.maxSize=.5,r.minLifeTime=.1,r.maxLifeTime=.3,r.emitRate=1e3,r.blendMode=BABYLON.ParticleSystem.BLENDMODE_ONEONE,r.gravity=new BABYLON.Vector3(0,-9.81,0),r.direction1=new BABYLON.Vector3(-4,6,4),r.direction2=new BABYLON.Vector3(4,6,-4),r.minEmitPower=1,r.maxEmitPower=3,r.updateSpeed=.005,r.start(),setTimeout(function(){r.stop(),r.dispose();for(var s=0;s<this.scene.spriteManagers.length;s++)this.scene.spriteManagers[s].name==e&&this.scene.spriteManagers[s].dispose();t.remove()}.bind(this),5e3)}.bind(this),function(e){console.log(e)})}},{key:"setUser",value:function(){var e=(arguments.length<=0||void 0===arguments[0]?{name:"userName",position:{x:0,y:0,z:0}}:arguments[0],arguments.length<=1||void 0===arguments[1]?{}:arguments[1]);if(null==window.localStorage.getItem("vr_user")){e.x=_utilsUtils.utils.randomPos(-85,2),e.y=0,e.z=_utilsUtils.utils.randomPos(5,15);var t=null;t=null==this.user.name?_utilsUtils.utils.randomArr(this.fakeUser):this.user.name;try{window.localStorage.setItem("vr_user",t)}catch(s){alert("please allow local storage please disable private mode")}this.user={name:t,position:e,rotation:new BABYLON.Vector3(0,0,0),sprite:this.spriteImg,spriteID:_utilsUtils.utils.randomArr(this.spriteAnimations)},this.users.once("value",function(e){this.checkUsers(e)}.bind(this)),this.users=this.users.push(this.user),this.currentUserKey=this.users.key();try{window.localStorage.setItem("vr_user_key",this.currentUserKey)}catch(s){console.log(s)}}}},{key:"updateUser",value:function(e,t){this.sysInit&&(this.isCurrentlyUsing?this.userToUpdate.set({name:this.user.name,position:e,rotation:t,sprite:this.user.sprite,spriteID:this.user.spriteID}):null!=this.user.name&&this.users.set({name:this.user.name,position:e,rotation:t,sprite:this.user.sprite,spriteID:this.user.spriteID}))}},{key:"debug",value:function(){}}]),t}(CES.Component);exports.c_multiuser=c_multiuser;
//# sourceMappingURL=data:application/json;base64,